(21:32 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(21:32 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(21:32 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(21:32 INFO) [40;37;1m - 12/02/19 21:32:38 - starting ANNZ[0m
(21:32 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:32 INFO)    [34msplitTypeTrain[0m[31m=[0m'[32mANNz_data8a.csv[0m' , [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34minDirName[0m[31m=[0m'[32mPAUS/[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34msplitTypeTest[0m[31m=[0m'[32mANNz_data8b.csv[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34minAsciiVars[0m[31m=[0m'[32mF:ref_id;F:zb;F:pz_width;F:odds;F:qz;F:production_id;F:paudm_id;F:ra;F:dec;F:zspec;F:conf;F:i_auto;F:umag;F:bmag;F:vmag;F:gmag;F:rmag;F:jmag;F:kmag;F:i_auto_err;F:umag_err;F:bmag_err;F:vmag_err;F:gmag_err;F:rmag_err;F:jmag_err;F:kmag_err;F:band0_flux;F:band1_flux;F:band2_flux;F:band3_flux;F:band4_flux;F:band5_flux;F:band6_flux;F:band7_flux;F:band8_flux;F:band9_flux;F:band10_flux;F:band11_flux;F:band12_flux;F:band13_flux;F:band14_flux;F:band15_flux;F:band16_flux;F:band17_flux;F:band18_flux;F:band19_flux;F:band20_flux;F:band21_flux;F:band22_flux;F:band23_flux;F:band24_flux;F:band25_flux;F:band26_flux;F:band27_flux;F:band28_flux;F:band29_flux;F:band30_flux;F:band31_flux;F:band32_flux;F:band33_flux;F:band34_flux;F:band35_flux;F:band36_flux;F:band37_flux;F:band38_flux;F:band39_flux;F:band0_flux_error;F:band1_flux_error;F:band2_flux_error;F:band3_flux_error;F:band4_flux_error;F:band5_flux_error;F:band6_flux_error;F:band7_flux_error;F:band8_flux_error;F:band9_flux_error;F:band10_flux_error;F:band11_flux_error;F:band12_flux_error;F:band13_flux_error;F:band14_flux_error;F:band15_flux_error;F:band16_flux_error;F:band17_flux_error;F:band18_flux_error;F:band19_flux_error;F:band20_flux_error;F:band21_flux_error;F:band22_flux_error;F:band23_flux_error;F:band24_flux_error;F:band25_flux_error;F:band26_flux_error;F:band27_flux_error;F:band28_flux_error;F:band29_flux_error;F:band30_flux_error;F:band31_flux_error;F:band32_flux_error;F:band33_flux_error;F:band34_flux_error;F:band35_flux_error;F:band36_flux_error;F:band37_flux_error;F:band38_flux_error;F:band39_flux_error[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mTrue[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:32 INFO) 
[21:32:38    INFO]  -----------------------------------------------------
[21:32:38    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:32:38    INFO]  -----------------------------------------------------------------------------------------------------------
[21:32:40    INFO]  - starting inputToSplitTree() ... 
[21:32:40    INFO]  - Found 13465 lines in file PAUS/ANNz_data8a.csv -> total so far = 13465 ... 
[21:32:41    INFO]  - Found 3366 lines in file PAUS/ANNz_data8b.csv -> total so far = 3366 ... 
[21:32:41    INFO]  - Now reading-in PAUS/ANNz_data8a.csv ... 
[21:32:42    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:32:42    INFO]  -- ANNZ_tree .......................................... 0  index
[21:32:42    INFO]  -- ANNZ_tree ...................................... 13465  nLine
[21:32:42    INFO]  -- ANNZ_tree ...................................... 13465  nLineFile
[21:32:42    INFO]  -- ANNZ_tree ...................................... 13465  nObj
[21:32:42    INFO]  -- ANNZ_tree .......................................... 0  nTest
[21:32:42    INFO]  -- ANNZ_tree ...................................... 13465  nTrain
[21:32:42    INFO]  -----------------------------------------------------------------------------------------------------------
[21:32:42    INFO]  - Now reading-in PAUS/ANNz_data8b.csv ... 
[21:32:42    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:32:42    INFO]  -- ANNZ_tree .......................................... 0  index
[21:32:42    INFO]  -- ANNZ_tree ...................................... 16831  nLine
[21:32:42    INFO]  -- ANNZ_tree ....................................... 3366  nLineFile
[21:32:42    INFO]  -- ANNZ_tree ....................................... 3366  nObj
[21:32:42    INFO]  -- ANNZ_tree ....................................... 3366  nTest
[21:32:42    INFO]  -- ANNZ_tree ...................................... 13465  nTrain
[21:32:42    INFO]  -----------------------------------------------------------------------------------------------------------
[21:32:43    INFO]  - Writing to plotting directory output/PAUS_advanced10/rootIn/plots/
[21:32:44    INFO]  - Writing to plotting directory output/PAUS_advanced10/rootIn/plots/

(21:32 INFO) [40;37;1m - 12/02/19 21:32:46 - finished running ANNZ ![0m
(21:33 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(21:33 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(21:33 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(21:33 INFO) [40;37;1m - 12/02/19 21:33:22 - starting ANNZ[0m
(21:33 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:33 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=670:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:33 INFO) 
[21:33:23    INFO]  -----------------------------------------------------
[21:33:23    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:33:23    INFO]  -----------------------------------------------------------------------------------------------------------
[21:33:24    INFO]  - starting ANNZ::Init()  ... 
[21:33:25    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_0/saveOpt.txt ...
[21:33:38    INFO]  - starting ANNZ::Train_singleReg() ... 
[21:33:38    INFO] ----------------------------------------------------------------------------------------------------
[21:33:38    INFO]  - will book (ANNZ_0) method(BDT) with options: :NTrees=670:BoostType=AdaBoost:VarTransform=N,P
[21:33:38    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:33:38    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[21:33:38    INFO]      cuts (train):        ,
[21:33:38    INFO]      cuts (valid):       
[21:33:38    INFO]    - weights:            1
[21:33:38    INFO] ----------------------------------------------------------------------------------------------------
[21:33:38    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:34:03    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_0/ANNZ_0_weights/saveTrainOpt_ANNZ_0.txt ...
[21:34:05    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_0 ... 
[21:34:05    INFO]  - Will gen. input-parameter errors ...
[21:34:06    INFO]  - starting ANNZ::loadReaders() ... 
[21:34:10    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[21:35:34    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:35:34    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:35:34    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[21:35:34    INFO]  -----------------------------------------------------------------------------------------------------------
[21:36:05    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:36:05    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:36:05    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[21:36:05    INFO]  -----------------------------------------------------------------------------------------------------------
[21:36:05    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[21:36:40    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:36:40    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:36:40    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[21:36:40    INFO]  -----------------------------------------------------------------------------------------------------------
[21:36:40    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_0/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:36:41    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:36:41    INFO]  - will try to derive a bias correction ... 
[21:36:41    INFO]  - will validate that training produced an XML file for later ... 
[21:36:41    INFO]  - starting ANNZ::loadReaders() ... 
[21:36:43    INFO]  - will validate that the training was not a complete failure ... 
[21:36:43    INFO]  - training seems to have been successful! will move on ...
[21:36:43    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[21:36:46    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:36:47    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:36:48    INFO] ----------------------------------------------------------------------------------------------------
[21:36:48    INFO]  - will book (ANNZ_0_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[21:36:48    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:36:48    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[21:36:48    INFO]    - weights:            1
[21:36:48    INFO] ----------------------------------------------------------------------------------------------------
[21:36:48    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:36:53    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_0 ... 
[21:36:53    INFO]  - Will gen. input-parameter errors ...
[21:36:54    INFO]  - starting ANNZ::loadReaders() ... 
[21:37:03    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[21:38:54    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:38:54    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:38:54    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[21:38:54    INFO]  -----------------------------------------------------------------------------------------------------------
[21:39:28    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:39:28    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:39:28    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[21:39:28    INFO]  -----------------------------------------------------------------------------------------------------------
[21:39:28    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[21:40:06    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:40:06    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:40:06    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[21:40:06    INFO]  -----------------------------------------------------------------------------------------------------------
[21:40:07    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_0/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:40:08    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:40:08    INFO]  - will validate that the bias-correction actually improved the result ...
[21:40:08    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:40:08    INFO]  - Will use (1) MLMs from the input chain: ANNZ_0,
[21:40:09    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_0/plots/
[21:40:11        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_0/plots output/PAUS_advanced10/regres/train/ANNZ_0/plots_biasCor_before
[21:40:11    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:40:11    INFO]  - Will use (1) MLMs from the input chain: ANNZ_0,
[21:40:12    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_0/plots/
[21:40:15        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_0/plots output/PAUS_advanced10/regres/train/ANNZ_0/plots_biasCor_after
[21:40:15    INFO]  - Got original [KS-test,N_poiss]: [0.0605792 , 4.66084] , after the bias-correction: [0.020965 , 3.71429] --> will KEEP the correction !

(21:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=270:BoostType=AdaBoost:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:40 INFO) 
[21:40:17    INFO]  -----------------------------------------------------
[21:40:17    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:40:17    INFO]  -----------------------------------------------------------------------------------------------------------
[21:40:18    INFO]  - starting ANNZ::Init()  ... 
[21:40:19    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_1/saveOpt.txt ...
[21:40:33    INFO]  - starting ANNZ::Train_singleReg() ... 
[21:40:34    INFO] ----------------------------------------------------------------------------------------------------
[21:40:34    INFO]  - will book (ANNZ_1) method(BDT) with options: :NTrees=270:BoostType=AdaBoost:VarTransform=P
[21:40:34    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:40:34    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[21:40:34    INFO]      cuts (train):        ,
[21:40:34    INFO]      cuts (valid):       
[21:40:34    INFO]    - weights:            1
[21:40:34    INFO] ----------------------------------------------------------------------------------------------------
[21:40:34    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:40:48    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_1/ANNZ_1_weights/saveTrainOpt_ANNZ_1.txt ...
[21:40:50    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_1 ... 
[21:40:50    INFO]  - Will gen. input-parameter errors ...
[21:40:51    INFO]  - starting ANNZ::loadReaders() ... 
[21:40:54    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[21:41:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:41:19    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:41:19    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[21:41:19    INFO]  -----------------------------------------------------------------------------------------------------------
[21:41:28    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:41:28    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:41:28    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[21:41:28    INFO]  -----------------------------------------------------------------------------------------------------------
[21:41:28    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[21:41:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:41:35    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:41:35    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[21:41:35    INFO]  -----------------------------------------------------------------------------------------------------------
[21:41:36    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_1/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:41:36    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:41:36    INFO]  - will try to derive a bias correction ... 
[21:41:36    INFO]  - will validate that training produced an XML file for later ... 
[21:41:36    INFO]  - starting ANNZ::loadReaders() ... 
[21:41:37    INFO]  - will validate that the training was not a complete failure ... 
[21:41:37    INFO]  - training seems to have been successful! will move on ...
[21:41:37    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[21:41:40    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:41:42    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:41:42    INFO] ----------------------------------------------------------------------------------------------------
[21:41:42    INFO]  - will book (ANNZ_1_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[21:41:42    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:41:42    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[21:41:42    INFO]    - weights:            1
[21:41:42    INFO] ----------------------------------------------------------------------------------------------------
[21:41:42    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:41:47    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_1 ... 
[21:41:47    INFO]  - Will gen. input-parameter errors ...
[21:41:48    INFO]  - starting ANNZ::loadReaders() ... 
[21:41:52    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[21:42:42    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:42:42    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:42:42    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[21:42:42    INFO]  -----------------------------------------------------------------------------------------------------------
[21:43:04    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:43:04    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:43:04    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[21:43:04    INFO]  -----------------------------------------------------------------------------------------------------------
[21:43:04    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[21:43:21    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:43:21    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:43:21    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[21:43:21    INFO]  -----------------------------------------------------------------------------------------------------------
[21:43:21    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_1/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:43:22    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:43:22    INFO]  - will validate that the bias-correction actually improved the result ...
[21:43:22    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:43:22    INFO]  - Will use (1) MLMs from the input chain: ANNZ_1,
[21:43:23    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_1/plots/
[21:43:26        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_1/plots output/PAUS_advanced10/regres/train/ANNZ_1/plots_biasCor_before
[21:43:26    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:43:26    INFO]  - Will use (1) MLMs from the input chain: ANNZ_1,
[21:43:27    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_1/plots/
[21:43:29        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_1/plots output/PAUS_advanced10/regres/train/ANNZ_1/plots_biasCor_after
[21:43:29    INFO]  - Got original [KS-test,N_poiss]: [0.0508502 , 4.20978] , after the bias-correction: [0.0192537 , 3.5583] --> will KEEP the correction !

(21:43 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:43 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:43 INFO) 
[21:43:31    INFO]  -----------------------------------------------------
[21:43:31    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:43:31    INFO]  -----------------------------------------------------------------------------------------------------------
[21:43:32    INFO]  - starting ANNZ::Init()  ... 
[21:43:33    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_2/saveOpt.txt ...
[21:43:47    INFO]  - starting ANNZ::Train_singleReg() ... 
[21:43:48    INFO] ----------------------------------------------------------------------------------------------------
[21:43:48    INFO]  - will book (ANNZ_2) method(BDT) with options: :NTrees=490:BoostType=AdaBoost:VarTransform=N,P
[21:43:48    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:43:48    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[21:43:48    INFO]      cuts (train):        ,
[21:43:48    INFO]      cuts (valid):       
[21:43:48    INFO]    - weights:            1
[21:43:48    INFO] ----------------------------------------------------------------------------------------------------
[21:43:48    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:44:10    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_2/ANNZ_2_weights/saveTrainOpt_ANNZ_2.txt ...
[21:44:12    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_2 ... 
[21:44:12    INFO]  - Will gen. input-parameter errors ...
[21:44:13    INFO]  - starting ANNZ::loadReaders() ... 
[21:44:17    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[21:45:27    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:45:27    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:45:27    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[21:45:27    INFO]  -----------------------------------------------------------------------------------------------------------
[21:45:47    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:45:47    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:45:47    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[21:45:47    INFO]  -----------------------------------------------------------------------------------------------------------
[21:45:47    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[21:46:08    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:46:08    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:46:08    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[21:46:08    INFO]  -----------------------------------------------------------------------------------------------------------
[21:46:08    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_2/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:46:09    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:46:09    INFO]  - will try to derive a bias correction ... 
[21:46:09    INFO]  - will validate that training produced an XML file for later ... 
[21:46:09    INFO]  - starting ANNZ::loadReaders() ... 
[21:46:10    INFO]  - will validate that the training was not a complete failure ... 
[21:46:10    INFO]  - training seems to have been successful! will move on ...
[21:46:10    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[21:46:13    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:46:14    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:46:15    INFO] ----------------------------------------------------------------------------------------------------
[21:46:15    INFO]  - will book (ANNZ_2_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[21:46:15    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:46:15    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[21:46:15    INFO]    - weights:            1
[21:46:15    INFO] ----------------------------------------------------------------------------------------------------
[21:46:15    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:46:19    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_2 ... 
[21:46:19    INFO]  - Will gen. input-parameter errors ...
[21:46:21    INFO]  - starting ANNZ::loadReaders() ... 
[21:46:26    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[21:48:01    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:48:01    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:48:01    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[21:48:01    INFO]  -----------------------------------------------------------------------------------------------------------
[21:48:32    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:48:32    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:48:32    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[21:48:32    INFO]  -----------------------------------------------------------------------------------------------------------
[21:48:32    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[21:49:02    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:49:02    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:49:02    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[21:49:02    INFO]  -----------------------------------------------------------------------------------------------------------
[21:49:02    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_2/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:49:03    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:49:03    INFO]  - will validate that the bias-correction actually improved the result ...
[21:49:03    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:49:03    INFO]  - Will use (1) MLMs from the input chain: ANNZ_2,
[21:49:04    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_2/plots/
[21:49:09        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_2/plots output/PAUS_advanced10/regres/train/ANNZ_2/plots_biasCor_before
[21:49:09    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:49:09    INFO]  - Will use (1) MLMs from the input chain: ANNZ_2,
[21:49:10    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_2/plots/
[21:49:14        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_2/plots output/PAUS_advanced10/regres/train/ANNZ_2/plots_biasCor_after
[21:49:14    INFO]  - Got original [KS-test,N_poiss]: [0.0605792 , 4.66673] , after the bias-correction: [0.0209628 , 3.6471] --> will KEEP the correction !

(21:49 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:49 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=540:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:49 INFO) 
[21:49:16    INFO]  -----------------------------------------------------
[21:49:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:49:16    INFO]  -----------------------------------------------------------------------------------------------------------
[21:49:18    INFO]  - starting ANNZ::Init()  ... 
[21:49:19    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_3/saveOpt.txt ...
[21:49:33    INFO]  - starting ANNZ::Train_singleReg() ... 
[21:49:33    INFO] ----------------------------------------------------------------------------------------------------
[21:49:33    INFO]  - will book (ANNZ_3) method(BDT) with options: :NTrees=540:BoostType=Bagging:VarTransform=N
[21:49:33    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:49:33    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[21:49:33    INFO]      cuts (train):        ,
[21:49:33    INFO]      cuts (valid):       
[21:49:33    INFO]    - weights:            1
[21:49:33    INFO] ----------------------------------------------------------------------------------------------------
[21:49:33    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:50:10    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_3/ANNZ_3_weights/saveTrainOpt_ANNZ_3.txt ...
[21:50:13    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_3 ... 
[21:50:13    INFO]  - Will gen. input-parameter errors ...
[21:50:15    INFO]  - starting ANNZ::loadReaders() ... 
[21:50:24    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[21:52:07    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:52:07    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:52:07    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[21:52:07    INFO]  -----------------------------------------------------------------------------------------------------------
[21:52:45    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:52:45    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:52:45    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[21:52:45    INFO]  -----------------------------------------------------------------------------------------------------------
[21:52:45    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[21:53:16    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:53:16    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:53:16    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[21:53:16    INFO]  -----------------------------------------------------------------------------------------------------------
[21:53:16    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_3/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:53:18    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:53:18    INFO]  - will try to derive a bias correction ... 
[21:53:18    INFO]  - will validate that training produced an XML file for later ... 
[21:53:18    INFO]  - starting ANNZ::loadReaders() ... 
[21:53:22    INFO]  - will validate that the training was not a complete failure ... 
[21:53:22    INFO]  - training seems to have been successful! will move on ...
[21:53:22    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[21:53:26    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:53:27    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:53:28    INFO] ----------------------------------------------------------------------------------------------------
[21:53:28    INFO]  - will book (ANNZ_3_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[21:53:28    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:53:28    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[21:53:28    INFO]    - weights:            1
[21:53:28    INFO] ----------------------------------------------------------------------------------------------------
[21:53:28    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:53:33    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_3 ... 
[21:53:33    INFO]  - Will gen. input-parameter errors ...
[21:53:36    INFO]  - starting ANNZ::loadReaders() ... 
[21:53:49    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[21:55:58    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:55:58    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:55:58    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[21:55:58    INFO]  -----------------------------------------------------------------------------------------------------------
[21:56:42    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:56:42    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:56:42    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[21:56:42    INFO]  -----------------------------------------------------------------------------------------------------------
[21:56:42    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[21:57:24    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:57:24    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:57:24    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[21:57:24    INFO]  -----------------------------------------------------------------------------------------------------------
[21:57:24    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_3/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:57:25    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:57:25    INFO]  - will validate that the bias-correction actually improved the result ...
[21:57:25    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:57:25    INFO]  - Will use (1) MLMs from the input chain: ANNZ_3,
[21:57:27    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_3/plots/
[21:57:29        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_3/plots output/PAUS_advanced10/regres/train/ANNZ_3/plots_biasCor_before
[21:57:29    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:57:29    INFO]  - Will use (1) MLMs from the input chain: ANNZ_3,
[21:57:30    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_3/plots/
[21:57:33        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_3/plots output/PAUS_advanced10/regres/train/ANNZ_3/plots_biasCor_after
[21:57:33    INFO]  - Got original [KS-test,N_poiss]: [0.0379721 , 4.81747] , after the bias-correction: [0.0272737 , 4.33725] --> will KEEP the correction !

(21:57 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:57 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=380:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:57 INFO) 
[21:57:35    INFO]  -----------------------------------------------------
[21:57:35    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:57:35    INFO]  -----------------------------------------------------------------------------------------------------------
[21:57:37    INFO]  - starting ANNZ::Init()  ... 
[21:57:38    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_4/saveOpt.txt ...
[21:57:53    INFO]  - starting ANNZ::Train_singleReg() ... 
[21:57:53    INFO] ----------------------------------------------------------------------------------------------------
[21:57:53    INFO]  - will book (ANNZ_4) method(BDT) with options: :NTrees=380:BoostType=AdaBoost:VarTransform=N
[21:57:53    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:57:53    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[21:57:53    INFO]      cuts (train):        ,
[21:57:53    INFO]      cuts (valid):       
[21:57:53    INFO]    - weights:            1
[21:57:53    INFO] ----------------------------------------------------------------------------------------------------
[21:57:54    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:58:12    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_4/ANNZ_4_weights/saveTrainOpt_ANNZ_4.txt ...
[21:58:14    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_4 ... 
[21:58:14    INFO]  - Will gen. input-parameter errors ...
[21:58:16    INFO]  - starting ANNZ::loadReaders() ... 
[21:58:20    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[21:59:11    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:59:11    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:59:11    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[21:59:11    INFO]  -----------------------------------------------------------------------------------------------------------
[21:59:27    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:59:27    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:59:27    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[21:59:27    INFO]  -----------------------------------------------------------------------------------------------------------
[21:59:27    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[21:59:43    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:59:43    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[21:59:43    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[21:59:43    INFO]  -----------------------------------------------------------------------------------------------------------
[21:59:43    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_4/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:59:44    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:59:44    INFO]  - will try to derive a bias correction ... 
[21:59:44    INFO]  - will validate that training produced an XML file for later ... 
[21:59:44    INFO]  - starting ANNZ::loadReaders() ... 
[21:59:45    INFO]  - will validate that the training was not a complete failure ... 
[21:59:45    INFO]  - training seems to have been successful! will move on ...
[21:59:45    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[21:59:48    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:59:50    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:59:50    INFO] ----------------------------------------------------------------------------------------------------
[21:59:50    INFO]  - will book (ANNZ_4_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[21:59:50    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:59:50    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[21:59:50    INFO]    - weights:            1
[21:59:50    INFO] ----------------------------------------------------------------------------------------------------
[21:59:50    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:59:54    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_4 ... 
[21:59:54    INFO]  - Will gen. input-parameter errors ...
[21:59:56    INFO]  - starting ANNZ::loadReaders() ... 
[22:00:00    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:01:26    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:01:26    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:01:26    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:01:26    INFO]  -----------------------------------------------------------------------------------------------------------
[22:01:50    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:01:50    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:01:50    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:01:50    INFO]  -----------------------------------------------------------------------------------------------------------
[22:01:50    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:02:13    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:02:13    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:02:13    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:02:13    INFO]  -----------------------------------------------------------------------------------------------------------
[22:02:13    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_4/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:02:14    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:02:14    INFO]  - will validate that the bias-correction actually improved the result ...
[22:02:14    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:02:14    INFO]  - Will use (1) MLMs from the input chain: ANNZ_4,
[22:02:16    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_4/plots/
[22:02:18        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_4/plots output/PAUS_advanced10/regres/train/ANNZ_4/plots_biasCor_before
[22:02:18    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:02:18    INFO]  - Will use (1) MLMs from the input chain: ANNZ_4,
[22:02:19    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_4/plots/
[22:02:22        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_4/plots output/PAUS_advanced10/regres/train/ANNZ_4/plots_biasCor_after
[22:02:22    INFO]  - Got original [KS-test,N_poiss]: [0.0472616 , 4.92436] , after the bias-correction: [0.0269064 , 4.14187] --> will KEEP the correction !

(22:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(22:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=370:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(22:02 INFO) 
[22:02:24    INFO]  -----------------------------------------------------
[22:02:24    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[22:02:24    INFO]  -----------------------------------------------------------------------------------------------------------
[22:02:25    INFO]  - starting ANNZ::Init()  ... 
[22:02:26    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_5/saveOpt.txt ...
[22:02:41    INFO]  - starting ANNZ::Train_singleReg() ... 
[22:02:42    INFO] ----------------------------------------------------------------------------------------------------
[22:02:42    INFO]  - will book (ANNZ_5) method(BDT) with options: :NTrees=370:BoostType=Bagging:VarTransform=N
[22:02:42    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:02:42    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[22:02:42    INFO]      cuts (train):        ,
[22:02:42    INFO]      cuts (valid):       
[22:02:42    INFO]    - weights:            1
[22:02:42    INFO] ----------------------------------------------------------------------------------------------------
[22:02:42    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:03:10    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_5/ANNZ_5_weights/saveTrainOpt_ANNZ_5.txt ...
[22:03:13    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_5 ... 
[22:03:13    INFO]  - Will gen. input-parameter errors ...
[22:03:15    INFO]  - starting ANNZ::loadReaders() ... 
[22:03:22    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:04:27    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:04:27    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:04:27    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:04:27    INFO]  -----------------------------------------------------------------------------------------------------------
[22:04:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:04:49    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:04:49    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:04:49    INFO]  -----------------------------------------------------------------------------------------------------------
[22:04:49    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:05:12    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:05:12    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:05:12    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:05:12    INFO]  -----------------------------------------------------------------------------------------------------------
[22:05:12    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_5/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:05:13    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:05:13    INFO]  - will try to derive a bias correction ... 
[22:05:13    INFO]  - will validate that training produced an XML file for later ... 
[22:05:13    INFO]  - starting ANNZ::loadReaders() ... 
[22:05:16    INFO]  - will validate that the training was not a complete failure ... 
[22:05:16    INFO]  - training seems to have been successful! will move on ...
[22:05:16    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[22:05:19    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:05:21    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:05:22    INFO] ----------------------------------------------------------------------------------------------------
[22:05:22    INFO]  - will book (ANNZ_5_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[22:05:22    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:05:22    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[22:05:22    INFO]    - weights:            1
[22:05:22    INFO] ----------------------------------------------------------------------------------------------------
[22:05:22    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:05:29    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_5 ... 
[22:05:29    INFO]  - Will gen. input-parameter errors ...
[22:05:31    INFO]  - starting ANNZ::loadReaders() ... 
[22:05:39    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:07:17    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:07:17    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:07:17    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:07:17    INFO]  -----------------------------------------------------------------------------------------------------------
[22:07:52    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:07:52    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:07:52    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:07:52    INFO]  -----------------------------------------------------------------------------------------------------------
[22:07:52    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:08:30    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:08:30    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:08:30    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:08:30    INFO]  -----------------------------------------------------------------------------------------------------------
[22:08:30    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_5/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:08:32    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:08:32    INFO]  - will validate that the bias-correction actually improved the result ...
[22:08:32    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:08:32    INFO]  - Will use (1) MLMs from the input chain: ANNZ_5,
[22:08:34    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_5/plots/
[22:08:38        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_5/plots output/PAUS_advanced10/regres/train/ANNZ_5/plots_biasCor_before
[22:08:38    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:08:38    INFO]  - Will use (1) MLMs from the input chain: ANNZ_5,
[22:08:39    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_5/plots/
[22:08:42        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_5/plots output/PAUS_advanced10/regres/train/ANNZ_5/plots_biasCor_after
[22:08:42    INFO]  - Got original [KS-test,N_poiss]: [0.0377493 , 4.81887] , after the bias-correction: [0.0269041 , 4.30779] --> will KEEP the correction !

(22:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(22:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(22:08 INFO) 
[22:08:45    INFO]  -----------------------------------------------------
[22:08:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[22:08:45    INFO]  -----------------------------------------------------------------------------------------------------------
[22:08:46    INFO]  - starting ANNZ::Init()  ... 
[22:08:47    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_6/saveOpt.txt ...
[22:09:01    INFO]  - starting ANNZ::Train_singleReg() ... 
[22:09:01    INFO] ----------------------------------------------------------------------------------------------------
[22:09:01    INFO]  - will book (ANNZ_6) method(BDT) with options: :NTrees=450:BoostType=AdaBoost:VarTransform=N
[22:09:01    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:09:01    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[22:09:01    INFO]      cuts (train):        ,
[22:09:01    INFO]      cuts (valid):       
[22:09:01    INFO]    - weights:            1
[22:09:01    INFO] ----------------------------------------------------------------------------------------------------
[22:09:02    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:09:23    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_6/ANNZ_6_weights/saveTrainOpt_ANNZ_6.txt ...
[22:09:24    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_6 ... 
[22:09:24    INFO]  - Will gen. input-parameter errors ...
[22:09:26    INFO]  - starting ANNZ::loadReaders() ... 
[22:09:30    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:10:22    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:10:22    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:10:22    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:10:22    INFO]  -----------------------------------------------------------------------------------------------------------
[22:10:43    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:10:43    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:10:43    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:10:43    INFO]  -----------------------------------------------------------------------------------------------------------
[22:10:43    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:11:01    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:11:01    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:11:01    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:11:01    INFO]  -----------------------------------------------------------------------------------------------------------
[22:11:01    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_6/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:11:02    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:11:02    INFO]  - will try to derive a bias correction ... 
[22:11:02    INFO]  - will validate that training produced an XML file for later ... 
[22:11:02    INFO]  - starting ANNZ::loadReaders() ... 
[22:11:03    INFO]  - will validate that the training was not a complete failure ... 
[22:11:03    INFO]  - training seems to have been successful! will move on ...
[22:11:03    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[22:11:06    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:11:07    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:11:08    INFO] ----------------------------------------------------------------------------------------------------
[22:11:08    INFO]  - will book (ANNZ_6_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[22:11:08    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:11:08    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[22:11:08    INFO]    - weights:            1
[22:11:08    INFO] ----------------------------------------------------------------------------------------------------
[22:11:08    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:11:12    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_6 ... 
[22:11:12    INFO]  - Will gen. input-parameter errors ...
[22:11:14    INFO]  - starting ANNZ::loadReaders() ... 
[22:11:19    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:12:48    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:12:48    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:12:48    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:12:48    INFO]  -----------------------------------------------------------------------------------------------------------
[22:13:20    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:13:20    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:13:20    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:13:20    INFO]  -----------------------------------------------------------------------------------------------------------
[22:13:20    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:13:52    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:13:52    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:13:52    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:13:52    INFO]  -----------------------------------------------------------------------------------------------------------
[22:13:53    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_6/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:13:54    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:13:54    INFO]  - will validate that the bias-correction actually improved the result ...
[22:13:54    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:13:54    INFO]  - Will use (1) MLMs from the input chain: ANNZ_6,
[22:13:55    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_6/plots/
[22:13:59        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_6/plots output/PAUS_advanced10/regres/train/ANNZ_6/plots_biasCor_before
[22:13:59    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:13:59    INFO]  - Will use (1) MLMs from the input chain: ANNZ_6,
[22:14:00    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_6/plots/
[22:14:04        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_6/plots output/PAUS_advanced10/regres/train/ANNZ_6/plots_biasCor_after
[22:14:04    INFO]  - Got original [KS-test,N_poiss]: [0.0472616 , 4.92658] , after the bias-correction: [0.0271292 , 4.14581] --> will KEEP the correction !

(22:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(22:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=460:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(22:14 INFO) 
[22:14:07    INFO]  -----------------------------------------------------
[22:14:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[22:14:07    INFO]  -----------------------------------------------------------------------------------------------------------
[22:14:09    INFO]  - starting ANNZ::Init()  ... 
[22:14:10    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_7/saveOpt.txt ...
[22:14:30    INFO]  - starting ANNZ::Train_singleReg() ... 
[22:14:30    INFO] ----------------------------------------------------------------------------------------------------
[22:14:30    INFO]  - will book (ANNZ_7) method(BDT) with options: :NTrees=460:BoostType=AdaBoostR2:VarTransform=N
[22:14:30    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:14:30    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[22:14:30    INFO]      cuts (train):        ,
[22:14:30    INFO]      cuts (valid):       
[22:14:30    INFO]    - weights:            1
[22:14:30    INFO] ----------------------------------------------------------------------------------------------------
[22:14:31    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:15:02    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_7/ANNZ_7_weights/saveTrainOpt_ANNZ_7.txt ...
[22:15:04    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_7 ... 
[22:15:04    INFO]  - Will gen. input-parameter errors ...
[22:15:05    INFO]  - starting ANNZ::loadReaders() ... 
[22:15:16    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:21:45    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:21:45    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:21:45    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:21:45    INFO]  -----------------------------------------------------------------------------------------------------------
[22:24:06    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:24:06    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:24:06    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:24:06    INFO]  -----------------------------------------------------------------------------------------------------------
[22:24:06    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:26:17    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:26:17    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:26:17    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:26:17    INFO]  -----------------------------------------------------------------------------------------------------------
[22:26:17    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_7/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:26:18    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:26:18    INFO]  - will try to derive a bias correction ... 
[22:26:18    INFO]  - will validate that training produced an XML file for later ... 
[22:26:18    INFO]  - starting ANNZ::loadReaders() ... 
[22:26:20    INFO]  - will validate that the training was not a complete failure ... 
[22:26:20    INFO]  - training seems to have been successful! will move on ...
[22:26:20    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[22:26:23    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:26:24    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:26:25    INFO] ----------------------------------------------------------------------------------------------------
[22:26:25    INFO]  - will book (ANNZ_7_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[22:26:25    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:26:25    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[22:26:25    INFO]    - weights:            1
[22:26:25    INFO] ----------------------------------------------------------------------------------------------------
[22:26:25    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:26:30    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_7 ... 
[22:26:30    INFO]  - Will gen. input-parameter errors ...
[22:26:32    INFO]  - starting ANNZ::loadReaders() ... 
[22:26:47    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:34:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:34:49    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:34:49    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:34:49    INFO]  -----------------------------------------------------------------------------------------------------------
[22:37:26    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:37:26    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:37:26    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:37:26    INFO]  -----------------------------------------------------------------------------------------------------------
[22:37:26    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:39:56    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:39:56    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:39:56    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:39:56    INFO]  -----------------------------------------------------------------------------------------------------------
[22:39:56    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_7/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:39:57    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:39:57    INFO]  - will validate that the bias-correction actually improved the result ...
[22:39:57    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:39:57    INFO]  - Will use (1) MLMs from the input chain: ANNZ_7,
[22:39:59    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_7/plots/
[22:40:01        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_7/plots output/PAUS_advanced10/regres/train/ANNZ_7/plots_biasCor_before
[22:40:01    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:40:01    INFO]  - Will use (1) MLMs from the input chain: ANNZ_7,
[22:40:02    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_7/plots/
[22:40:05        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_7/plots output/PAUS_advanced10/regres/train/ANNZ_7/plots_biasCor_after
[22:40:05    INFO]  - Got original [KS-test,N_poiss]: [0.0561833 , 5.20717] , after the bias-correction: [0.0170284 , 3.88496] --> will KEEP the correction !

(22:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(22:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(22:40 INFO) 
[22:40:07    INFO]  -----------------------------------------------------
[22:40:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[22:40:07    INFO]  -----------------------------------------------------------------------------------------------------------
[22:40:08    INFO]  - starting ANNZ::Init()  ... 
[22:40:09    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_8/saveOpt.txt ...
[22:40:22    INFO]  - starting ANNZ::Train_singleReg() ... 
[22:40:23    INFO] ----------------------------------------------------------------------------------------------------
[22:40:23    INFO]  - will book (ANNZ_8) method(BDT) with options: :NTrees=310:BoostType=Bagging:VarTransform=N
[22:40:23    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:40:23    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[22:40:23    INFO]      cuts (train):        ,
[22:40:23    INFO]      cuts (valid):       
[22:40:23    INFO]    - weights:            1
[22:40:23    INFO] ----------------------------------------------------------------------------------------------------
[22:40:23    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:40:42    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_8/ANNZ_8_weights/saveTrainOpt_ANNZ_8.txt ...
[22:40:44    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_8 ... 
[22:40:44    INFO]  - Will gen. input-parameter errors ...
[22:40:46    INFO]  - starting ANNZ::loadReaders() ... 
[22:40:50    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:41:44    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:41:44    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:41:44    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:41:44    INFO]  -----------------------------------------------------------------------------------------------------------
[22:42:03    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:42:03    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:42:03    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:42:03    INFO]  -----------------------------------------------------------------------------------------------------------
[22:42:03    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:42:27    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:42:27    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:42:27    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:42:27    INFO]  -----------------------------------------------------------------------------------------------------------
[22:42:28    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_8/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:42:29    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:42:29    INFO]  - will try to derive a bias correction ... 
[22:42:29    INFO]  - will validate that training produced an XML file for later ... 
[22:42:29    INFO]  - starting ANNZ::loadReaders() ... 
[22:42:32    INFO]  - will validate that the training was not a complete failure ... 
[22:42:32    INFO]  - training seems to have been successful! will move on ...
[22:42:32    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[22:42:36    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:42:37    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:42:38    INFO] ----------------------------------------------------------------------------------------------------
[22:42:38    INFO]  - will book (ANNZ_8_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[22:42:38    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:42:38    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[22:42:38    INFO]    - weights:            1
[22:42:38    INFO] ----------------------------------------------------------------------------------------------------
[22:42:38    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:42:43    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_8 ... 
[22:42:43    INFO]  - Will gen. input-parameter errors ...
[22:42:44    INFO]  - starting ANNZ::loadReaders() ... 
[22:42:51    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:44:36    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:44:36    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:44:36    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:44:36    INFO]  -----------------------------------------------------------------------------------------------------------
[22:45:13    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:45:13    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:45:13    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:45:13    INFO]  -----------------------------------------------------------------------------------------------------------
[22:45:13    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:45:41    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:45:41    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:45:41    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:45:41    INFO]  -----------------------------------------------------------------------------------------------------------
[22:45:42    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_8/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:45:43    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:45:43    INFO]  - will validate that the bias-correction actually improved the result ...
[22:45:43    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:45:43    INFO]  - Will use (1) MLMs from the input chain: ANNZ_8,
[22:45:44    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_8/plots/
[22:45:46        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_8/plots output/PAUS_advanced10/regres/train/ANNZ_8/plots_biasCor_before
[22:45:46    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:45:46    INFO]  - Will use (1) MLMs from the input chain: ANNZ_8,
[22:45:48    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_8/plots/
[22:45:50        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_8/plots output/PAUS_advanced10/regres/train/ANNZ_8/plots_biasCor_after
[22:45:50    INFO]  - Got original [KS-test,N_poiss]: [0.0378973 , 4.81315] , after the bias-correction: [0.0267538 , 4.2585] --> will KEEP the correction !

(22:45 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(22:45 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=330:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(22:45 INFO) 
[22:45:52    INFO]  -----------------------------------------------------
[22:45:52    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[22:45:52    INFO]  -----------------------------------------------------------------------------------------------------------
[22:45:53    INFO]  - starting ANNZ::Init()  ... 
[22:45:54    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_9/saveOpt.txt ...
[22:46:09    INFO]  - starting ANNZ::Train_singleReg() ... 
[22:46:09    INFO] ----------------------------------------------------------------------------------------------------
[22:46:09    INFO]  - will book (ANNZ_9) method(BDT) with options: :NTrees=330:BoostType=AdaBoostR2:VarTransform=N
[22:46:09    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:46:09    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[22:46:09    INFO]      cuts (train):        ,
[22:46:09    INFO]      cuts (valid):       
[22:46:09    INFO]    - weights:            1
[22:46:09    INFO] ----------------------------------------------------------------------------------------------------
[22:46:09    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:46:28    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_9/ANNZ_9_weights/saveTrainOpt_ANNZ_9.txt ...
[22:46:30    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_9 ... 
[22:46:30    INFO]  - Will gen. input-parameter errors ...
[22:46:31    INFO]  - starting ANNZ::loadReaders() ... 
[22:46:37    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:50:10    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:50:10    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:50:10    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:50:10    INFO]  -----------------------------------------------------------------------------------------------------------
[22:51:18    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:51:18    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:51:18    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:51:18    INFO]  -----------------------------------------------------------------------------------------------------------
[22:51:18    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:52:24    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:52:24    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:52:24    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:52:24    INFO]  -----------------------------------------------------------------------------------------------------------
[22:52:24    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_9/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:52:25    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:52:25    INFO]  - will try to derive a bias correction ... 
[22:52:25    INFO]  - will validate that training produced an XML file for later ... 
[22:52:25    INFO]  - starting ANNZ::loadReaders() ... 
[22:52:26    INFO]  - will validate that the training was not a complete failure ... 
[22:52:26    INFO]  - training seems to have been successful! will move on ...
[22:52:26    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[22:52:29    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:52:30    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:52:30    INFO] ----------------------------------------------------------------------------------------------------
[22:52:30    INFO]  - will book (ANNZ_9_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[22:52:30    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:52:30    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[22:52:30    INFO]    - weights:            1
[22:52:30    INFO] ----------------------------------------------------------------------------------------------------
[22:52:30    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:52:34    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_9 ... 
[22:52:34    INFO]  - Will gen. input-parameter errors ...
[22:52:36    INFO]  - starting ANNZ::loadReaders() ... 
[22:52:43    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[22:56:55    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:56:55    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:56:55    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[22:56:55    INFO]  -----------------------------------------------------------------------------------------------------------
[22:58:15    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:58:15    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:58:15    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[22:58:15    INFO]  -----------------------------------------------------------------------------------------------------------
[22:58:15    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[22:59:30    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:59:30    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[22:59:30    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[22:59:30    INFO]  -----------------------------------------------------------------------------------------------------------
[22:59:30    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_9/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:59:31    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:59:31    INFO]  - will validate that the bias-correction actually improved the result ...
[22:59:31    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:59:31    INFO]  - Will use (1) MLMs from the input chain: ANNZ_9,
[22:59:33    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_9/plots/
[22:59:37        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_9/plots output/PAUS_advanced10/regres/train/ANNZ_9/plots_biasCor_before
[22:59:37    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:59:37    INFO]  - Will use (1) MLMs from the input chain: ANNZ_9,
[22:59:39    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_9/plots/
[22:59:43        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_9/plots output/PAUS_advanced10/regres/train/ANNZ_9/plots_biasCor_after
[22:59:43    INFO]  - Got original [KS-test,N_poiss]: [0.0562576 , 5.22203] , after the bias-correction: [0.0200733 , 4.3213] --> will KEEP the correction !

(22:59 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(22:59 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=250:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(22:59 INFO) 
[22:59:45    INFO]  -----------------------------------------------------
[22:59:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[22:59:45    INFO]  -----------------------------------------------------------------------------------------------------------
[22:59:47    INFO]  - starting ANNZ::Init()  ... 
[22:59:49    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_10/saveOpt.txt ...
[23:00:09    INFO]  - starting ANNZ::Train_singleReg() ... 
[23:00:09    INFO] ----------------------------------------------------------------------------------------------------
[23:00:09    INFO]  - will book (ANNZ_10) method(BDT) with options: :NTrees=250:BoostType=AdaBoost:VarTransform=N,P
[23:00:09    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[23:00:09    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[23:00:09    INFO]      cuts (train):        ,
[23:00:09    INFO]      cuts (valid):       
[23:00:09    INFO]    - weights:            1
[23:00:09    INFO] ----------------------------------------------------------------------------------------------------
[23:00:10    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[23:00:23    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_10/ANNZ_10_weights/saveTrainOpt_ANNZ_10.txt ...
[23:00:25    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_10 ... 
[23:00:25    INFO]  - Will gen. input-parameter errors ...
[23:00:26    INFO]  - starting ANNZ::loadReaders() ... 
[23:00:28    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[23:01:06    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:01:06    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[23:01:06    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[23:01:06    INFO]  -----------------------------------------------------------------------------------------------------------
[23:01:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:01:19    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[23:01:19    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[23:01:19    INFO]  -----------------------------------------------------------------------------------------------------------
[23:01:19    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[23:01:32    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:01:32    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[23:01:32    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[23:01:32    INFO]  -----------------------------------------------------------------------------------------------------------
[23:01:32    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_10/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[23:01:33    INFO]  - ending makeTreeRegClsOneMLM() ... 
[23:01:33    INFO]  - will try to derive a bias correction ... 
[23:01:33    INFO]  - will validate that training produced an XML file for later ... 
[23:01:33    INFO]  - starting ANNZ::loadReaders() ... 
[23:01:33    INFO]  - will validate that the training was not a complete failure ... 
[23:01:33    INFO]  - training seems to have been successful! will move on ...
[23:01:33    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[23:01:36    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[23:01:38    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[23:01:38    INFO] ----------------------------------------------------------------------------------------------------
[23:01:38    INFO]  - will book (ANNZ_10_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[23:01:38    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[23:01:38    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[23:01:38    INFO]    - weights:            1
[23:01:38    INFO] ----------------------------------------------------------------------------------------------------
[23:01:38    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[23:01:42    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_10 ... 
[23:01:42    INFO]  - Will gen. input-parameter errors ...
[23:01:43    INFO]  - starting ANNZ::loadReaders() ... 
[23:01:47    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[23:02:57    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:02:57    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[23:02:57    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[23:02:57    INFO]  -----------------------------------------------------------------------------------------------------------
[23:03:18    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:03:18    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[23:03:18    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[23:03:18    INFO]  -----------------------------------------------------------------------------------------------------------
[23:03:18    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[23:03:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:03:38    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[23:03:38    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[23:03:38    INFO]  -----------------------------------------------------------------------------------------------------------
[23:03:38    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_10/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[23:03:39    INFO]  - ending makeTreeRegClsOneMLM() ... 
[23:03:39    INFO]  - will validate that the bias-correction actually improved the result ...
[23:03:39    INFO]  - starting ANNZ::doMetricPlots() ... 
[23:03:39    INFO]  - Will use (1) MLMs from the input chain: ANNZ_10,
[23:03:41    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_10/plots/
[23:03:43        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_10/plots output/PAUS_advanced10/regres/train/ANNZ_10/plots_biasCor_before
[23:03:43    INFO]  - starting ANNZ::doMetricPlots() ... 
[23:03:43    INFO]  - Will use (1) MLMs from the input chain: ANNZ_10,
[23:03:44    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_10/plots/
[23:03:46        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_10/plots output/PAUS_advanced10/regres/train/ANNZ_10/plots_biasCor_after
[23:03:46    INFO]  - Got original [KS-test,N_poiss]: [0.0596731 , 4.6667] , after the bias-correction: [0.0208165 , 3.65868] --> will KEEP the correction !

(23:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1030:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:03 INFO) 
[23:03:48    INFO]  -----------------------------------------------------
[23:03:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:03:48    INFO]  -----------------------------------------------------------------------------------------------------------
[23:03:49    INFO]  - starting ANNZ::Init()  ... 
[23:03:51    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_11/saveOpt.txt ...
[23:04:05    INFO]  - starting ANNZ::Train_singleReg() ... 
[23:04:05    INFO] ----------------------------------------------------------------------------------------------------
[23:04:05    INFO]  - will book (ANNZ_11) method(BDT) with options: :NTrees=1030:BoostType=AdaBoostR2:VarTransform=N,P
[23:04:05    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[23:04:05    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[23:04:05    INFO]      cuts (train):        ,
[23:04:05    INFO]      cuts (valid):       
[23:04:05    INFO]    - weights:            1
[23:04:05    INFO] ----------------------------------------------------------------------------------------------------
[23:04:05    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[23:05:26    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_11/ANNZ_11_weights/saveTrainOpt_ANNZ_11.txt ...
[23:05:30    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_11 ... 
[23:05:30    INFO]  - Will gen. input-parameter errors ...
[23:05:32    INFO]  - starting ANNZ::loadReaders() ... 
[23:06:07    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[23:40:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:40:19    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[23:40:19    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[23:40:19    INFO]  -----------------------------------------------------------------------------------------------------------
[23:52:00    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:52:00    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[23:52:00    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[23:52:00    INFO]  -----------------------------------------------------------------------------------------------------------
[23:52:00    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[00:02:54    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:02:54    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[00:02:54    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[00:02:54    INFO]  -----------------------------------------------------------------------------------------------------------
[00:02:55    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_11/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[00:02:56    INFO]  - ending makeTreeRegClsOneMLM() ... 
[00:02:56    INFO]  - will try to derive a bias correction ... 
[00:02:56    INFO]  - will validate that training produced an XML file for later ... 
[00:02:56    INFO]  - starting ANNZ::loadReaders() ... 
[00:02:59    INFO]  - will validate that the training was not a complete failure ... 
[00:02:59    INFO]  - training seems to have been successful! will move on ...
[00:02:59    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[00:03:02    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[00:03:04    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[00:03:04    INFO] ----------------------------------------------------------------------------------------------------
[00:03:04    INFO]  - will book (ANNZ_11_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[00:03:04    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[00:03:04    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[00:03:04    INFO]    - weights:            1
[00:03:04    INFO] ----------------------------------------------------------------------------------------------------
[00:03:04    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[00:03:09    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_11 ... 
[00:03:09    INFO]  - Will gen. input-parameter errors ...
[00:03:10    INFO]  - starting ANNZ::loadReaders() ... 
[00:03:44    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[00:35:29    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:35:29    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[00:35:29    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[00:35:29    INFO]  -----------------------------------------------------------------------------------------------------------
[00:46:39    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:46:39    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[00:46:39    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[00:46:39    INFO]  -----------------------------------------------------------------------------------------------------------
[00:46:39    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[00:57:27    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:57:27    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[00:57:27    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[00:57:27    INFO]  -----------------------------------------------------------------------------------------------------------
[00:57:30    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_11/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[00:57:31    INFO]  - ending makeTreeRegClsOneMLM() ... 
[00:57:31    INFO]  - will validate that the bias-correction actually improved the result ...
[00:57:31    INFO]  - starting ANNZ::doMetricPlots() ... 
[00:57:31    INFO]  - Will use (1) MLMs from the input chain: ANNZ_11,
[00:57:33    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_11/plots/
[00:57:35        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_11/plots output/PAUS_advanced10/regres/train/ANNZ_11/plots_biasCor_before
[00:57:35    INFO]  - starting ANNZ::doMetricPlots() ... 
[00:57:35    INFO]  - Will use (1) MLMs from the input chain: ANNZ_11,
[00:57:36    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_11/plots/
[00:57:39        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_11/plots output/PAUS_advanced10/regres/train/ANNZ_11/plots_biasCor_after
[00:57:39    INFO]  - Got original [KS-test,N_poiss]: [0.0601866 , 5.40559] , after the bias-correction: [0.0283262 , 4.55799] --> will KEEP the correction !

(00:57 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(00:57 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1030:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(00:57 INFO) 
[00:57:41    INFO]  -----------------------------------------------------
[00:57:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[00:57:41    INFO]  -----------------------------------------------------------------------------------------------------------
[00:57:42    INFO]  - starting ANNZ::Init()  ... 
[00:57:43    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_12/saveOpt.txt ...
[00:57:58    INFO]  - starting ANNZ::Train_singleReg() ... 
[00:57:59    INFO] ----------------------------------------------------------------------------------------------------
[00:57:59    INFO]  - will book (ANNZ_12) method(BDT) with options: :NTrees=1030:BoostType=AdaBoostR2:VarTransform=N,P
[00:57:59    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[00:57:59    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[00:57:59    INFO]      cuts (train):        ,
[00:57:59    INFO]      cuts (valid):       
[00:57:59    INFO]    - weights:            1
[00:57:59    INFO] ----------------------------------------------------------------------------------------------------
[00:57:59    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[00:59:15    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_12/ANNZ_12_weights/saveTrainOpt_ANNZ_12.txt ...
[00:59:18    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_12 ... 
[00:59:18    INFO]  - Will gen. input-parameter errors ...
[00:59:19    INFO]  - starting ANNZ::loadReaders() ... 
[00:59:52    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[01:28:55    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[01:28:55    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[01:28:55    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[01:28:55    INFO]  -----------------------------------------------------------------------------------------------------------
[01:39:11    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[01:39:11    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[01:39:11    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[01:39:11    INFO]  -----------------------------------------------------------------------------------------------------------
[01:39:11    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[01:48:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[01:48:49    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[01:48:49    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[01:48:49    INFO]  -----------------------------------------------------------------------------------------------------------
[01:48:52    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_12/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[01:48:54    INFO]  - ending makeTreeRegClsOneMLM() ... 
[01:48:54    INFO]  - will try to derive a bias correction ... 
[01:48:54    INFO]  - will validate that training produced an XML file for later ... 
[01:48:54    INFO]  - starting ANNZ::loadReaders() ... 
[01:48:57    INFO]  - will validate that the training was not a complete failure ... 
[01:48:57    INFO]  - training seems to have been successful! will move on ...
[01:48:57    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[01:49:00    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[01:49:01    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[01:49:02    INFO] ----------------------------------------------------------------------------------------------------
[01:49:02    INFO]  - will book (ANNZ_12_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[01:49:02    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[01:49:02    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[01:49:02    INFO]    - weights:            1
[01:49:02    INFO] ----------------------------------------------------------------------------------------------------
[01:49:02    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[01:49:06    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_12 ... 
[01:49:06    INFO]  - Will gen. input-parameter errors ...
[01:49:08    INFO]  - starting ANNZ::loadReaders() ... 
[01:49:41    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[02:21:27    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:21:27    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:21:27    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[02:21:27    INFO]  -----------------------------------------------------------------------------------------------------------
[02:32:11    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:32:11    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:32:11    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[02:32:11    INFO]  -----------------------------------------------------------------------------------------------------------
[02:32:11    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[02:43:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:43:49    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:43:49    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[02:43:49    INFO]  -----------------------------------------------------------------------------------------------------------
[02:43:49    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_12/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[02:43:50    INFO]  - ending makeTreeRegClsOneMLM() ... 
[02:43:50    INFO]  - will validate that the bias-correction actually improved the result ...
[02:43:50    INFO]  - starting ANNZ::doMetricPlots() ... 
[02:43:50    INFO]  - Will use (1) MLMs from the input chain: ANNZ_12,
[02:43:51    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_12/plots/
[02:43:54        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_12/plots output/PAUS_advanced10/regres/train/ANNZ_12/plots_biasCor_before
[02:43:54    INFO]  - starting ANNZ::doMetricPlots() ... 
[02:43:54    INFO]  - Will use (1) MLMs from the input chain: ANNZ_12,
[02:43:55    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_12/plots/
[02:43:57        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_12/plots output/PAUS_advanced10/regres/train/ANNZ_12/plots_biasCor_after
[02:43:57    INFO]  - Got original [KS-test,N_poiss]: [0.0601866 , 5.40559] , after the bias-correction: [0.0283262 , 4.55799] --> will KEEP the correction !

(02:43 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(02:43 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=420:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(02:43 INFO) 
[02:44:00    INFO]  -----------------------------------------------------
[02:44:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[02:44:00    INFO]  -----------------------------------------------------------------------------------------------------------
[02:44:01    INFO]  - starting ANNZ::Init()  ... 
[02:44:02    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_13/saveOpt.txt ...
[02:44:17    INFO]  - starting ANNZ::Train_singleReg() ... 
[02:44:17    INFO] ----------------------------------------------------------------------------------------------------
[02:44:17    INFO]  - will book (ANNZ_13) method(BDT) with options: :NTrees=420:BoostType=Bagging:VarTransform=N
[02:44:17    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[02:44:17    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[02:44:17    INFO]      cuts (train):        ,
[02:44:17    INFO]      cuts (valid):       
[02:44:17    INFO]    - weights:            1
[02:44:17    INFO] ----------------------------------------------------------------------------------------------------
[02:44:18    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[02:44:45    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_13/ANNZ_13_weights/saveTrainOpt_ANNZ_13.txt ...
[02:44:48    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_13 ... 
[02:44:48    INFO]  - Will gen. input-parameter errors ...
[02:44:49    INFO]  - starting ANNZ::loadReaders() ... 
[02:44:55    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[02:46:07    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:46:07    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:46:07    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[02:46:07    INFO]  -----------------------------------------------------------------------------------------------------------
[02:46:31    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:46:31    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:46:31    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[02:46:31    INFO]  -----------------------------------------------------------------------------------------------------------
[02:46:31    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[02:46:55    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:46:55    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:46:55    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[02:46:55    INFO]  -----------------------------------------------------------------------------------------------------------
[02:46:55    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_13/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[02:46:57    INFO]  - ending makeTreeRegClsOneMLM() ... 
[02:46:57    INFO]  - will try to derive a bias correction ... 
[02:46:57    INFO]  - will validate that training produced an XML file for later ... 
[02:46:57    INFO]  - starting ANNZ::loadReaders() ... 
[02:47:00    INFO]  - will validate that the training was not a complete failure ... 
[02:47:00    INFO]  - training seems to have been successful! will move on ...
[02:47:00    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[02:47:03    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[02:47:04    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[02:47:05    INFO] ----------------------------------------------------------------------------------------------------
[02:47:05    INFO]  - will book (ANNZ_13_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[02:47:05    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[02:47:05    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[02:47:05    INFO]    - weights:            1
[02:47:05    INFO] ----------------------------------------------------------------------------------------------------
[02:47:05    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[02:47:10    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_13 ... 
[02:47:10    INFO]  - Will gen. input-parameter errors ...
[02:47:12    INFO]  - starting ANNZ::loadReaders() ... 
[02:47:19    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[02:48:59    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:48:59    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:48:59    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[02:48:59    INFO]  -----------------------------------------------------------------------------------------------------------
[02:49:33    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:49:33    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:49:33    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[02:49:33    INFO]  -----------------------------------------------------------------------------------------------------------
[02:49:33    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[02:50:07    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:50:07    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:50:07    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[02:50:07    INFO]  -----------------------------------------------------------------------------------------------------------
[02:50:07    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_13/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[02:50:08    INFO]  - ending makeTreeRegClsOneMLM() ... 
[02:50:08    INFO]  - will validate that the bias-correction actually improved the result ...
[02:50:08    INFO]  - starting ANNZ::doMetricPlots() ... 
[02:50:08    INFO]  - Will use (1) MLMs from the input chain: ANNZ_13,
[02:50:10    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_13/plots/
[02:50:12        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_13/plots output/PAUS_advanced10/regres/train/ANNZ_13/plots_biasCor_before
[02:50:12    INFO]  - starting ANNZ::doMetricPlots() ... 
[02:50:12    INFO]  - Will use (1) MLMs from the input chain: ANNZ_13,
[02:50:13    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_13/plots/
[02:50:15        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_13/plots output/PAUS_advanced10/regres/train/ANNZ_13/plots_biasCor_after
[02:50:15    INFO]  - Got original [KS-test,N_poiss]: [0.0378978 , 4.82575] , after the bias-correction: [0.0269023 , 4.3675] --> will KEEP the correction !

(02:50 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(02:50 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=730:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(02:50 INFO) 
[02:50:18    INFO]  -----------------------------------------------------
[02:50:18    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[02:50:18    INFO]  -----------------------------------------------------------------------------------------------------------
[02:50:19    INFO]  - starting ANNZ::Init()  ... 
[02:50:20    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_14/saveOpt.txt ...
[02:50:34    INFO]  - starting ANNZ::Train_singleReg() ... 
[02:50:35    INFO] ----------------------------------------------------------------------------------------------------
[02:50:35    INFO]  - will book (ANNZ_14) method(BDT) with options: :NTrees=730:BoostType=AdaBoost:VarTransform=N,P
[02:50:35    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[02:50:35    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[02:50:35    INFO]      cuts (train):        ,
[02:50:35    INFO]      cuts (valid):       
[02:50:35    INFO]    - weights:            1
[02:50:35    INFO] ----------------------------------------------------------------------------------------------------
[02:50:35    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[02:51:07    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_14/ANNZ_14_weights/saveTrainOpt_ANNZ_14.txt ...
[02:51:09    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_14 ... 
[02:51:09    INFO]  - Will gen. input-parameter errors ...
[02:51:10    INFO]  - starting ANNZ::loadReaders() ... 
[02:51:16    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[02:52:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:52:35    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:52:35    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[02:52:35    INFO]  -----------------------------------------------------------------------------------------------------------
[02:53:02    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:53:02    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:53:02    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[02:53:02    INFO]  -----------------------------------------------------------------------------------------------------------
[02:53:02    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[02:53:28    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:53:28    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:53:28    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[02:53:28    INFO]  -----------------------------------------------------------------------------------------------------------
[02:53:29    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_14/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[02:53:30    INFO]  - ending makeTreeRegClsOneMLM() ... 
[02:53:30    INFO]  - will try to derive a bias correction ... 
[02:53:30    INFO]  - will validate that training produced an XML file for later ... 
[02:53:30    INFO]  - starting ANNZ::loadReaders() ... 
[02:53:32    INFO]  - will validate that the training was not a complete failure ... 
[02:53:32    INFO]  - training seems to have been successful! will move on ...
[02:53:32    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[02:53:35    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[02:53:36    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[02:53:36    INFO] ----------------------------------------------------------------------------------------------------
[02:53:36    INFO]  - will book (ANNZ_14_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[02:53:36    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[02:53:36    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[02:53:36    INFO]    - weights:            1
[02:53:36    INFO] ----------------------------------------------------------------------------------------------------
[02:53:37    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[02:53:41    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_14 ... 
[02:53:41    INFO]  - Will gen. input-parameter errors ...
[02:53:43    INFO]  - starting ANNZ::loadReaders() ... 
[02:53:49    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[02:55:32    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:55:32    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:55:32    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[02:55:32    INFO]  -----------------------------------------------------------------------------------------------------------
[02:56:07    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:56:07    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:56:07    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[02:56:07    INFO]  -----------------------------------------------------------------------------------------------------------
[02:56:07    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[02:56:41    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:56:41    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:56:41    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[02:56:41    INFO]  -----------------------------------------------------------------------------------------------------------
[02:56:42    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_14/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[02:56:43    INFO]  - ending makeTreeRegClsOneMLM() ... 
[02:56:43    INFO]  - will validate that the bias-correction actually improved the result ...
[02:56:43    INFO]  - starting ANNZ::doMetricPlots() ... 
[02:56:43    INFO]  - Will use (1) MLMs from the input chain: ANNZ_14,
[02:56:44    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_14/plots/
[02:56:46        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_14/plots output/PAUS_advanced10/regres/train/ANNZ_14/plots_biasCor_before
[02:56:46    INFO]  - starting ANNZ::doMetricPlots() ... 
[02:56:46    INFO]  - Will use (1) MLMs from the input chain: ANNZ_14,
[02:56:48    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_14/plots/
[02:56:50        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_14/plots output/PAUS_advanced10/regres/train/ANNZ_14/plots_biasCor_after
[02:56:50    INFO]  - Got original [KS-test,N_poiss]: [0.0605792 , 4.65629] , after the bias-correction: [0.0208908 , 3.68118] --> will KEEP the correction !

(02:56 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(02:56 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(02:56 INFO) 
[02:56:52    INFO]  -----------------------------------------------------
[02:56:52    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[02:56:52    INFO]  -----------------------------------------------------------------------------------------------------------
[02:56:53    INFO]  - starting ANNZ::Init()  ... 
[02:56:54    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_15/saveOpt.txt ...
[02:57:09    INFO]  - starting ANNZ::Train_singleReg() ... 
[02:57:09    INFO] ----------------------------------------------------------------------------------------------------
[02:57:09    INFO]  - will book (ANNZ_15) method(BDT) with options: :NTrees=260:BoostType=Bagging:VarTransform=N
[02:57:09    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[02:57:09    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[02:57:09    INFO]      cuts (train):        ,
[02:57:09    INFO]      cuts (valid):       
[02:57:09    INFO]    - weights:            1
[02:57:09    INFO] ----------------------------------------------------------------------------------------------------
[02:57:10    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[02:57:26    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_15/ANNZ_15_weights/saveTrainOpt_ANNZ_15.txt ...
[02:57:28    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_15 ... 
[02:57:28    INFO]  - Will gen. input-parameter errors ...
[02:57:30    INFO]  - starting ANNZ::loadReaders() ... 
[02:57:34    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[02:58:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:58:19    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:58:19    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[02:58:19    INFO]  -----------------------------------------------------------------------------------------------------------
[02:58:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:58:35    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:58:35    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[02:58:35    INFO]  -----------------------------------------------------------------------------------------------------------
[02:58:35    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[02:58:50    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:58:50    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[02:58:50    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[02:58:50    INFO]  -----------------------------------------------------------------------------------------------------------
[02:58:50    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_15/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[02:58:51    INFO]  - ending makeTreeRegClsOneMLM() ... 
[02:58:51    INFO]  - will try to derive a bias correction ... 
[02:58:51    INFO]  - will validate that training produced an XML file for later ... 
[02:58:51    INFO]  - starting ANNZ::loadReaders() ... 
[02:58:53    INFO]  - will validate that the training was not a complete failure ... 
[02:58:53    INFO]  - training seems to have been successful! will move on ...
[02:58:53    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[02:58:56    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[02:58:57    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[02:58:58    INFO] ----------------------------------------------------------------------------------------------------
[02:58:58    INFO]  - will book (ANNZ_15_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[02:58:58    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[02:58:58    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[02:58:58    INFO]    - weights:            1
[02:58:58    INFO] ----------------------------------------------------------------------------------------------------
[02:58:58    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[02:59:03    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_15 ... 
[02:59:03    INFO]  - Will gen. input-parameter errors ...
[02:59:04    INFO]  - starting ANNZ::loadReaders() ... 
[02:59:09    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[03:00:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:00:19    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:00:19    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[03:00:19    INFO]  -----------------------------------------------------------------------------------------------------------
[03:00:44    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:00:44    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:00:44    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[03:00:44    INFO]  -----------------------------------------------------------------------------------------------------------
[03:00:44    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[03:01:10    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:01:10    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:01:10    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[03:01:10    INFO]  -----------------------------------------------------------------------------------------------------------
[03:01:10    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_15/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[03:01:11    INFO]  - ending makeTreeRegClsOneMLM() ... 
[03:01:11    INFO]  - will validate that the bias-correction actually improved the result ...
[03:01:11    INFO]  - starting ANNZ::doMetricPlots() ... 
[03:01:11    INFO]  - Will use (1) MLMs from the input chain: ANNZ_15,
[03:01:12    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_15/plots/
[03:01:14        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_15/plots output/PAUS_advanced10/regres/train/ANNZ_15/plots_biasCor_before
[03:01:14    INFO]  - starting ANNZ::doMetricPlots() ... 
[03:01:14    INFO]  - Will use (1) MLMs from the input chain: ANNZ_15,
[03:01:15    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_15/plots/
[03:01:18        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_15/plots output/PAUS_advanced10/regres/train/ANNZ_15/plots_biasCor_after
[03:01:18    INFO]  - Got original [KS-test,N_poiss]: [0.0378973 , 4.79743] , after the bias-correction: [0.0266795 , 4.25108] --> will KEEP the correction !

(03:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(03:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=510:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(03:01 INFO) 
[03:01:20    INFO]  -----------------------------------------------------
[03:01:20    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[03:01:20    INFO]  -----------------------------------------------------------------------------------------------------------
[03:01:21    INFO]  - starting ANNZ::Init()  ... 
[03:01:22    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_16/saveOpt.txt ...
[03:01:37    INFO]  - starting ANNZ::Train_singleReg() ... 
[03:01:37    INFO] ----------------------------------------------------------------------------------------------------
[03:01:37    INFO]  - will book (ANNZ_16) method(BDT) with options: :NTrees=510:BoostType=AdaBoostR2:VarTransform=N
[03:01:37    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[03:01:37    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[03:01:37    INFO]      cuts (train):        ,
[03:01:37    INFO]      cuts (valid):       
[03:01:37    INFO]    - weights:            1
[03:01:37    INFO] ----------------------------------------------------------------------------------------------------
[03:01:37    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[03:02:08    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_16/ANNZ_16_weights/saveTrainOpt_ANNZ_16.txt ...
[03:02:10    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_16 ... 
[03:02:10    INFO]  - Will gen. input-parameter errors ...
[03:02:11    INFO]  - starting ANNZ::loadReaders() ... 
[03:02:22    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[03:09:09    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:09:09    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:09:09    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[03:09:09    INFO]  -----------------------------------------------------------------------------------------------------------
[03:11:29    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:11:29    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:11:29    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[03:11:29    INFO]  -----------------------------------------------------------------------------------------------------------
[03:11:29    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[03:13:45    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:13:45    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:13:45    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[03:13:45    INFO]  -----------------------------------------------------------------------------------------------------------
[03:13:48    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_16/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[03:13:49    INFO]  - ending makeTreeRegClsOneMLM() ... 
[03:13:49    INFO]  - will try to derive a bias correction ... 
[03:13:49    INFO]  - will validate that training produced an XML file for later ... 
[03:13:49    INFO]  - starting ANNZ::loadReaders() ... 
[03:13:50    INFO]  - will validate that the training was not a complete failure ... 
[03:13:50    INFO]  - training seems to have been successful! will move on ...
[03:13:50    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[03:13:54    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[03:13:55    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[03:13:55    INFO] ----------------------------------------------------------------------------------------------------
[03:13:55    INFO]  - will book (ANNZ_16_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[03:13:55    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[03:13:55    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[03:13:55    INFO]    - weights:            1
[03:13:55    INFO] ----------------------------------------------------------------------------------------------------
[03:13:55    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[03:13:59    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_16 ... 
[03:13:59    INFO]  - Will gen. input-parameter errors ...
[03:14:01    INFO]  - starting ANNZ::loadReaders() ... 
[03:14:12    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[03:21:30    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:21:30    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:21:30    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[03:21:30    INFO]  -----------------------------------------------------------------------------------------------------------
[03:24:01    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:24:01    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:24:01    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[03:24:01    INFO]  -----------------------------------------------------------------------------------------------------------
[03:24:01    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[03:26:32    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:26:32    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:26:32    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[03:26:32    INFO]  -----------------------------------------------------------------------------------------------------------
[03:26:34    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_16/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[03:26:35    INFO]  - ending makeTreeRegClsOneMLM() ... 
[03:26:35    INFO]  - will validate that the bias-correction actually improved the result ...
[03:26:35    INFO]  - starting ANNZ::doMetricPlots() ... 
[03:26:35    INFO]  - Will use (1) MLMs from the input chain: ANNZ_16,
[03:26:37    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_16/plots/
[03:26:39        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_16/plots output/PAUS_advanced10/regres/train/ANNZ_16/plots_biasCor_before
[03:26:39    INFO]  - starting ANNZ::doMetricPlots() ... 
[03:26:39    INFO]  - Will use (1) MLMs from the input chain: ANNZ_16,
[03:26:40    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_16/plots/
[03:26:42        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_16/plots output/PAUS_advanced10/regres/train/ANNZ_16/plots_biasCor_after
[03:26:42    INFO]  - Got original [KS-test,N_poiss]: [0.0555108 , 5.17394] , after the bias-correction: [0.0168539 , 4.04713] --> will KEEP the correction !

(03:26 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(03:26 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(03:26 INFO) 
[03:26:44    INFO]  -----------------------------------------------------
[03:26:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[03:26:44    INFO]  -----------------------------------------------------------------------------------------------------------
[03:26:46    INFO]  - starting ANNZ::Init()  ... 
[03:26:47    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_17/saveOpt.txt ...
[03:27:01    INFO]  - starting ANNZ::Train_singleReg() ... 
[03:27:02    INFO] ----------------------------------------------------------------------------------------------------
[03:27:02    INFO]  - will book (ANNZ_17) method(BDT) with options: :NTrees=400:BoostType=AdaBoostR2:VarTransform=N,P
[03:27:02    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[03:27:02    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[03:27:02    INFO]      cuts (train):        ,
[03:27:02    INFO]      cuts (valid):       
[03:27:02    INFO]    - weights:            1
[03:27:02    INFO] ----------------------------------------------------------------------------------------------------
[03:27:02    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[03:27:25    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_17/ANNZ_17_weights/saveTrainOpt_ANNZ_17.txt ...
[03:27:26    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_17 ... 
[03:27:26    INFO]  - Will gen. input-parameter errors ...
[03:27:28    INFO]  - starting ANNZ::loadReaders() ... 
[03:27:35    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[03:32:03    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:32:03    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:32:03    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[03:32:03    INFO]  -----------------------------------------------------------------------------------------------------------
[03:33:36    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:33:36    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:33:36    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[03:33:36    INFO]  -----------------------------------------------------------------------------------------------------------
[03:33:36    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[03:35:06    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:35:06    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:35:06    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[03:35:06    INFO]  -----------------------------------------------------------------------------------------------------------
[03:35:09    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_17/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[03:35:09    INFO]  - ending makeTreeRegClsOneMLM() ... 
[03:35:09    INFO]  - will try to derive a bias correction ... 
[03:35:09    INFO]  - will validate that training produced an XML file for later ... 
[03:35:09    INFO]  - starting ANNZ::loadReaders() ... 
[03:35:10    INFO]  - will validate that the training was not a complete failure ... 
[03:35:11    INFO]  - training seems to have been successful! will move on ...
[03:35:11    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[03:35:13    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[03:35:15    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[03:35:15    INFO] ----------------------------------------------------------------------------------------------------
[03:35:15    INFO]  - will book (ANNZ_17_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[03:35:15    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[03:35:15    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[03:35:15    INFO]    - weights:            1
[03:35:15    INFO] ----------------------------------------------------------------------------------------------------
[03:35:15    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[03:35:19    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_17 ... 
[03:35:19    INFO]  - Will gen. input-parameter errors ...
[03:35:21    INFO]  - starting ANNZ::loadReaders() ... 
[03:35:28    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[03:40:22    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:40:22    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:40:22    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[03:40:22    INFO]  -----------------------------------------------------------------------------------------------------------
[03:42:04    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:42:04    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:42:04    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[03:42:04    INFO]  -----------------------------------------------------------------------------------------------------------
[03:42:04    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[03:43:43    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:43:43    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:43:43    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[03:43:43    INFO]  -----------------------------------------------------------------------------------------------------------
[03:43:45    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_17/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[03:43:46    INFO]  - ending makeTreeRegClsOneMLM() ... 
[03:43:46    INFO]  - will validate that the bias-correction actually improved the result ...
[03:43:46    INFO]  - starting ANNZ::doMetricPlots() ... 
[03:43:46    INFO]  - Will use (1) MLMs from the input chain: ANNZ_17,
[03:43:48    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_17/plots/
[03:43:50        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_17/plots output/PAUS_advanced10/regres/train/ANNZ_17/plots_biasCor_before
[03:43:50    INFO]  - starting ANNZ::doMetricPlots() ... 
[03:43:50    INFO]  - Will use (1) MLMs from the input chain: ANNZ_17,
[03:43:51    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_17/plots/
[03:43:53        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_17/plots output/PAUS_advanced10/regres/train/ANNZ_17/plots_biasCor_after
[03:43:53    INFO]  - Got original [KS-test,N_poiss]: [0.0585527 , 5.40829] , after the bias-correction: [0.0277321 , 4.37707] --> will KEEP the correction !

(03:43 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(03:43 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(03:43 INFO) 
[03:43:55    INFO]  -----------------------------------------------------
[03:43:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[03:43:55    INFO]  -----------------------------------------------------------------------------------------------------------
[03:43:56    INFO]  - starting ANNZ::Init()  ... 
[03:43:58    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_18/saveOpt.txt ...
[03:44:13    INFO]  - starting ANNZ::Train_singleReg() ... 
[03:44:13    INFO] ----------------------------------------------------------------------------------------------------
[03:44:13    INFO]  - will book (ANNZ_18) method(BDT) with options: :NTrees=500:BoostType=Bagging:VarTransform=N
[03:44:13    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[03:44:13    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[03:44:13    INFO]      cuts (train):        ,
[03:44:13    INFO]      cuts (valid):       
[03:44:13    INFO]    - weights:            1
[03:44:13    INFO] ----------------------------------------------------------------------------------------------------
[03:44:13    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[03:44:47    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_18/ANNZ_18_weights/saveTrainOpt_ANNZ_18.txt ...
[03:44:50    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_18 ... 
[03:44:50    INFO]  - Will gen. input-parameter errors ...
[03:44:52    INFO]  - starting ANNZ::loadReaders() ... 
[03:44:59    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[03:46:21    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:46:21    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:46:21    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[03:46:21    INFO]  -----------------------------------------------------------------------------------------------------------
[03:46:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:46:49    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:46:49    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[03:46:49    INFO]  -----------------------------------------------------------------------------------------------------------
[03:46:49    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[03:47:17    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:47:17    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:47:17    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[03:47:17    INFO]  -----------------------------------------------------------------------------------------------------------
[03:47:17    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_18/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[03:47:19    INFO]  - ending makeTreeRegClsOneMLM() ... 
[03:47:19    INFO]  - will try to derive a bias correction ... 
[03:47:19    INFO]  - will validate that training produced an XML file for later ... 
[03:47:19    INFO]  - starting ANNZ::loadReaders() ... 
[03:47:23    INFO]  - will validate that the training was not a complete failure ... 
[03:47:23    INFO]  - training seems to have been successful! will move on ...
[03:47:23    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[03:47:26    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[03:47:28    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[03:47:28    INFO] ----------------------------------------------------------------------------------------------------
[03:47:28    INFO]  - will book (ANNZ_18_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[03:47:28    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[03:47:28    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[03:47:28    INFO]    - weights:            1
[03:47:28    INFO] ----------------------------------------------------------------------------------------------------
[03:47:28    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[03:47:33    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_18 ... 
[03:47:33    INFO]  - Will gen. input-parameter errors ...
[03:47:35    INFO]  - starting ANNZ::loadReaders() ... 
[03:47:44    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[03:49:34    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:49:34    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:49:34    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[03:49:34    INFO]  -----------------------------------------------------------------------------------------------------------
[03:50:12    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:50:12    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:50:12    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[03:50:12    INFO]  -----------------------------------------------------------------------------------------------------------
[03:50:12    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[03:50:48    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:50:48    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:50:48    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[03:50:48    INFO]  -----------------------------------------------------------------------------------------------------------
[03:50:49    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_18/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[03:50:50    INFO]  - ending makeTreeRegClsOneMLM() ... 
[03:50:50    INFO]  - will validate that the bias-correction actually improved the result ...
[03:50:50    INFO]  - starting ANNZ::doMetricPlots() ... 
[03:50:50    INFO]  - Will use (1) MLMs from the input chain: ANNZ_18,
[03:50:52    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_18/plots/
[03:50:54        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_18/plots output/PAUS_advanced10/regres/train/ANNZ_18/plots_biasCor_before
[03:50:54    INFO]  - starting ANNZ::doMetricPlots() ... 
[03:50:54    INFO]  - Will use (1) MLMs from the input chain: ANNZ_18,
[03:50:55    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_18/plots/
[03:50:57        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_18/plots output/PAUS_advanced10/regres/train/ANNZ_18/plots_biasCor_after
[03:50:57    INFO]  - Got original [KS-test,N_poiss]: [0.0379721 , 4.79002] , after the bias-correction: [0.0266052 , 4.31086] --> will KEEP the correction !

(03:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(03:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(03:51 INFO) 
[03:51:00    INFO]  -----------------------------------------------------
[03:51:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[03:51:00    INFO]  -----------------------------------------------------------------------------------------------------------
[03:51:01    INFO]  - starting ANNZ::Init()  ... 
[03:51:02    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_19/saveOpt.txt ...
[03:51:16    INFO]  - starting ANNZ::Train_singleReg() ... 
[03:51:17    INFO] ----------------------------------------------------------------------------------------------------
[03:51:17    INFO]  - will book (ANNZ_19) method(BDT) with options: :NTrees=340:BoostType=Bagging:VarTransform=N,P
[03:51:17    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[03:51:17    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[03:51:17    INFO]      cuts (train):        ,
[03:51:17    INFO]      cuts (valid):       
[03:51:17    INFO]    - weights:            1
[03:51:17    INFO] ----------------------------------------------------------------------------------------------------
[03:51:17    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[03:51:38    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_19/ANNZ_19_weights/saveTrainOpt_ANNZ_19.txt ...
[03:51:41    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_19 ... 
[03:51:41    INFO]  - Will gen. input-parameter errors ...
[03:51:42    INFO]  - starting ANNZ::loadReaders() ... 
[03:51:47    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[03:52:50    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:52:50    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:52:50    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[03:52:50    INFO]  -----------------------------------------------------------------------------------------------------------
[03:53:12    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:53:12    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:53:12    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[03:53:12    INFO]  -----------------------------------------------------------------------------------------------------------
[03:53:12    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[03:53:34    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:53:34    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:53:34    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[03:53:34    INFO]  -----------------------------------------------------------------------------------------------------------
[03:53:34    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_19/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[03:53:35    INFO]  - ending makeTreeRegClsOneMLM() ... 
[03:53:35    INFO]  - will try to derive a bias correction ... 
[03:53:35    INFO]  - will validate that training produced an XML file for later ... 
[03:53:35    INFO]  - starting ANNZ::loadReaders() ... 
[03:53:38    INFO]  - will validate that the training was not a complete failure ... 
[03:53:38    INFO]  - training seems to have been successful! will move on ...
[03:53:38    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[03:53:41    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[03:53:42    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[03:53:43    INFO] ----------------------------------------------------------------------------------------------------
[03:53:43    INFO]  - will book (ANNZ_19_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[03:53:43    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[03:53:43    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[03:53:43    INFO]    - weights:            1
[03:53:43    INFO] ----------------------------------------------------------------------------------------------------
[03:53:43    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[03:53:47    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_19 ... 
[03:53:47    INFO]  - Will gen. input-parameter errors ...
[03:53:49    INFO]  - starting ANNZ::loadReaders() ... 
[03:53:55    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[03:55:33    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:55:33    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:55:33    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[03:55:33    INFO]  -----------------------------------------------------------------------------------------------------------
[03:56:06    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:56:06    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:56:06    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[03:56:06    INFO]  -----------------------------------------------------------------------------------------------------------
[03:56:06    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[03:56:37    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:56:37    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:56:37    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[03:56:37    INFO]  -----------------------------------------------------------------------------------------------------------
[03:56:37    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_19/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[03:56:39    INFO]  - ending makeTreeRegClsOneMLM() ... 
[03:56:39    INFO]  - will validate that the bias-correction actually improved the result ...
[03:56:39    INFO]  - starting ANNZ::doMetricPlots() ... 
[03:56:39    INFO]  - Will use (1) MLMs from the input chain: ANNZ_19,
[03:56:40    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_19/plots/
[03:56:42        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_19/plots output/PAUS_advanced10/regres/train/ANNZ_19/plots_biasCor_before
[03:56:42    INFO]  - starting ANNZ::doMetricPlots() ... 
[03:56:42    INFO]  - Will use (1) MLMs from the input chain: ANNZ_19,
[03:56:43    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_19/plots/
[03:56:46        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_19/plots output/PAUS_advanced10/regres/train/ANNZ_19/plots_biasCor_after
[03:56:46    INFO]  - Got original [KS-test,N_poiss]: [0.0317425 , 4.118] , after the bias-correction: [0.0211966 , 3.50405] --> will KEEP the correction !

(03:56 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(03:56 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=380:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(03:56 INFO) 
[03:56:48    INFO]  -----------------------------------------------------
[03:56:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[03:56:48    INFO]  -----------------------------------------------------------------------------------------------------------
[03:56:49    INFO]  - starting ANNZ::Init()  ... 
[03:56:50    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_20/saveOpt.txt ...
[03:57:05    INFO]  - starting ANNZ::Train_singleReg() ... 
[03:57:05    INFO] ----------------------------------------------------------------------------------------------------
[03:57:05    INFO]  - will book (ANNZ_20) method(BDT) with options: :NTrees=380:BoostType=AdaBoost:VarTransform=N,P
[03:57:05    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[03:57:05    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[03:57:05    INFO]      cuts (train):        ,
[03:57:05    INFO]      cuts (valid):       
[03:57:05    INFO]    - weights:            1
[03:57:05    INFO] ----------------------------------------------------------------------------------------------------
[03:57:05    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[03:57:21    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_20/ANNZ_20_weights/saveTrainOpt_ANNZ_20.txt ...
[03:57:23    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_20 ... 
[03:57:23    INFO]  - Will gen. input-parameter errors ...
[03:57:25    INFO]  - starting ANNZ::loadReaders() ... 
[03:57:27    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[03:58:18    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:58:18    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:58:18    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[03:58:18    INFO]  -----------------------------------------------------------------------------------------------------------
[03:58:34    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:58:34    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:58:34    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[03:58:34    INFO]  -----------------------------------------------------------------------------------------------------------
[03:58:34    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[03:58:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[03:58:49    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[03:58:49    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[03:58:49    INFO]  -----------------------------------------------------------------------------------------------------------
[03:58:49    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_20/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[03:58:50    INFO]  - ending makeTreeRegClsOneMLM() ... 
[03:58:50    INFO]  - will try to derive a bias correction ... 
[03:58:50    INFO]  - will validate that training produced an XML file for later ... 
[03:58:50    INFO]  - starting ANNZ::loadReaders() ... 
[03:58:51    INFO]  - will validate that the training was not a complete failure ... 
[03:58:51    INFO]  - training seems to have been successful! will move on ...
[03:58:51    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[03:58:54    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[03:58:55    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[03:58:56    INFO] ----------------------------------------------------------------------------------------------------
[03:58:56    INFO]  - will book (ANNZ_20_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[03:58:56    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[03:58:56    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[03:58:56    INFO]    - weights:            1
[03:58:56    INFO] ----------------------------------------------------------------------------------------------------
[03:58:56    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[03:59:00    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_20 ... 
[03:59:00    INFO]  - Will gen. input-parameter errors ...
[03:59:01    INFO]  - starting ANNZ::loadReaders() ... 
[03:59:05    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[04:00:14    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:00:14    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:00:14    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[04:00:14    INFO]  -----------------------------------------------------------------------------------------------------------
[04:00:39    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:00:39    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:00:39    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[04:00:39    INFO]  -----------------------------------------------------------------------------------------------------------
[04:00:39    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[04:01:02    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:01:02    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:01:02    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[04:01:02    INFO]  -----------------------------------------------------------------------------------------------------------
[04:01:02    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_20/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[04:01:03    INFO]  - ending makeTreeRegClsOneMLM() ... 
[04:01:03    INFO]  - will validate that the bias-correction actually improved the result ...
[04:01:03    INFO]  - starting ANNZ::doMetricPlots() ... 
[04:01:03    INFO]  - Will use (1) MLMs from the input chain: ANNZ_20,
[04:01:04    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_20/plots/
[04:01:07        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_20/plots output/PAUS_advanced10/regres/train/ANNZ_20/plots_biasCor_before
[04:01:07    INFO]  - starting ANNZ::doMetricPlots() ... 
[04:01:07    INFO]  - Will use (1) MLMs from the input chain: ANNZ_20,
[04:01:08    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_20/plots/
[04:01:10        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_20/plots output/PAUS_advanced10/regres/train/ANNZ_20/plots_biasCor_after
[04:01:10    INFO]  - Got original [KS-test,N_poiss]: [0.0605792 , 4.67396] , after the bias-correction: [0.0206657 , 3.62444] --> will KEEP the correction !

(04:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(04:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(04:01 INFO) 
[04:01:12    INFO]  -----------------------------------------------------
[04:01:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[04:01:12    INFO]  -----------------------------------------------------------------------------------------------------------
[04:01:13    INFO]  - starting ANNZ::Init()  ... 
[04:01:15    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_21/saveOpt.txt ...
[04:01:30    INFO]  - starting ANNZ::Train_singleReg() ... 
[04:01:30    INFO] ----------------------------------------------------------------------------------------------------
[04:01:30    INFO]  - will book (ANNZ_21) method(BDT) with options: :NTrees=480:BoostType=AdaBoost:VarTransform=N,P
[04:01:30    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[04:01:30    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[04:01:30    INFO]      cuts (train):        ,
[04:01:30    INFO]      cuts (valid):       
[04:01:30    INFO]    - weights:            1
[04:01:30    INFO] ----------------------------------------------------------------------------------------------------
[04:01:30    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[04:01:51    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_21/ANNZ_21_weights/saveTrainOpt_ANNZ_21.txt ...
[04:01:53    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_21 ... 
[04:01:53    INFO]  - Will gen. input-parameter errors ...
[04:01:55    INFO]  - starting ANNZ::loadReaders() ... 
[04:01:58    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[04:02:55    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:02:55    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:02:55    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[04:02:55    INFO]  -----------------------------------------------------------------------------------------------------------
[04:03:14    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:03:14    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:03:14    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[04:03:14    INFO]  -----------------------------------------------------------------------------------------------------------
[04:03:14    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[04:03:33    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:03:33    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:03:33    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[04:03:33    INFO]  -----------------------------------------------------------------------------------------------------------
[04:03:34    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_21/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[04:03:34    INFO]  - ending makeTreeRegClsOneMLM() ... 
[04:03:34    INFO]  - will try to derive a bias correction ... 
[04:03:34    INFO]  - will validate that training produced an XML file for later ... 
[04:03:34    INFO]  - starting ANNZ::loadReaders() ... 
[04:03:36    INFO]  - will validate that the training was not a complete failure ... 
[04:03:36    INFO]  - training seems to have been successful! will move on ...
[04:03:36    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[04:03:39    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[04:03:40    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[04:03:41    INFO] ----------------------------------------------------------------------------------------------------
[04:03:41    INFO]  - will book (ANNZ_21_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[04:03:41    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[04:03:41    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[04:03:41    INFO]    - weights:            1
[04:03:41    INFO] ----------------------------------------------------------------------------------------------------
[04:03:41    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[04:03:45    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_21 ... 
[04:03:45    INFO]  - Will gen. input-parameter errors ...
[04:03:46    INFO]  - starting ANNZ::loadReaders() ... 
[04:03:51    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[04:05:11    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:05:11    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:05:11    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[04:05:11    INFO]  -----------------------------------------------------------------------------------------------------------
[04:05:40    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:05:40    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:05:40    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[04:05:40    INFO]  -----------------------------------------------------------------------------------------------------------
[04:05:40    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[04:06:07    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:06:07    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:06:07    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[04:06:07    INFO]  -----------------------------------------------------------------------------------------------------------
[04:06:07    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_21/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[04:06:08    INFO]  - ending makeTreeRegClsOneMLM() ... 
[04:06:08    INFO]  - will validate that the bias-correction actually improved the result ...
[04:06:08    INFO]  - starting ANNZ::doMetricPlots() ... 
[04:06:08    INFO]  - Will use (1) MLMs from the input chain: ANNZ_21,
[04:06:10    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_21/plots/
[04:06:12        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_21/plots output/PAUS_advanced10/regres/train/ANNZ_21/plots_biasCor_before
[04:06:12    INFO]  - starting ANNZ::doMetricPlots() ... 
[04:06:12    INFO]  - Will use (1) MLMs from the input chain: ANNZ_21,
[04:06:13    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_21/plots/
[04:06:15        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_21/plots output/PAUS_advanced10/regres/train/ANNZ_21/plots_biasCor_after
[04:06:15    INFO]  - Got original [KS-test,N_poiss]: [0.0605792 , 4.66673] , after the bias-correction: [0.0211878 , 3.68495] --> will KEEP the correction !

(04:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(04:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=250:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(04:06 INFO) 
[04:06:17    INFO]  -----------------------------------------------------
[04:06:17    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[04:06:17    INFO]  -----------------------------------------------------------------------------------------------------------
[04:06:18    INFO]  - starting ANNZ::Init()  ... 
[04:06:20    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_22/saveOpt.txt ...
[04:06:34    INFO]  - starting ANNZ::Train_singleReg() ... 
[04:06:34    INFO] ----------------------------------------------------------------------------------------------------
[04:06:34    INFO]  - will book (ANNZ_22) method(BDT) with options: :NTrees=250:BoostType=AdaBoost:VarTransform=N,P
[04:06:34    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[04:06:34    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[04:06:34    INFO]      cuts (train):        ,
[04:06:34    INFO]      cuts (valid):       
[04:06:34    INFO]    - weights:            1
[04:06:34    INFO] ----------------------------------------------------------------------------------------------------
[04:06:35    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[04:06:46    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_22/ANNZ_22_weights/saveTrainOpt_ANNZ_22.txt ...
[04:06:48    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_22 ... 
[04:06:48    INFO]  - Will gen. input-parameter errors ...
[04:06:50    INFO]  - starting ANNZ::loadReaders() ... 
[04:06:51    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[04:07:27    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:07:27    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:07:27    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[04:07:27    INFO]  -----------------------------------------------------------------------------------------------------------
[04:07:39    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:07:39    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:07:39    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[04:07:39    INFO]  -----------------------------------------------------------------------------------------------------------
[04:07:39    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[04:07:51    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:07:51    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:07:51    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[04:07:51    INFO]  -----------------------------------------------------------------------------------------------------------
[04:07:51    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_22/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[04:07:52    INFO]  - ending makeTreeRegClsOneMLM() ... 
[04:07:52    INFO]  - will try to derive a bias correction ... 
[04:07:52    INFO]  - will validate that training produced an XML file for later ... 
[04:07:52    INFO]  - starting ANNZ::loadReaders() ... 
[04:07:53    INFO]  - will validate that the training was not a complete failure ... 
[04:07:53    INFO]  - training seems to have been successful! will move on ...
[04:07:53    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[04:07:56    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[04:07:57    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[04:07:57    INFO] ----------------------------------------------------------------------------------------------------
[04:07:57    INFO]  - will book (ANNZ_22_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[04:07:57    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[04:07:57    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[04:07:57    INFO]    - weights:            1
[04:07:57    INFO] ----------------------------------------------------------------------------------------------------
[04:07:57    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[04:08:01    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_22 ... 
[04:08:01    INFO]  - Will gen. input-parameter errors ...
[04:08:03    INFO]  - starting ANNZ::loadReaders() ... 
[04:08:06    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[04:09:02    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:09:02    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:09:02    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[04:09:02    INFO]  -----------------------------------------------------------------------------------------------------------
[04:09:22    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:09:22    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:09:22    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[04:09:22    INFO]  -----------------------------------------------------------------------------------------------------------
[04:09:22    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[04:09:41    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:09:41    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:09:41    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[04:09:41    INFO]  -----------------------------------------------------------------------------------------------------------
[04:09:41    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_22/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[04:09:42    INFO]  - ending makeTreeRegClsOneMLM() ... 
[04:09:42    INFO]  - will validate that the bias-correction actually improved the result ...
[04:09:42    INFO]  - starting ANNZ::doMetricPlots() ... 
[04:09:42    INFO]  - Will use (1) MLMs from the input chain: ANNZ_22,
[04:09:43    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_22/plots/
[04:09:46        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_22/plots output/PAUS_advanced10/regres/train/ANNZ_22/plots_biasCor_before
[04:09:46    INFO]  - starting ANNZ::doMetricPlots() ... 
[04:09:46    INFO]  - Will use (1) MLMs from the input chain: ANNZ_22,
[04:09:47    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_22/plots/
[04:09:49        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_22/plots output/PAUS_advanced10/regres/train/ANNZ_22/plots_biasCor_after
[04:09:49    INFO]  - Got original [KS-test,N_poiss]: [0.0596731 , 4.6667] , after the bias-correction: [0.0208165 , 3.65868] --> will KEEP the correction !

(04:09 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(04:09 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=300:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(04:09 INFO) 
[04:09:51    INFO]  -----------------------------------------------------
[04:09:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[04:09:51    INFO]  -----------------------------------------------------------------------------------------------------------
[04:09:52    INFO]  - starting ANNZ::Init()  ... 
[04:09:53    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_23/saveOpt.txt ...
[04:10:08    INFO]  - starting ANNZ::Train_singleReg() ... 
[04:10:08    INFO] ----------------------------------------------------------------------------------------------------
[04:10:08    INFO]  - will book (ANNZ_23) method(BDT) with options: :NTrees=300:BoostType=AdaBoost:VarTransform=N
[04:10:08    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[04:10:08    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[04:10:08    INFO]      cuts (train):        ,
[04:10:08    INFO]      cuts (valid):       
[04:10:08    INFO]    - weights:            1
[04:10:08    INFO] ----------------------------------------------------------------------------------------------------
[04:10:08    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[04:10:22    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_23/ANNZ_23_weights/saveTrainOpt_ANNZ_23.txt ...
[04:10:24    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_23 ... 
[04:10:24    INFO]  - Will gen. input-parameter errors ...
[04:10:25    INFO]  - starting ANNZ::loadReaders() ... 
[04:10:27    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[04:11:05    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:11:05    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:11:05    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[04:11:05    INFO]  -----------------------------------------------------------------------------------------------------------
[04:11:18    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:11:18    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:11:18    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[04:11:18    INFO]  -----------------------------------------------------------------------------------------------------------
[04:11:18    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[04:11:30    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:11:30    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:11:30    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[04:11:30    INFO]  -----------------------------------------------------------------------------------------------------------
[04:11:30    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_23/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[04:11:31    INFO]  - ending makeTreeRegClsOneMLM() ... 
[04:11:31    INFO]  - will try to derive a bias correction ... 
[04:11:31    INFO]  - will validate that training produced an XML file for later ... 
[04:11:31    INFO]  - starting ANNZ::loadReaders() ... 
[04:11:32    INFO]  - will validate that the training was not a complete failure ... 
[04:11:32    INFO]  - training seems to have been successful! will move on ...
[04:11:32    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[04:11:35    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[04:11:36    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[04:11:36    INFO] ----------------------------------------------------------------------------------------------------
[04:11:36    INFO]  - will book (ANNZ_23_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[04:11:36    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[04:11:36    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[04:11:36    INFO]    - weights:            1
[04:11:36    INFO] ----------------------------------------------------------------------------------------------------
[04:11:36    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[04:11:41    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_23 ... 
[04:11:41    INFO]  - Will gen. input-parameter errors ...
[04:11:42    INFO]  - starting ANNZ::loadReaders() ... 
[04:11:45    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[04:12:43    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:12:43    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:12:43    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[04:12:43    INFO]  -----------------------------------------------------------------------------------------------------------
[04:13:04    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:13:04    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:13:04    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[04:13:04    INFO]  -----------------------------------------------------------------------------------------------------------
[04:13:04    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[04:13:24    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:13:24    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:13:24    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[04:13:24    INFO]  -----------------------------------------------------------------------------------------------------------
[04:13:24    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_23/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[04:13:25    INFO]  - ending makeTreeRegClsOneMLM() ... 
[04:13:25    INFO]  - will validate that the bias-correction actually improved the result ...
[04:13:25    INFO]  - starting ANNZ::doMetricPlots() ... 
[04:13:25    INFO]  - Will use (1) MLMs from the input chain: ANNZ_23,
[04:13:26    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_23/plots/
[04:13:28        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_23/plots output/PAUS_advanced10/regres/train/ANNZ_23/plots_biasCor_before
[04:13:28    INFO]  - starting ANNZ::doMetricPlots() ... 
[04:13:28    INFO]  - Will use (1) MLMs from the input chain: ANNZ_23,
[04:13:29    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_23/plots/
[04:13:32        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_23/plots output/PAUS_advanced10/regres/train/ANNZ_23/plots_biasCor_after
[04:13:32    INFO]  - Got original [KS-test,N_poiss]: [0.0471873 , 4.92201] , after the bias-correction: [0.0269064 , 4.14901] --> will KEEP the correction !

(04:13 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(04:13 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(04:13 INFO) 
[04:13:34    INFO]  -----------------------------------------------------
[04:13:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[04:13:34    INFO]  -----------------------------------------------------------------------------------------------------------
[04:13:35    INFO]  - starting ANNZ::Init()  ... 
[04:13:36    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/train/ANNZ_24/saveOpt.txt ...
[04:13:50    INFO]  - starting ANNZ::Train_singleReg() ... 
[04:13:51    INFO] ----------------------------------------------------------------------------------------------------
[04:13:51    INFO]  - will book (ANNZ_24) method(BDT) with options: :NTrees=290:BoostType=AdaBoost:VarTransform=N
[04:13:51    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[04:13:51    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000) ,
[04:13:51    INFO]      cuts (train):        ,
[04:13:51    INFO]      cuts (valid):       
[04:13:51    INFO]    - weights:            1
[04:13:51    INFO] ----------------------------------------------------------------------------------------------------
[04:13:51    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[04:14:05    INFO]  - Saving MLM information in ./output/PAUS_advanced10/regres/train/ANNZ_24/ANNZ_24_weights/saveTrainOpt_ANNZ_24.txt ...
[04:14:06    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_24 ... 
[04:14:06    INFO]  - Will gen. input-parameter errors ...
[04:14:08    INFO]  - starting ANNZ::loadReaders() ... 
[04:14:10    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[04:14:46    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:14:46    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:14:46    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[04:14:46    INFO]  -----------------------------------------------------------------------------------------------------------
[04:14:58    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:14:58    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:14:58    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[04:14:58    INFO]  -----------------------------------------------------------------------------------------------------------
[04:14:58    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[04:15:10    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:15:10    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:15:10    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[04:15:10    INFO]  -----------------------------------------------------------------------------------------------------------
[04:15:10    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_24/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[04:15:11    INFO]  - ending makeTreeRegClsOneMLM() ... 
[04:15:11    INFO]  - will try to derive a bias correction ... 
[04:15:11    INFO]  - will validate that training produced an XML file for later ... 
[04:15:11    INFO]  - starting ANNZ::loadReaders() ... 
[04:15:12    INFO]  - will validate that the training was not a complete failure ... 
[04:15:12    INFO]  - training seems to have been successful! will move on ...
[04:15:12    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[04:15:15    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[04:15:16    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[04:15:17    INFO] ----------------------------------------------------------------------------------------------------
[04:15:17    INFO]  - will book (ANNZ_24_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[04:15:17    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[04:15:17    INFO]    - cuts (all):         (zb >= 0.000000)&&(zb <= 1.200000)
[04:15:17    INFO]    - weights:            1
[04:15:17    INFO] ----------------------------------------------------------------------------------------------------
[04:15:17    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[04:15:21    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_24 ... 
[04:15:21    INFO]  - Will gen. input-parameter errors ...
[04:15:22    INFO]  - starting ANNZ::loadReaders() ... 
[04:15:25    INFO]  - added chain ANNZ_tree_train(13465) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_train*.root
[04:16:22    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:16:22    INFO]  -- ANNZ_tree_train .................................... 4  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:16:22    INFO]  -- ANNZ_tree_train ................................ 10000  nObj
[04:16:22    INFO]  -----------------------------------------------------------------------------------------------------------
[04:16:41    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:16:41    INFO]  -- ANNZ_tree_train .................................... 6  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:16:41    INFO]  -- ANNZ_tree_train ................................ 13465  nObj
[04:16:41    INFO]  -----------------------------------------------------------------------------------------------------------
[04:16:41    INFO]  - added chain ANNZ_tree_valid(3366) from ./output/PAUS_advanced10/rootIn/ANNZ_tree_valid*.root
[04:17:01    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[04:17:01    INFO]  -- ANNZ_tree_valid .................................... 1  failedCut: _comn [ (zb >= 0.000000)&&(zb <= 1.200000) ]
[04:17:01    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[04:17:01    INFO]  -----------------------------------------------------------------------------------------------------------
[04:17:01    INFO]  - Saving file ./output/PAUS_advanced10/regres/train/ANNZ_24/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[04:17:01    INFO]  - ending makeTreeRegClsOneMLM() ... 
[04:17:01    INFO]  - will validate that the bias-correction actually improved the result ...
[04:17:02    INFO]  - starting ANNZ::doMetricPlots() ... 
[04:17:02    INFO]  - Will use (1) MLMs from the input chain: ANNZ_24,
[04:17:03    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_24/plots/
[04:17:05        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_24/plots output/PAUS_advanced10/regres/train/ANNZ_24/plots_biasCor_before
[04:17:05    INFO]  - starting ANNZ::doMetricPlots() ... 
[04:17:05    INFO]  - Will use (1) MLMs from the input chain: ANNZ_24,
[04:17:06    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/train/ANNZ_24/plots/
[04:17:08        ]  - Sys-comnd (exit=0) : mv output/PAUS_advanced10/regres/train/ANNZ_24/plots output/PAUS_advanced10/regres/train/ANNZ_24/plots_biasCor_after
[04:17:08    INFO]  - Got original [KS-test,N_poiss]: [0.0471873 , 4.92375] , after the bias-correction: [0.0269064 , 4.15114] --> will KEEP the correction !

(04:17 INFO) [40;37;1m - 13/02/19 04:17:10 - finished running ANNZ ![0m
(09:50 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(09:50 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(09:50 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(09:50 INFO) [40;37;1m - 13/02/19 09:50:16 - starting ANNZ[0m
(09:50 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(09:50 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mTrue[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34maddOutputVars[0m[31m=[0m'[32mref_id;zb;pz_width;odds;qz;production_id;paudm_id;ra;dec;zspec;conf[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mnPDFbins[0m[31m=[0m'[32m120[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mMLMsToStore[0m[31m=[0m'[32m[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , [34mnPDFs[0m[31m=[0m'[32m1[0m' , 
(09:50 INFO) 
[09:50:16    INFO]  -----------------------------------------------------
[09:50:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[09:50:16    INFO]  -----------------------------------------------------------------------------------------------------------
[09:50:17    INFO]  - starting ANNZ::Init()  ... 
[09:50:17    INFO]  - Will generate 1 PDFs ... 
[09:50:27    INFO] --------------------------------------------------------
[09:50:27    INFO]  - All ACCEPTED MLMs: ANNZ_0,ANNZ_1,ANNZ_2,ANNZ_3,ANNZ_4,ANNZ_5,ANNZ_6,ANNZ_7,ANNZ_8,ANNZ_9,ANNZ_10,ANNZ_11,ANNZ_12,ANNZ_13,ANNZ_14,ANNZ_15,ANNZ_16,ANNZ_17,ANNZ_18,ANNZ_19,ANNZ_20,ANNZ_21,ANNZ_22,ANNZ_23,ANNZ_24,
[09:50:27    INFO]  - All REJECTED MLMs: 
[09:50:27    INFO] ----------------------------------------------------------------------------------------------------------------
[09:50:30    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/optim/saveOpt.txt ...
[09:51:18    INFO]  - starting ANNZ::Optim() ... 
[09:51:18    INFO]  - starting ANNZ::makeTreeRegClsAllMLM() ... 
[09:51:19    INFO]  - Did not find requred merged result-trees with the correct number of entries -> Will do merging ...
[09:51:33    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[09:51:34    INFO]  - starting ANNZ::verifyIndicesMLM(ANNZ_tree_train , ./output/PAUS_advanced10/regres/train/postTrain/ANNZ_tree_train_00000.root) ... 
[09:51:46    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[09:51:46    INFO]  - starting ANNZ::verifyIndicesMLM(ANNZ_tree_valid , ./output/PAUS_advanced10/regres/train/postTrain/ANNZ_tree_valid_00001.root) ... 
[09:51:59    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[09:51:59    INFO]  - starting ANNZ::verifyIndicesMLM(ANNZ_tree_errKNN , ./output/PAUS_advanced10/regres/train/postTrain/ANNZ_tree_errKNN_00002.root) ... 
[09:51:59    INFO]  - Saving file ./output/PAUS_advanced10/regres/train//postTrain/savePostTrainOpt.txt to log the creation time of the trees ...
[09:52:00    INFO]  - There was need to regenerate the merged result-trees. Will validate that all is good now ...
[09:52:00    INFO]  - Found all requred post-train root files -> Getting from file ./output/PAUS_advanced10/regres/train//postTrain/savePostTrainOpt.txt the creation time of the merged trees and comparing to the creationg time of source result-trees ...
[09:52:00    INFO]  - No new MLMs found ... no need to regenerate the merged trees.
[09:52:00    INFO]  - ending makeTreeRegClsAllMLM() ... 
[09:52:00    INFO]  - starting ANNZ::optimReg() ... 
[09:52:03    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[09:52:04    INFO]  - starting ANNZ::verifyIndicesMLM(ANNZ_tree_train , ./output/PAUS_advanced10/regres/optim/train/ANNZ_tree_train_00000.root) ... 
[09:52:04    INFO]  - starting ANNZ::fillColosureV() ... 
[09:52:05    INFO]  ---------------------------------------------------------------------------------- 
[09:52:05    INFO]  - Got the following average properties: 
[09:52:05    INFO]  --------------------------------------- 
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_0 	 0.00329479 	 0.0458071 	 0.0853006
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_1 	 0.00391812 	 0.0435411 	 0.0917677
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_2 	 0.00324406 	 0.0457805 	 0.0848992
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_3 	 0.00535728 	 0.040315 	 0.0737236
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_4 	 0.00343863 	 0.0517887 	 0.0740142
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_5 	 0.00535089 	 0.0404693 	 0.0729387
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_6 	 0.00355234 	 0.0518285 	 0.0742975
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_7 	 0.00541578 	 0.0496431 	 0.0430705
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_8 	 0.00538648 	 0.0407571 	 0.0717294
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_9 	 0.00525544 	 0.0493815 	 0.042801
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_10 	 0.00296921 	 0.0454073 	 0.0853868
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_11 	 0.00641967 	 0.0447147 	 0.0439616
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_12 	 0.00641967 	 0.0447147 	 0.0439616
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_13 	 0.00542226 	 0.0403287 	 0.0737252
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_14 	 0.00333269 	 0.0458333 	 0.085232
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_15 	 0.00519252 	 0.0405605 	 0.0722165
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_16 	 0.00544372 	 0.0494457 	 0.0430603
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_17 	 0.00605375 	 0.0445578 	 0.0462694
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_18 	 0.00548512 	 0.0403347 	 0.0733239
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_19 	 0.00308429 	 0.0378526 	 0.0804088
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_20 	 0.00326513 	 0.0458671 	 0.0843269
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_21 	 0.00335284 	 0.045692 	 0.0849482
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_22 	 0.00296921 	 0.0454073 	 0.0853868
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_23 	 0.00357543 	 0.0517326 	 0.0739827
[09:52:05    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_24 	 0.00357504 	 0.0517326 	 0.0739827
[09:52:05    INFO]  ------------------------------------------------------------------------------------------------- 
[09:52:05    INFO]  - starting ANNZ::getBestANNZ(optimCondReg="sig68") ... 
[09:52:05    INFO]  - Will optimize based on bias and sig68 only (priority on sig68)
[09:52:05    INFO]  - Now trying to find best methods with a limit of 10% of the [sig68] dist, and 20% of the other(s) - iteration 0 ...
[09:52:05    INFO]  - Found 1 "best" methods (min-threshold was 1) from the bottom 10% of the [sig68] dist.
[09:52:05    INFO]  - The "best" MLM is: ANNZ_19
[09:52:05    INFO]  - starting ANNZ::getRndMethodBestPDF() ... 
[09:52:05    INFO]  - initial PDF weights: ANNZ_19:0.143 ANNZ_10:0.132 ANNZ_22:0.121 ANNZ_2:0.110 ANNZ_20:0.099 ANNZ_0:0.088 ANNZ_14:0.077 ANNZ_21:0.066 ANNZ_1:0.055 ANNZ_15:0.044 ANNZ_3:0.033 ANNZ_5:0.022 ANNZ_8:0.011 
[09:52:05    INFO]  - will loop on the input trees ...
[09:52:06    INFO]  - NEW:  0 - min-param best/prev/now: 1.79769e+308 / 1.79769e+308 / 2.45557e-01
[09:52:06    INFO]  - NEW:  1 - min-param best/prev/now: 2.45557e-01 / 2.45557e-01 / 2.44776e-01
[09:52:06    INFO]  - nTry: 2 - min-param best/prev/now: 2.44776e-01 / 2.44776e-01 / 2.46393e-01
[09:52:06    INFO]  - nTry: 3 - min-param best/prev/now: 2.44776e-01 / 2.44776e-01 / 2.45866e-01
[09:52:06    INFO]  - nTry: 4 - min-param best/prev/now: 2.44776e-01 / 2.44776e-01 / 2.46641e-01
[09:52:06    INFO]  - nTry: 5 - min-param best/prev/now: 2.44776e-01 / 2.44776e-01 / 2.46270e-01
[09:52:06    INFO]  - nTry: 6 - min-param best/prev/now: 2.44776e-01 / 2.46270e-01 / 2.46102e-01
[09:52:06    INFO]  - nTry: 7 - min-param best/prev/now: 2.44776e-01 / 2.46102e-01 / 2.46246e-01
[09:52:06    INFO]  - nTry: 8 - min-param best/prev/now: 2.44776e-01 / 2.46246e-01 / 2.46251e-01
[09:52:06    INFO]  - nTry: 9 - min-param best/prev/now: 2.44776e-01 / 2.46246e-01 / 2.46357e-01
[09:52:06    INFO]  - nTry: 10 - min-param best/prev/now: 2.44776e-01 / 2.46246e-01 / 2.46502e-01
[09:52:07    INFO]  - nTry: 20 - min-param best/prev/now: 2.44776e-01 / 2.46641e-01 / 2.46609e-01
[09:52:08    INFO]  - nTry: 30 - min-param best/prev/now: 2.44776e-01 / 2.46805e-01 / 2.47184e-01
[09:52:09    INFO]  - nTry: 40 - min-param best/prev/now: 2.44776e-01 / 2.47373e-01 / 2.47623e-01
[09:52:09    INFO]  - nTry: 50 - min-param best/prev/now: 2.44776e-01 / 2.47373e-01 / 2.47858e-01
[09:52:10    INFO]  - nTry: 60 - min-param best/prev/now: 2.44776e-01 / 2.48022e-01 / 2.48208e-01
[09:52:11    INFO]  - nTry: 70 - min-param best/prev/now: 2.44776e-01 / 2.48260e-01 / 2.48316e-01
[09:52:12    INFO]  - nTry: 80 - min-param best/prev/now: 2.44776e-01 / 2.48382e-01 / 2.48410e-01
[09:52:12    INFO]  - nTry: 90 - min-param best/prev/now: 2.44776e-01 / 2.48387e-01 / 2.48424e-01
[09:52:13    INFO]  - nTry: 100 - min-param best/prev/now: 2.44776e-01 / 2.48450e-01 / 2.48473e-01
[09:52:15    INFO]  - nTry: 120 - min-param best/prev/now: 2.44776e-01 / 2.48498e-01 / 2.48522e-01
[09:52:16    INFO]  - nTry: 140 - min-param best/prev/now: 2.44776e-01 / 2.48475e-01 / 2.48501e-01
[09:52:17    INFO]  - nTry: 150 - min-param best/prev/now: 2.44776e-01 / 2.48563e-01 / 2.48573e-01
[09:52:17    INFO]  - nTry: 160 - min-param best/prev/now: 2.44776e-01 / 2.48565e-01 / 2.48575e-01
[09:52:19    INFO]  - nTry: 180 - min-param best/prev/now: 2.44776e-01 / 2.48792e-01 / 2.48793e-01
[09:52:20    INFO]  - nTry: 200 - min-param best/prev/now: 2.44776e-01 / 2.48719e-01 / 2.48721e-01
[09:52:22    INFO]  - nTry: 220 - min-param best/prev/now: 2.44776e-01 / 2.48677e-01 / 2.48706e-01
[09:52:23    INFO]  - nTry: 240 - min-param best/prev/now: 2.44776e-01 / 2.48669e-01 / 2.48667e-01
[09:52:24    INFO]  - nTry: 250 - min-param best/prev/now: 2.44776e-01 / 2.48659e-01 / 2.48685e-01
[09:52:24    INFO]  - finished PDF optimization! - final minimization parameter: 2.44776e-01 , PDF weights: ANNZ_10:0.128 ANNZ_22:0.124 ANNZ_2:0.102 ANNZ_14:0.092 ANNZ_19:0.086 ANNZ_15:0.083 ANNZ_20:0.081 ANNZ_0:0.079 ANNZ_1:0.071 ANNZ_5:0.069 ANNZ_21:0.051 ANNZ_3:0.019 ANNZ_8:0.014 
[09:52:24    INFO]  - will derive the bias correction for the pdf ... 
[09:52:25    INFO]  - Derived the following PDF(0) weights: ANNZ_0:0.078652, ANNZ_1:0.071277, ANNZ_2:0.102091, ANNZ_3:0.019430, ANNZ_4:0.000000, ANNZ_5:0.069455, ANNZ_6:0.000000, ANNZ_7:0.000000, ANNZ_8:0.014199, ANNZ_9:0.000000, ANNZ_10:0.127650, ANNZ_11:0.000000, ANNZ_12:0.000000, ANNZ_13:0.000000, ANNZ_14:0.092001, ANNZ_15:0.082572, ANNZ_16:0.000000, ANNZ_17:0.000000, ANNZ_18:0.000000, ANNZ_19:0.086130, ANNZ_20:0.081330, ANNZ_21:0.051312, ANNZ_22:0.123901, ANNZ_23:0.000000, ANNZ_24:0.000000, 
[09:52:25    INFO]  - Saving optimization results in ./output/PAUS_advanced10/regres/optim/saveOptimOpt.txt ...
[09:52:27    INFO]  - Saving bias-correction results in ./output/PAUS_advanced10/regres/optim/saveOptimObj.root ...
[09:52:29    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[09:52:30    INFO]  - starting ANNZ::verifyIndicesMLM(ANNZ_tree_valid , ./output/PAUS_advanced10/regres/optim/valid/ANNZ_tree_valid_00000.root) ... 
[09:52:32    INFO]  - starting ANNZ::doEvalReg() ... 
[09:52:32    INFO]  - Will gen. input-parameter errors for: ANNZ_0,ANNZ_1,ANNZ_2,ANNZ_3,ANNZ_4,ANNZ_5,ANNZ_6,ANNZ_7,ANNZ_8,ANNZ_9,ANNZ_10,ANNZ_11,ANNZ_12,ANNZ_13,ANNZ_14,ANNZ_15,ANNZ_16,ANNZ_17,ANNZ_18,ANNZ_19,ANNZ_20,ANNZ_21,ANNZ_22,ANNZ_23,ANNZ_24,
[09:52:32    INFO]  - Reading bias-correction results from ./output/PAUS_advanced10/regres/optim/saveOptimObj.root ...
[09:52:32    INFO]  - Getting optimization results from ./output/PAUS_advanced10/regres/optim/saveOptimOpt.txt ...
[09:52:32    INFO]  - creating final MLM and PDFs trees from input MLM trees ...
[09:52:33    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:52:33    INFO]  -- ANNZ_tree_valid ................................. 3366  nObj
[09:52:33    INFO]  -----------------------------------------------------------------------------------------------------------
[09:52:33    INFO]  - starting storeTreeToAscii() ... 
[09:52:33    INFO]  - will write to file the following branches: ref_id,zb,pz_width,odds,qz,production_id,paudm_id,ra,dec,zspec,conf,ANNZ_best,ANNZ_best_wgt,ANNZ_best_err,ANNZ_MLM_avg_0,ANNZ_MLM_avg_0_err,ANNZ_MLM_avg_0_wgt,ANNZ_PDF_avg_0,ANNZ_PDF_avg_0_err,ANNZ_PDF_avg_0_wgt,ANNZ_PDF_0_0,ANNZ_PDF_0_1,ANNZ_PDF_0_2,ANNZ_PDF_0_3,ANNZ_PDF_0_4,ANNZ_PDF_0_5,ANNZ_PDF_0_6,ANNZ_PDF_0_7,ANNZ_PDF_0_8,ANNZ_PDF_0_9,ANNZ_PDF_0_10,ANNZ_PDF_0_11,ANNZ_PDF_0_12,ANNZ_PDF_0_13,ANNZ_PDF_0_14,ANNZ_PDF_0_15,ANNZ_PDF_0_16,ANNZ_PDF_0_17,ANNZ_PDF_0_18,ANNZ_PDF_0_19,ANNZ_PDF_0_20,ANNZ_PDF_0_21,ANNZ_PDF_0_22,ANNZ_PDF_0_23,ANNZ_PDF_0_24,ANNZ_PDF_0_25,ANNZ_PDF_0_26,ANNZ_PDF_0_27,ANNZ_PDF_0_28,ANNZ_PDF_0_29,ANNZ_PDF_0_30,ANNZ_PDF_0_31,ANNZ_PDF_0_32,ANNZ_PDF_0_33,ANNZ_PDF_0_34,ANNZ_PDF_0_35,ANNZ_PDF_0_36,ANNZ_PDF_0_37,ANNZ_PDF_0_38,ANNZ_PDF_0_39,ANNZ_PDF_0_40,ANNZ_PDF_0_41,ANNZ_PDF_0_42,ANNZ_PDF_0_43,ANNZ_PDF_0_44,ANNZ_PDF_0_45,ANNZ_PDF_0_46,ANNZ_PDF_0_47,ANNZ_PDF_0_48,ANNZ_PDF_0_49,ANNZ_PDF_0_50,ANNZ_PDF_0_51,ANNZ_PDF_0_52,ANNZ_PDF_0_53,ANNZ_PDF_0_54,ANNZ_PDF_0_55,ANNZ_PDF_0_56,ANNZ_PDF_0_57,ANNZ_PDF_0_58,ANNZ_PDF_0_59,ANNZ_PDF_0_60,ANNZ_PDF_0_61,ANNZ_PDF_0_62,ANNZ_PDF_0_63,ANNZ_PDF_0_64,ANNZ_PDF_0_65,ANNZ_PDF_0_66,ANNZ_PDF_0_67,ANNZ_PDF_0_68,ANNZ_PDF_0_69,ANNZ_PDF_0_70,ANNZ_PDF_0_71,ANNZ_PDF_0_72,ANNZ_PDF_0_73,ANNZ_PDF_0_74,ANNZ_PDF_0_75,ANNZ_PDF_0_76,ANNZ_PDF_0_77,ANNZ_PDF_0_78,ANNZ_PDF_0_79,ANNZ_PDF_0_80,ANNZ_PDF_0_81,ANNZ_PDF_0_82,ANNZ_PDF_0_83,ANNZ_PDF_0_84,ANNZ_PDF_0_85,ANNZ_PDF_0_86,ANNZ_PDF_0_87,ANNZ_PDF_0_88,ANNZ_PDF_0_89,ANNZ_PDF_0_90,ANNZ_PDF_0_91,ANNZ_PDF_0_92,ANNZ_PDF_0_93,ANNZ_PDF_0_94,ANNZ_PDF_0_95,ANNZ_PDF_0_96,ANNZ_PDF_0_97,ANNZ_PDF_0_98,ANNZ_PDF_0_99,ANNZ_PDF_0_100,ANNZ_PDF_0_101,ANNZ_PDF_0_102,ANNZ_PDF_0_103,ANNZ_PDF_0_104,ANNZ_PDF_0_105,ANNZ_PDF_0_106,ANNZ_PDF_0_107,ANNZ_PDF_0_108,ANNZ_PDF_0_109,ANNZ_PDF_0_110,ANNZ_PDF_0_111,ANNZ_PDF_0_112,ANNZ_PDF_0_113,ANNZ_PDF_0_114,ANNZ_PDF_0_115,ANNZ_PDF_0_116,ANNZ_PDF_0_117,ANNZ_PDF_0_118,ANNZ_PDF_0_119,
[09:52:33    INFO]  - Will parse  ANNZ_tree_randomReg(3366)... Now in ./output/PAUS_advanced10/regres/optim/eval/ANNZ_randomReg_0000.csv
[09:52:34    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:52:34    INFO]  -- ANNZ_randomReg .................................. 3366  nObj
[09:52:34    INFO]  -----------------------------------------------------------------------------------------------------------
[09:52:34    INFO]  - starting ANNZ::doMetricPlots() ... 
[09:52:34    INFO]  - Will use (1) MLMs from the input chain: ANNZ_best,
[09:52:34    INFO]  - Will use (1) PDFs from the input chain: PDF_0,
[09:52:42    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/optim/eval/plots/

(09:52 INFO) [40;37;1m - 13/02/19 09:52:47 - finished running ANNZ ![0m
(09:53 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(09:53 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(09:53 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(09:53 INFO) [40;37;1m - 13/02/19 09:53:25 - starting ANNZ[0m
(09:53 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(09:53 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m25[0m' , [34minDirName[0m[31m=[0m'[32mPAUS/[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced10[0m' , [34maddOutputVars[0m[31m=[0m'[32mref_id;zb;pz_width;odds;qz;production_id;paudm_id;ra;dec;zspec;conf[0m' , [34mevalDirPostfix[0m[31m=[0m'[32mnFile0[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minAsciiFiles[0m[31m=[0m'[32mANNz_data8c.csv[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34minAsciiVars[0m[31m=[0m'[32mF:ref_id;F:zb;F:pz_width;F:odds;F:qz;F:production_id;F:paudm_id;F:ra;F:dec;F:zspec;F:conf;F:i_auto;F:umag;F:bmag;F:vmag;F:gmag;F:rmag;F:jmag;F:kmag;F:i_auto_err;F:umag_err;F:bmag_err;F:vmag_err;F:gmag_err;F:rmag_err;F:jmag_err;F:kmag_err;F:band0_flux;F:band1_flux;F:band2_flux;F:band3_flux;F:band4_flux;F:band5_flux;F:band6_flux;F:band7_flux;F:band8_flux;F:band9_flux;F:band10_flux;F:band11_flux;F:band12_flux;F:band13_flux;F:band14_flux;F:band15_flux;F:band16_flux;F:band17_flux;F:band18_flux;F:band19_flux;F:band20_flux;F:band21_flux;F:band22_flux;F:band23_flux;F:band24_flux;F:band25_flux;F:band26_flux;F:band27_flux;F:band28_flux;F:band29_flux;F:band30_flux;F:band31_flux;F:band32_flux;F:band33_flux;F:band34_flux;F:band35_flux;F:band36_flux;F:band37_flux;F:band38_flux;F:band39_flux;F:band0_flux_error;F:band1_flux_error;F:band2_flux_error;F:band3_flux_error;F:band4_flux_error;F:band5_flux_error;F:band6_flux_error;F:band7_flux_error;F:band8_flux_error;F:band9_flux_error;F:band10_flux_error;F:band11_flux_error;F:band12_flux_error;F:band13_flux_error;F:band14_flux_error;F:band15_flux_error;F:band16_flux_error;F:band17_flux_error;F:band18_flux_error;F:band19_flux_error;F:band20_flux_error;F:band21_flux_error;F:band22_flux_error;F:band23_flux_error;F:band24_flux_error;F:band25_flux_error;F:band26_flux_error;F:band27_flux_error;F:band28_flux_error;F:band29_flux_error;F:band30_flux_error;F:band31_flux_error;F:band32_flux_error;F:band33_flux_error;F:band34_flux_error;F:band35_flux_error;F:band36_flux_error;F:band37_flux_error;F:band38_flux_error;F:band39_flux_error[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mnPDFbins[0m[31m=[0m'[32m120[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mMLMsToStore[0m[31m=[0m'[32m[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzb[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , [34mnPDFs[0m[31m=[0m'[32m1[0m' , 
(09:53 INFO) 
[09:53:25    INFO]  -----------------------------------------------------
[09:53:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[09:53:25    INFO]  -----------------------------------------------------------------------------------------------------------
[09:53:26    INFO]  - starting ANNZ::Init()  ... 
[09:53:26    INFO]  - Will generate 1 PDFs ... 
[09:53:35    INFO] --------------------------------------------------------
[09:53:35    INFO]  - All ACCEPTED MLMs: ANNZ_0,ANNZ_1,ANNZ_2,ANNZ_3,ANNZ_4,ANNZ_5,ANNZ_6,ANNZ_7,ANNZ_8,ANNZ_9,ANNZ_10,ANNZ_11,ANNZ_12,ANNZ_13,ANNZ_14,ANNZ_15,ANNZ_16,ANNZ_17,ANNZ_18,ANNZ_19,ANNZ_20,ANNZ_21,ANNZ_22,ANNZ_23,ANNZ_24,
[09:53:35    INFO]  - All REJECTED MLMs: 
[09:53:35    INFO] ----------------------------------------------------------------------------------------------------------------
[09:53:37    INFO]  - Saving run information in ./output/PAUS_advanced10/regres/eval_nFile0/saveOpt.txt ...
[09:54:28    INFO]  - starting inputToFullTree(ANNz_data8c.csv) ... 
[09:54:28    INFO]  - Found 3367 lines in file PAUS/ANNz_data8c.csv -> total so far = 3367 ... 
[09:54:28    INFO]  - Now reading-in PAUS/ANNz_data8c.csv ... 
[09:54:29    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:54:29    INFO]  -- ANNZ_tree_eval .................................. 3367  nLine
[09:54:29    INFO]  -- ANNZ_tree_eval .................................. 3367  nObj
[09:54:29    INFO]  -----------------------------------------------------------------------------------------------------------
[09:54:29    INFO]  - starting ANNZ::Eval() ... 
[09:54:29    INFO]  - starting ANNZ::doEvalReg() ... 
[09:54:29    INFO]  - Will gen. input-parameter errors for: ANNZ_0,ANNZ_1,ANNZ_2,ANNZ_3,ANNZ_4,ANNZ_5,ANNZ_6,ANNZ_7,ANNZ_8,ANNZ_9,ANNZ_10,ANNZ_11,ANNZ_12,ANNZ_13,ANNZ_14,ANNZ_15,ANNZ_16,ANNZ_17,ANNZ_18,ANNZ_19,ANNZ_20,ANNZ_21,ANNZ_22,ANNZ_23,ANNZ_24,
[09:54:29    INFO]  - Reading bias-correction results from ./output/PAUS_advanced10/regres/optim/saveOptimObj.root ...
[09:54:29    INFO]  - Getting optimization results from ./output/PAUS_advanced10/regres/optim/saveOptimOpt.txt ...
[09:54:29    INFO]  - creating MLM trees from input ...
[09:54:29    INFO]  - nDivLoopNow(1/1) -> will use the following MLMs: ANNZ_0,ANNZ_1,ANNZ_2,ANNZ_3,ANNZ_5,ANNZ_8,ANNZ_10,ANNZ_14,ANNZ_15,ANNZ_19,ANNZ_20,ANNZ_21,ANNZ_22,
[09:54:29    INFO]  - starting ANNZ::loadReaders() ... 
[10:00:33    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:00:33    INFO]  -- ANNZ_tree_eval .................................. 3367  nObj
[10:00:33    INFO]  -----------------------------------------------------------------------------------------------------------
[10:00:33    INFO]  - creating final MLM and PDFs trees from input MLM trees ...
[10:00:34    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:00:34    INFO]  -- ANNZ_tree_MLM_nDiv0 ............................. 3367  nObj
[10:00:34    INFO]  -----------------------------------------------------------------------------------------------------------
[10:00:34    INFO]  - starting storeTreeToAscii() ... 
[10:00:34    INFO]  - will write to file the following branches: ref_id,zb,pz_width,odds,qz,production_id,paudm_id,ra,dec,zspec,conf,ANNZ_best,ANNZ_best_wgt,ANNZ_best_err,ANNZ_MLM_avg_0,ANNZ_MLM_avg_0_err,ANNZ_MLM_avg_0_wgt,ANNZ_PDF_avg_0,ANNZ_PDF_avg_0_err,ANNZ_PDF_avg_0_wgt,ANNZ_PDF_0_0,ANNZ_PDF_0_1,ANNZ_PDF_0_2,ANNZ_PDF_0_3,ANNZ_PDF_0_4,ANNZ_PDF_0_5,ANNZ_PDF_0_6,ANNZ_PDF_0_7,ANNZ_PDF_0_8,ANNZ_PDF_0_9,ANNZ_PDF_0_10,ANNZ_PDF_0_11,ANNZ_PDF_0_12,ANNZ_PDF_0_13,ANNZ_PDF_0_14,ANNZ_PDF_0_15,ANNZ_PDF_0_16,ANNZ_PDF_0_17,ANNZ_PDF_0_18,ANNZ_PDF_0_19,ANNZ_PDF_0_20,ANNZ_PDF_0_21,ANNZ_PDF_0_22,ANNZ_PDF_0_23,ANNZ_PDF_0_24,ANNZ_PDF_0_25,ANNZ_PDF_0_26,ANNZ_PDF_0_27,ANNZ_PDF_0_28,ANNZ_PDF_0_29,ANNZ_PDF_0_30,ANNZ_PDF_0_31,ANNZ_PDF_0_32,ANNZ_PDF_0_33,ANNZ_PDF_0_34,ANNZ_PDF_0_35,ANNZ_PDF_0_36,ANNZ_PDF_0_37,ANNZ_PDF_0_38,ANNZ_PDF_0_39,ANNZ_PDF_0_40,ANNZ_PDF_0_41,ANNZ_PDF_0_42,ANNZ_PDF_0_43,ANNZ_PDF_0_44,ANNZ_PDF_0_45,ANNZ_PDF_0_46,ANNZ_PDF_0_47,ANNZ_PDF_0_48,ANNZ_PDF_0_49,ANNZ_PDF_0_50,ANNZ_PDF_0_51,ANNZ_PDF_0_52,ANNZ_PDF_0_53,ANNZ_PDF_0_54,ANNZ_PDF_0_55,ANNZ_PDF_0_56,ANNZ_PDF_0_57,ANNZ_PDF_0_58,ANNZ_PDF_0_59,ANNZ_PDF_0_60,ANNZ_PDF_0_61,ANNZ_PDF_0_62,ANNZ_PDF_0_63,ANNZ_PDF_0_64,ANNZ_PDF_0_65,ANNZ_PDF_0_66,ANNZ_PDF_0_67,ANNZ_PDF_0_68,ANNZ_PDF_0_69,ANNZ_PDF_0_70,ANNZ_PDF_0_71,ANNZ_PDF_0_72,ANNZ_PDF_0_73,ANNZ_PDF_0_74,ANNZ_PDF_0_75,ANNZ_PDF_0_76,ANNZ_PDF_0_77,ANNZ_PDF_0_78,ANNZ_PDF_0_79,ANNZ_PDF_0_80,ANNZ_PDF_0_81,ANNZ_PDF_0_82,ANNZ_PDF_0_83,ANNZ_PDF_0_84,ANNZ_PDF_0_85,ANNZ_PDF_0_86,ANNZ_PDF_0_87,ANNZ_PDF_0_88,ANNZ_PDF_0_89,ANNZ_PDF_0_90,ANNZ_PDF_0_91,ANNZ_PDF_0_92,ANNZ_PDF_0_93,ANNZ_PDF_0_94,ANNZ_PDF_0_95,ANNZ_PDF_0_96,ANNZ_PDF_0_97,ANNZ_PDF_0_98,ANNZ_PDF_0_99,ANNZ_PDF_0_100,ANNZ_PDF_0_101,ANNZ_PDF_0_102,ANNZ_PDF_0_103,ANNZ_PDF_0_104,ANNZ_PDF_0_105,ANNZ_PDF_0_106,ANNZ_PDF_0_107,ANNZ_PDF_0_108,ANNZ_PDF_0_109,ANNZ_PDF_0_110,ANNZ_PDF_0_111,ANNZ_PDF_0_112,ANNZ_PDF_0_113,ANNZ_PDF_0_114,ANNZ_PDF_0_115,ANNZ_PDF_0_116,ANNZ_PDF_0_117,ANNZ_PDF_0_118,ANNZ_PDF_0_119,
[10:00:34    INFO]  - Will parse  ANNZ_tree_randomReg(3367)... Now in ./output/PAUS_advanced10/regres/eval_nFile0/ANNZ_randomReg_0000.csv
[10:00:34    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:00:34    INFO]  -- ANNZ_randomReg .................................. 3367  nObj
[10:00:34    INFO]  -----------------------------------------------------------------------------------------------------------
[10:00:35    INFO]  - detected the target,zb in the evaluated sample - Will create performance plots ...
[10:00:35    INFO]  - starting ANNZ::doMetricPlots() ... 
[10:00:35    INFO]  - Will use (1) MLMs from the input chain: ANNZ_best,
[10:00:35    INFO]  - Will use (1) PDFs from the input chain: PDF_0,
[10:00:44    INFO]  - Writing to plotting directory output/PAUS_advanced10/regres/eval_nFile0/plots/

(10:00 INFO) [40;37;1m - 13/02/19 10:00:50 - finished running ANNZ ![0m
