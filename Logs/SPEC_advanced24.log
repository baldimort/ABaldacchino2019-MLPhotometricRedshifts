(12:48 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(12:48 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(12:48 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(12:48 INFO) [40;37;1m - 03/04/19 12:48:54 - starting ANNZ[0m
(12:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(12:48 INFO)    [34msplitTypeTrain[0m[31m=[0m'[32mANNz_data10a.csv[0m' , [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34minDirName[0m[31m=[0m'[32mPAUS/[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34msplitTypeTest[0m[31m=[0m'[32mANNz_data10b.csv[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34minAsciiVars[0m[31m=[0m'[32mF:ref_id;F:zb;F:pz_width;F:odds;F:qz;F:production_id;F:paudm_id;F:ra;F:dec;F:zspec;F:conf;F:i_auto;F:umag;F:bmag;F:vmag;F:gmag;F:rmag;F:jmag;F:kmag;F:i_auto_err;F:umag_err;F:bmag_err;F:vmag_err;F:gmag_err;F:rmag_err;F:jmag_err;F:kmag_err;F:band0_flux;F:band1_flux;F:band2_flux;F:band3_flux;F:band4_flux;F:band5_flux;F:band6_flux;F:band7_flux;F:band8_flux;F:band9_flux;F:band10_flux;F:band11_flux;F:band12_flux;F:band13_flux;F:band14_flux;F:band15_flux;F:band16_flux;F:band17_flux;F:band18_flux;F:band19_flux;F:band20_flux;F:band21_flux;F:band22_flux;F:band23_flux;F:band24_flux;F:band25_flux;F:band26_flux;F:band27_flux;F:band28_flux;F:band29_flux;F:band30_flux;F:band31_flux;F:band32_flux;F:band33_flux;F:band34_flux;F:band35_flux;F:band36_flux;F:band37_flux;F:band38_flux;F:band39_flux;F:band0_flux_error;F:band1_flux_error;F:band2_flux_error;F:band3_flux_error;F:band4_flux_error;F:band5_flux_error;F:band6_flux_error;F:band7_flux_error;F:band8_flux_error;F:band9_flux_error;F:band10_flux_error;F:band11_flux_error;F:band12_flux_error;F:band13_flux_error;F:band14_flux_error;F:band15_flux_error;F:band16_flux_error;F:band17_flux_error;F:band18_flux_error;F:band19_flux_error;F:band20_flux_error;F:band21_flux_error;F:band22_flux_error;F:band23_flux_error;F:band24_flux_error;F:band25_flux_error;F:band26_flux_error;F:band27_flux_error;F:band28_flux_error;F:band29_flux_error;F:band30_flux_error;F:band31_flux_error;F:band32_flux_error;F:band33_flux_error;F:band34_flux_error;F:band35_flux_error;F:band36_flux_error;F:band37_flux_error;F:band38_flux_error;F:band39_flux_error[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mTrue[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(12:48 INFO) 
[12:48:54    INFO]  -----------------------------------------------------
[12:48:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[12:48:54    INFO]  -----------------------------------------------------------------------------------------------------------
[12:48:56    INFO]  - starting inputToSplitTree() ... 
[12:48:56    INFO]  - Found 8926 lines in file PAUS/ANNz_data10a.csv -> total so far = 8926 ... 
[12:48:56    INFO]  - Found 2232 lines in file PAUS/ANNz_data10b.csv -> total so far = 2232 ... 
[12:48:56    INFO]  - Now reading-in PAUS/ANNz_data10a.csv ... 
[12:48:57    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:48:57    INFO]  -- ANNZ_tree .......................................... 0  index
[12:48:57    INFO]  -- ANNZ_tree ....................................... 8926  nLine
[12:48:57    INFO]  -- ANNZ_tree ....................................... 8926  nLineFile
[12:48:57    INFO]  -- ANNZ_tree ....................................... 8926  nObj
[12:48:57    INFO]  -- ANNZ_tree .......................................... 0  nTest
[12:48:57    INFO]  -- ANNZ_tree ....................................... 8926  nTrain
[12:48:57    INFO]  -----------------------------------------------------------------------------------------------------------
[12:48:57    INFO]  - Now reading-in PAUS/ANNz_data10b.csv ... 
[12:48:57    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:48:57    INFO]  -- ANNZ_tree .......................................... 0  index
[12:48:57    INFO]  -- ANNZ_tree ...................................... 11158  nLine
[12:48:57    INFO]  -- ANNZ_tree ....................................... 2232  nLineFile
[12:48:57    INFO]  -- ANNZ_tree ....................................... 2232  nObj
[12:48:57    INFO]  -- ANNZ_tree ....................................... 2232  nTest
[12:48:57    INFO]  -- ANNZ_tree ....................................... 8926  nTrain
[12:48:57    INFO]  -----------------------------------------------------------------------------------------------------------
[12:48:57    INFO]  - Writing to plotting directory output/SPEC_advanced24/rootIn/plots/
[12:48:59    INFO]  - Writing to plotting directory output/SPEC_advanced24/rootIn/plots/

(12:49 INFO) [40;37;1m - 03/04/19 12:49:00 - finished running ANNZ ![0m
(12:49 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(12:49 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(12:49 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(12:49 INFO) [40;37;1m - 03/04/19 12:49:00 - starting ANNZ[0m
(12:49 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(12:49 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=760:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(12:49 INFO) 
[12:49:00    INFO]  -----------------------------------------------------
[12:49:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[12:49:00    INFO]  -----------------------------------------------------------------------------------------------------------
[12:49:01    INFO]  - starting ANNZ::Init()  ... 
[12:49:02    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_0/saveOpt.txt ...
[12:49:07    INFO]  - starting ANNZ::Train_singleReg() ... 
[12:49:07    INFO] ----------------------------------------------------------------------------------------------------
[12:49:07    INFO]  - will book (ANNZ_0) method(BDT) with options: :NTrees=760:BoostType=AdaBoostR2:VarTransform=N
[12:49:07    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[12:49:07    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[12:49:07    INFO]      cuts (train):        ,
[12:49:07    INFO]      cuts (valid):       
[12:49:07    INFO]    - weights:            1
[12:49:07    INFO] ----------------------------------------------------------------------------------------------------
[12:49:07    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[12:50:02    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/saveTrainOpt_ANNZ_0.txt ...
[12:50:05    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_0 ... 
[12:50:05    INFO]  - Will gen. input-parameter errors ...
[12:50:07    INFO]  - starting ANNZ::loadReaders() ... 
[12:50:26    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[13:07:12    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:07:12    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[13:07:12    INFO]  -----------------------------------------------------------------------------------------------------------
[13:07:12    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[13:11:17    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:11:17    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[13:11:17    INFO]  -----------------------------------------------------------------------------------------------------------
[13:11:17    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_0/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[13:11:18    INFO]  - ending makeTreeRegClsOneMLM() ... 
[13:11:18    INFO]  - will try to derive a bias correction ... 
[13:11:18    INFO]  - will validate that training produced an XML file for later ... 
[13:11:18    INFO]  - starting ANNZ::loadReaders() ... 
[13:11:22    INFO]  - will validate that the training was not a complete failure ... 
[13:11:22    INFO]  - training seems to have been successful! will move on ...
[13:11:22    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[13:11:26    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[13:11:27    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[13:11:27    INFO] ----------------------------------------------------------------------------------------------------
[13:11:27    INFO]  - will book (ANNZ_0_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[13:11:27    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[13:11:27    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[13:11:27    INFO]    - weights:            1
[13:11:27    INFO] ----------------------------------------------------------------------------------------------------
[13:11:27    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[13:11:33    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_0 ... 
[13:11:33    INFO]  - Will gen. input-parameter errors ...
[13:11:35    INFO]  - starting ANNZ::loadReaders() ... 
[13:11:52    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[13:28:04    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:28:04    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[13:28:04    INFO]  -----------------------------------------------------------------------------------------------------------
[13:28:04    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[13:31:44    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:31:44    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[13:31:44    INFO]  -----------------------------------------------------------------------------------------------------------
[13:31:44    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_0/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[13:31:45    INFO]  - ending makeTreeRegClsOneMLM() ... 
[13:31:45    INFO]  - will validate that the bias-correction actually improved the result ...
[13:31:45    INFO]  - starting ANNZ::doMetricPlots() ... 
[13:31:45    INFO]  - Will use (1) MLMs from the input chain: ANNZ_0,
Warning in <Fit>: Fit data is empty 
[13:31:49    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_0/plots/
[13:31:55        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_0/plots output/SPEC_advanced24/regres/train/ANNZ_0/plots_biasCor_before
[13:31:55    INFO]  - starting ANNZ::doMetricPlots() ... 
[13:31:55    INFO]  - Will use (1) MLMs from the input chain: ANNZ_0,
[13:31:58    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_0/plots/
[13:32:04        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_0/plots output/SPEC_advanced24/regres/train/ANNZ_0/plots_biasCor_after
[13:32:05    INFO]  - Got original [KS-test,N_poiss]: [0.0667712 , 6.9758] , after the bias-correction: [0.0374188 , 5.88248] --> will KEEP the correction !

(13:32 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(13:32 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(13:32 INFO) 
[13:32:07    INFO]  -----------------------------------------------------
[13:32:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[13:32:07    INFO]  -----------------------------------------------------------------------------------------------------------
[13:32:08    INFO]  - starting ANNZ::Init()  ... 
[13:32:09    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_1/saveOpt.txt ...
[13:32:14    INFO]  - starting ANNZ::Train_singleReg() ... 
[13:32:14    INFO] ----------------------------------------------------------------------------------------------------
[13:32:14    INFO]  - will book (ANNZ_1) method(KNN) with options: :nkNN=13:BalanceDepth=5:Kernel=Gaus:VarTransform=N
[13:32:14    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[13:32:14    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[13:32:14    INFO]      cuts (train):        ,
[13:32:14    INFO]      cuts (valid):       
[13:32:14    INFO]    - weights:            1
[13:32:14    INFO] ----------------------------------------------------------------------------------------------------
[13:32:14    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(13:32 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(13:32 CRITICAL) [41;37;1mWill terminate !!!![0m
(14:29 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(14:29 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(14:29 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(14:29 INFO) [40;37;1m - 03/04/19 14:29:14 - starting ANNZ[0m
(14:29 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(14:29 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(14:29 INFO) 
[14:29:14    INFO]  -----------------------------------------------------
[14:29:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[14:29:14    INFO]  -----------------------------------------------------------------------------------------------------------
[14:29:15    INFO]  - starting ANNZ::Init()  ... 
[14:29:16    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[14:29:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(14:29 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(14:29 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=6:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(14:29 INFO) 
[14:29:16    INFO]  -----------------------------------------------------
[14:29:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[14:29:16    INFO]  -----------------------------------------------------------------------------------------------------------
[14:29:16    INFO]  - starting ANNZ::Init()  ... 
[14:29:17    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_1/saveOpt.txt ...
[14:29:22    INFO]  - starting ANNZ::Train_singleReg() ... 
[14:29:22    INFO] ----------------------------------------------------------------------------------------------------
[14:29:22    INFO]  - will book (ANNZ_1) method(KNN) with options: :nkNN=22:BalanceDepth=6:Kernel=Gaus:VarTransform=P
[14:29:22    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[14:29:22    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[14:29:22    INFO]      cuts (train):        ,
[14:29:22    INFO]      cuts (valid):       
[14:29:22    INFO]    - weights:            1
[14:29:22    INFO] ----------------------------------------------------------------------------------------------------
[14:29:22    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[14:29:26    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/saveTrainOpt_ANNZ_1.txt ...
[14:29:26    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_1 ... 
[14:29:26    INFO]  - Will gen. input-parameter errors ...
[14:29:28    INFO]  - starting ANNZ::loadReaders() ... 
[14:29:31    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[14:34:17    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:34:17    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[14:34:17    INFO]  -----------------------------------------------------------------------------------------------------------
[14:34:17    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[14:35:28    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:35:28    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[14:35:28    INFO]  -----------------------------------------------------------------------------------------------------------
[14:35:28    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_1/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[14:35:29    INFO]  - ending makeTreeRegClsOneMLM() ... 
[14:35:29    INFO]  - will try to derive a bias correction ... 
[14:35:29    INFO]  - will validate that training produced an XML file for later ... 
[14:35:29    INFO]  - starting ANNZ::loadReaders() ... 
[14:35:29    INFO]  - will validate that the training was not a complete failure ... 
[14:35:29    INFO]  - training seems to have been successful! will move on ...
[14:35:29    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[14:35:33    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[14:35:34    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[14:35:34    INFO] ----------------------------------------------------------------------------------------------------
[14:35:34    INFO]  - will book (ANNZ_1_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[14:35:34    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[14:35:34    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[14:35:34    INFO]    - weights:            1
[14:35:34    INFO] ----------------------------------------------------------------------------------------------------
[14:35:34    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[14:35:37    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_1 ... 
[14:35:37    INFO]  - Will gen. input-parameter errors ...
[14:35:38    INFO]  - starting ANNZ::loadReaders() ... 
[14:35:52    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[14:57:29    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:57:29    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[14:57:29    INFO]  -----------------------------------------------------------------------------------------------------------
[14:57:29    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:02:51    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:02:51    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:02:51    INFO]  -----------------------------------------------------------------------------------------------------------
[15:02:51    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_1/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:02:51    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:02:51    INFO]  - will validate that the bias-correction actually improved the result ...
[15:02:52    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:02:52    INFO]  - Will use (1) MLMs from the input chain: ANNZ_1,
[15:02:54    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_1/plots/
[15:03:01        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_1/plots output/SPEC_advanced24/regres/train/ANNZ_1/plots_biasCor_before
[15:03:01    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:03:01    INFO]  - Will use (1) MLMs from the input chain: ANNZ_1,
[15:03:04    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_1/plots/
[15:03:10        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_1/plots output/SPEC_advanced24/regres/train/ANNZ_1/plots_biasCor_after
[15:03:10    INFO]  - Got original [KS-test,N_poiss]: [0.143737 , 7.79022] , after the bias-correction: [0.0525236 , 6.11888] --> will KEEP the correction !

(15:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1030:BoostType=Bagging:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:03 INFO) 
[15:03:12    INFO]  -----------------------------------------------------
[15:03:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:03:12    INFO]  -----------------------------------------------------------------------------------------------------------
[15:03:13    INFO]  - starting ANNZ::Init()  ... 
[15:03:16    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_2/saveOpt.txt ...
[15:03:21    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:03:21    INFO] ----------------------------------------------------------------------------------------------------
[15:03:21    INFO]  - will book (ANNZ_2) method(BDT) with options: :NTrees=1030:BoostType=Bagging:VarTransform=P
[15:03:21    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:03:21    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:03:21    INFO]      cuts (train):        ,
[15:03:21    INFO]      cuts (valid):       
[15:03:21    INFO]    - weights:            1
[15:03:21    INFO] ----------------------------------------------------------------------------------------------------
[15:03:21    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          :  while the separation is thought to be 0.0672569
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(15:03 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(15:03 CRITICAL) [41;37;1mWill terminate !!!![0m
(15:03 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(15:03 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(15:03 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(15:03 INFO) [40;37;1m - 03/04/19 15:03:48 - starting ANNZ[0m
(15:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:03 INFO) 
[15:03:48    INFO]  -----------------------------------------------------
[15:03:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:03:48    INFO]  -----------------------------------------------------------------------------------------------------------
[15:03:48    INFO]  - starting ANNZ::Init()  ... 
[15:03:49    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[15:03:49    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:03 INFO) 
[15:03:49    INFO]  -----------------------------------------------------
[15:03:49    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:03:49    INFO]  -----------------------------------------------------------------------------------------------------------
[15:03:50    INFO]  - starting ANNZ::Init()  ... 
[15:03:50    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[15:03:50    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=350:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:03 INFO) 
[15:03:50    INFO]  -----------------------------------------------------
[15:03:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:03:50    INFO]  -----------------------------------------------------------------------------------------------------------
[15:03:51    INFO]  - starting ANNZ::Init()  ... 
[15:03:52    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_2/saveOpt.txt ...
[15:03:56    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:03:57    INFO] ----------------------------------------------------------------------------------------------------
[15:03:57    INFO]  - will book (ANNZ_2) method(BDT) with options: :NTrees=350:BoostType=AdaBoost:VarTransform=N,P
[15:03:57    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:03:57    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:03:57    INFO]      cuts (train):        ,
[15:03:57    INFO]      cuts (valid):       
[15:03:57    INFO]    - weights:            1
[15:03:57    INFO] ----------------------------------------------------------------------------------------------------
[15:03:57    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:04:11    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/saveTrainOpt_ANNZ_2.txt ...
[15:04:12    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_2 ... 
[15:04:12    INFO]  - Will gen. input-parameter errors ...
[15:04:13    INFO]  - starting ANNZ::loadReaders() ... 
[15:04:16    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:05:25    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:05:25    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:05:25    INFO]  -----------------------------------------------------------------------------------------------------------
[15:05:25    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:05:42    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:05:42    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:05:42    INFO]  -----------------------------------------------------------------------------------------------------------
[15:05:42    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_2/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:05:43    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:05:43    INFO]  - will try to derive a bias correction ... 
[15:05:43    INFO]  - will validate that training produced an XML file for later ... 
[15:05:43    INFO]  - starting ANNZ::loadReaders() ... 
[15:05:44    INFO]  - will validate that the training was not a complete failure ... 
[15:05:44    INFO]  - training seems to have been successful! will move on ...
[15:05:44    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[15:05:47    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:05:48    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:05:48    INFO] ----------------------------------------------------------------------------------------------------
[15:05:48    INFO]  - will book (ANNZ_2_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[15:05:48    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:05:48    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[15:05:48    INFO]    - weights:            1
[15:05:48    INFO] ----------------------------------------------------------------------------------------------------
[15:05:48    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:05:52    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_2 ... 
[15:05:52    INFO]  - Will gen. input-parameter errors ...
[15:05:54    INFO]  - starting ANNZ::loadReaders() ... 
[15:05:56    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:07:11    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:07:11    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:07:11    INFO]  -----------------------------------------------------------------------------------------------------------
[15:07:11    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:07:29    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:07:29    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:07:29    INFO]  -----------------------------------------------------------------------------------------------------------
[15:07:29    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_2/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:07:30    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:07:30    INFO]  - will validate that the bias-correction actually improved the result ...
[15:07:30    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:07:30    INFO]  - Will use (1) MLMs from the input chain: ANNZ_2,
Warning in <Fit>: Fit data is empty 
[15:07:33    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_2/plots/
[15:07:40        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_2/plots output/SPEC_advanced24/regres/train/ANNZ_2/plots_biasCor_before
[15:07:40    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:07:40    INFO]  - Will use (1) MLMs from the input chain: ANNZ_2,
[15:07:42    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_2/plots/
[15:07:49        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_2/plots output/SPEC_advanced24/regres/train/ANNZ_2/plots_biasCor_after
[15:07:49    INFO]  - Got original [KS-test,N_poiss]: [0.086713 , 6.37067] , after the bias-correction: [0.0447009 , 5.64943] --> will KEEP the correction !

(15:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:07 INFO) 
[15:07:51    INFO]  -----------------------------------------------------
[15:07:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:07:51    INFO]  -----------------------------------------------------------------------------------------------------------
[15:07:52    INFO]  - starting ANNZ::Init()  ... 
[15:07:53    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_3/saveOpt.txt ...
[15:07:58    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:07:58    INFO] ----------------------------------------------------------------------------------------------------
[15:07:58    INFO]  - will book (ANNZ_3) method(KNN) with options: :nkNN=24:BalanceDepth=7:Kernel=Gaus:VarTransform=N
[15:07:58    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:07:58    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:07:58    INFO]      cuts (train):        ,
[15:07:58    INFO]      cuts (valid):       
[15:07:58    INFO]    - weights:            1
[15:07:58    INFO] ----------------------------------------------------------------------------------------------------
[15:07:58    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(15:07 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(15:07 CRITICAL) [41;37;1mWill terminate !!!![0m
(15:09 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(15:09 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(15:09 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(15:09 INFO) [40;37;1m - 03/04/19 15:09:44 - starting ANNZ[0m
(15:09 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:09 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1050:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:09 INFO) 
[15:09:44    INFO]  -----------------------------------------------------
[15:09:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:09:44    INFO]  -----------------------------------------------------------------------------------------------------------
[15:09:45    INFO]  - starting ANNZ::Init()  ... 
[15:09:46    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[15:09:46    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:09 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:09 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:09 INFO) 
[15:09:46    INFO]  -----------------------------------------------------
[15:09:46    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:09:46    INFO]  -----------------------------------------------------------------------------------------------------------
[15:09:46    INFO]  - starting ANNZ::Init()  ... 
[15:09:46    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[15:09:46    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:09 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:09 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:09 INFO) 
[15:09:47    INFO]  -----------------------------------------------------
[15:09:47    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:09:47    INFO]  -----------------------------------------------------------------------------------------------------------
[15:09:47    INFO]  - starting ANNZ::Init()  ... 
[15:09:47    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[15:09:47    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:09 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:09 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:09 INFO) 
[15:09:47    INFO]  -----------------------------------------------------
[15:09:47    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:09:47    INFO]  -----------------------------------------------------------------------------------------------------------
[15:09:48    INFO]  - starting ANNZ::Init()  ... 
[15:09:49    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_3/saveOpt.txt ...
[15:09:54    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:09:54    INFO] ----------------------------------------------------------------------------------------------------
[15:09:54    INFO]  - will book (ANNZ_3) method(KNN) with options: :nkNN=16:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P
[15:09:54    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:09:54    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:09:54    INFO]      cuts (train):        ,
[15:09:54    INFO]      cuts (valid):       
[15:09:54    INFO]    - weights:            1
[15:09:54    INFO] ----------------------------------------------------------------------------------------------------
[15:09:54    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:09:58    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/saveTrainOpt_ANNZ_3.txt ...
[15:09:58    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_3 ... 
[15:09:58    INFO]  - Will gen. input-parameter errors ...
[15:09:59    INFO]  - starting ANNZ::loadReaders() ... 
[15:10:03    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:15:00    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:15:00    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:15:00    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:00    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:16:14    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:16:14    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:16:14    INFO]  -----------------------------------------------------------------------------------------------------------
[15:16:14    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_3/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:16:14    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:16:14    INFO]  - will try to derive a bias correction ... 
[15:16:14    INFO]  - will validate that training produced an XML file for later ... 
[15:16:14    INFO]  - starting ANNZ::loadReaders() ... 
[15:16:15    INFO]  - will validate that the training was not a complete failure ... 
[15:16:15    INFO]  - training seems to have been successful! will move on ...
[15:16:15    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[15:16:17    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:16:18    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:16:18    INFO] ----------------------------------------------------------------------------------------------------
[15:16:18    INFO]  - will book (ANNZ_3_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[15:16:18    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:16:18    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[15:16:18    INFO]    - weights:            1
[15:16:18    INFO] ----------------------------------------------------------------------------------------------------
[15:16:18    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:16:21    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_3 ... 
[15:16:21    INFO]  - Will gen. input-parameter errors ...
[15:16:23    INFO]  - starting ANNZ::loadReaders() ... 
[15:16:38    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:40:34    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:40:34    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:40:34    INFO]  -----------------------------------------------------------------------------------------------------------
[15:40:34    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:46:32    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:46:32    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:46:32    INFO]  -----------------------------------------------------------------------------------------------------------
[15:46:32    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_3/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:46:32    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:46:32    INFO]  - will validate that the bias-correction actually improved the result ...
[15:46:32    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:46:32    INFO]  - Will use (1) MLMs from the input chain: ANNZ_3,
Warning in <Fit>: Fit data is empty 
[15:46:35    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_3/plots/
[15:46:42        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_3/plots output/SPEC_advanced24/regres/train/ANNZ_3/plots_biasCor_before
[15:46:42    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:46:42    INFO]  - Will use (1) MLMs from the input chain: ANNZ_3,
[15:46:44    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_3/plots/
[15:46:51        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_3/plots output/SPEC_advanced24/regres/train/ANNZ_3/plots_biasCor_after
[15:46:51    INFO]  - Got original [KS-test,N_poiss]: [0.605338 , 18.3556] , after the bias-correction: [0.0373147 , 5.75056] --> will KEEP the correction !

(15:46 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:46 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=380:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:46 INFO) 
[15:46:53    INFO]  -----------------------------------------------------
[15:46:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:46:53    INFO]  -----------------------------------------------------------------------------------------------------------
[15:46:53    INFO]  - starting ANNZ::Init()  ... 
[15:46:57    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_4/saveOpt.txt ...
[15:47:02    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:47:02    INFO] ----------------------------------------------------------------------------------------------------
[15:47:02    INFO]  - will book (ANNZ_4) method(BDT) with options: :NTrees=380:BoostType=Bagging:VarTransform=N
[15:47:02    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:47:02    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:47:02    INFO]      cuts (train):        ,
[15:47:02    INFO]      cuts (valid):       
[15:47:02    INFO]    - weights:            1
[15:47:02    INFO] ----------------------------------------------------------------------------------------------------
[15:47:03    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:47:30    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/saveTrainOpt_ANNZ_4.txt ...
[15:47:33    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_4 ... 
[15:47:33    INFO]  - Will gen. input-parameter errors ...
[15:47:34    INFO]  - starting ANNZ::loadReaders() ... 
[15:47:41    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:49:13    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:49:13    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:49:13    INFO]  -----------------------------------------------------------------------------------------------------------
[15:49:13    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:49:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:49:35    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:49:35    INFO]  -----------------------------------------------------------------------------------------------------------
[15:49:36    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_4/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:49:37    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:49:37    INFO]  - will try to derive a bias correction ... 
[15:49:37    INFO]  - will validate that training produced an XML file for later ... 
[15:49:37    INFO]  - starting ANNZ::loadReaders() ... 
[15:49:40    INFO]  - will validate that the training was not a complete failure ... 
[15:49:40    INFO]  - training seems to have been successful! will move on ...
[15:49:40    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[15:49:43    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:49:44    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:49:45    INFO] ----------------------------------------------------------------------------------------------------
[15:49:45    INFO]  - will book (ANNZ_4_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[15:49:45    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:49:45    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[15:49:45    INFO]    - weights:            1
[15:49:45    INFO] ----------------------------------------------------------------------------------------------------
[15:49:45    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:49:50    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_4 ... 
[15:49:50    INFO]  - Will gen. input-parameter errors ...
[15:49:52    INFO]  - starting ANNZ::loadReaders() ... 
[15:49:58    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:51:26    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:51:26    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:51:26    INFO]  -----------------------------------------------------------------------------------------------------------
[15:51:26    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:51:48    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:51:48    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:51:48    INFO]  -----------------------------------------------------------------------------------------------------------
[15:51:48    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_4/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:51:49    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:51:49    INFO]  - will validate that the bias-correction actually improved the result ...
[15:51:49    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:51:49    INFO]  - Will use (1) MLMs from the input chain: ANNZ_4,
[15:51:52    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_4/plots/
[15:51:59        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_4/plots output/SPEC_advanced24/regres/train/ANNZ_4/plots_biasCor_before
[15:51:59    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:51:59    INFO]  - Will use (1) MLMs from the input chain: ANNZ_4,
[15:52:02    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_4/plots/
[15:52:08        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_4/plots output/SPEC_advanced24/regres/train/ANNZ_4/plots_biasCor_after
[15:52:08    INFO]  - Got original [KS-test,N_poiss]: [0.0815595 , 6.8452] , after the bias-correction: [0.0453731 , 5.84815] --> will KEEP the correction !

(15:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:52 INFO) 
[15:52:11    INFO]  -----------------------------------------------------
[15:52:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:52:11    INFO]  -----------------------------------------------------------------------------------------------------------
[15:52:11    INFO]  - starting ANNZ::Init()  ... 
[15:52:13    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_5/saveOpt.txt ...
[15:52:18    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:52:18    INFO] ----------------------------------------------------------------------------------------------------
[15:52:18    INFO]  - will book (ANNZ_5) method(KNN) with options: :nkNN=13:BalanceDepth=6:Kernel=Gaus:VarTransform=N
[15:52:18    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:52:18    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:52:18    INFO]      cuts (train):        ,
[15:52:18    INFO]      cuts (valid):       
[15:52:18    INFO]    - weights:            1
[15:52:18    INFO] ----------------------------------------------------------------------------------------------------
[15:52:18    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(15:52 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(15:52 CRITICAL) [41;37;1mWill terminate !!!![0m
(15:54 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(15:54 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(15:54 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(15:54 INFO) [40;37;1m - 03/04/19 15:54:56 - starting ANNZ[0m
(15:54 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:54 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=540:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:54 INFO) 
[15:54:56    INFO]  -----------------------------------------------------
[15:54:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:54:56    INFO]  -----------------------------------------------------------------------------------------------------------
[15:54:56    INFO]  - starting ANNZ::Init()  ... 
[15:54:57    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[15:54:57    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:54 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:54 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:54 INFO) 
[15:54:57    INFO]  -----------------------------------------------------
[15:54:57    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:54:57    INFO]  -----------------------------------------------------------------------------------------------------------
[15:54:58    INFO]  - starting ANNZ::Init()  ... 
[15:54:58    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[15:54:58    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:54 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:54 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=430:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:54 INFO) 
[15:54:58    INFO]  -----------------------------------------------------
[15:54:58    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:54:58    INFO]  -----------------------------------------------------------------------------------------------------------
[15:54:59    INFO]  - starting ANNZ::Init()  ... 
[15:54:59    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[15:54:59    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:54 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:54 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:54 INFO) 
[15:54:59    INFO]  -----------------------------------------------------
[15:54:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:54:59    INFO]  -----------------------------------------------------------------------------------------------------------
[15:54:59    INFO]  - starting ANNZ::Init()  ... 
[15:54:59    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[15:54:59    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:54 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:54 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:54 INFO) 
[15:54:59    INFO]  -----------------------------------------------------
[15:54:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:54:59    INFO]  -----------------------------------------------------------------------------------------------------------
[15:55:00    INFO]  - starting ANNZ::Init()  ... 
[15:55:01    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[15:55:01    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:55 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:55 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:55 INFO) 
[15:55:01    INFO]  -----------------------------------------------------
[15:55:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:55:01    INFO]  -----------------------------------------------------------------------------------------------------------
[15:55:01    INFO]  - starting ANNZ::Init()  ... 
[15:55:02    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_5/saveOpt.txt ...
[15:55:07    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:55:08    INFO] ----------------------------------------------------------------------------------------------------
[15:55:08    INFO]  - will book (ANNZ_5) method(KNN) with options: :nkNN=10:BalanceDepth=4:Kernel=Gaus:VarTransform=N
[15:55:08    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:55:08    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:55:08    INFO]      cuts (train):        ,
[15:55:08    INFO]      cuts (valid):       
[15:55:08    INFO]    - weights:            1
[15:55:08    INFO] ----------------------------------------------------------------------------------------------------
[15:55:08    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(15:55 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(15:55 CRITICAL) [41;37;1mWill terminate !!!![0m
(15:55 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(15:55 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(15:55 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(15:55 INFO) [40;37;1m - 03/04/19 15:55:17 - starting ANNZ[0m
(15:55 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:55 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:55 INFO) 
[15:55:17    INFO]  -----------------------------------------------------
[15:55:17    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:55:17    INFO]  -----------------------------------------------------------------------------------------------------------
[15:55:17    INFO]  - starting ANNZ::Init()  ... 
[15:55:18    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[15:55:18    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:55 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:55 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:55 INFO) 
[15:55:18    INFO]  -----------------------------------------------------
[15:55:18    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:55:18    INFO]  -----------------------------------------------------------------------------------------------------------
[15:55:19    INFO]  - starting ANNZ::Init()  ... 
[15:55:19    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[15:55:19    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:55 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:55 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:55 INFO) 
[15:55:19    INFO]  -----------------------------------------------------
[15:55:19    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:55:19    INFO]  -----------------------------------------------------------------------------------------------------------
[15:55:19    INFO]  - starting ANNZ::Init()  ... 
[15:55:20    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[15:55:20    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:55 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:55 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:55 INFO) 
[15:55:20    INFO]  -----------------------------------------------------
[15:55:20    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:55:20    INFO]  -----------------------------------------------------------------------------------------------------------
[15:55:20    INFO]  - starting ANNZ::Init()  ... 
[15:55:20    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[15:55:20    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:55 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:55 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:55 INFO) 
[15:55:20    INFO]  -----------------------------------------------------
[15:55:20    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:55:20    INFO]  -----------------------------------------------------------------------------------------------------------
[15:55:21    INFO]  - starting ANNZ::Init()  ... 
[15:55:21    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[15:55:21    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:55 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:55 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=20:BalanceDepth=7:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:55 INFO) 
[15:55:21    INFO]  -----------------------------------------------------
[15:55:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:55:21    INFO]  -----------------------------------------------------------------------------------------------------------
[15:55:22    INFO]  - starting ANNZ::Init()  ... 
[15:55:23    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_5/saveOpt.txt ...
[15:55:28    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:55:28    INFO] ----------------------------------------------------------------------------------------------------
[15:55:28    INFO]  - will book (ANNZ_5) method(KNN) with options: :nkNN=20:BalanceDepth=7:Kernel=Gaus:VarTransform=P
[15:55:28    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:55:28    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:55:28    INFO]      cuts (train):        ,
[15:55:28    INFO]      cuts (valid):       
[15:55:28    INFO]    - weights:            1
[15:55:28    INFO] ----------------------------------------------------------------------------------------------------
[15:55:28    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:55:32    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/saveTrainOpt_ANNZ_5.txt ...
[15:55:32    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_5 ... 
[15:55:32    INFO]  - Will gen. input-parameter errors ...
[15:55:33    INFO]  - starting ANNZ::loadReaders() ... 
[15:55:37    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[16:00:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:00:19    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[16:00:19    INFO]  -----------------------------------------------------------------------------------------------------------
[16:00:19    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[16:01:29    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:01:29    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[16:01:29    INFO]  -----------------------------------------------------------------------------------------------------------
[16:01:29    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_5/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[16:01:30    INFO]  - ending makeTreeRegClsOneMLM() ... 
[16:01:30    INFO]  - will try to derive a bias correction ... 
[16:01:30    INFO]  - will validate that training produced an XML file for later ... 
[16:01:30    INFO]  - starting ANNZ::loadReaders() ... 
[16:01:30    INFO]  - will validate that the training was not a complete failure ... 
[16:01:30    INFO]  - training seems to have been successful! will move on ...
[16:01:30    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[16:01:32    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[16:01:33    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[16:01:33    INFO] ----------------------------------------------------------------------------------------------------
[16:01:33    INFO]  - will book (ANNZ_5_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[16:01:33    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:01:33    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[16:01:33    INFO]    - weights:            1
[16:01:33    INFO] ----------------------------------------------------------------------------------------------------
[16:01:33    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[16:01:36    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_5 ... 
[16:01:36    INFO]  - Will gen. input-parameter errors ...
[16:01:37    INFO]  - starting ANNZ::loadReaders() ... 
[16:01:50    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[16:22:26    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:22:26    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[16:22:26    INFO]  -----------------------------------------------------------------------------------------------------------
[16:22:26    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[16:27:45    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:27:45    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[16:27:45    INFO]  -----------------------------------------------------------------------------------------------------------
[16:27:45    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_5/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[16:27:46    INFO]  - ending makeTreeRegClsOneMLM() ... 
[16:27:46    INFO]  - will validate that the bias-correction actually improved the result ...
[16:27:46    INFO]  - starting ANNZ::doMetricPlots() ... 
[16:27:46    INFO]  - Will use (1) MLMs from the input chain: ANNZ_5,
Warning in <Fit>: Fit data is empty 
[16:27:48    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_5/plots/
[16:27:55        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_5/plots output/SPEC_advanced24/regres/train/ANNZ_5/plots_biasCor_before
[16:27:55    INFO]  - starting ANNZ::doMetricPlots() ... 
[16:27:55    INFO]  - Will use (1) MLMs from the input chain: ANNZ_5,
[16:27:57    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_5/plots/
[16:28:04        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_5/plots output/SPEC_advanced24/regres/train/ANNZ_5/plots_biasCor_after
[16:28:04    INFO]  - Got original [KS-test,N_poiss]: [0.141609 , 7.69748] , after the bias-correction: [0.0516272 , 5.95588] --> will KEEP the correction !

(16:28 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:28 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=510:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:28 INFO) 
[16:28:06    INFO]  -----------------------------------------------------
[16:28:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:28:06    INFO]  -----------------------------------------------------------------------------------------------------------
[16:28:06    INFO]  - starting ANNZ::Init()  ... 
[16:28:08    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_6/saveOpt.txt ...
[16:28:13    INFO]  - starting ANNZ::Train_singleReg() ... 
[16:28:13    INFO] ----------------------------------------------------------------------------------------------------
[16:28:13    INFO]  - will book (ANNZ_6) method(BDT) with options: :NTrees=510:BoostType=AdaBoostR2:VarTransform=N,P
[16:28:13    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:28:13    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[16:28:13    INFO]      cuts (train):        ,
[16:28:13    INFO]      cuts (valid):       
[16:28:13    INFO]    - weights:            1
[16:28:13    INFO] ----------------------------------------------------------------------------------------------------
[16:28:13    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[16:28:52    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/saveTrainOpt_ANNZ_6.txt ...
[16:28:55    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_6 ... 
[16:28:55    INFO]  - Will gen. input-parameter errors ...
[16:28:56    INFO]  - starting ANNZ::loadReaders() ... 
[16:29:08    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[16:37:31    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:37:31    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[16:37:31    INFO]  -----------------------------------------------------------------------------------------------------------
[16:37:31    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[16:39:36    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:39:36    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[16:39:36    INFO]  -----------------------------------------------------------------------------------------------------------
[16:39:36    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_6/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[16:39:37    INFO]  - ending makeTreeRegClsOneMLM() ... 
[16:39:37    INFO]  - will try to derive a bias correction ... 
[16:39:37    INFO]  - will validate that training produced an XML file for later ... 
[16:39:37    INFO]  - starting ANNZ::loadReaders() ... 
[16:39:40    INFO]  - will validate that the training was not a complete failure ... 
[16:39:40    INFO]  - training seems to have been successful! will move on ...
[16:39:40    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[16:39:45    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[16:39:46    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[16:39:47    INFO] ----------------------------------------------------------------------------------------------------
[16:39:47    INFO]  - will book (ANNZ_6_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[16:39:47    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:39:47    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[16:39:47    INFO]    - weights:            1
[16:39:47    INFO] ----------------------------------------------------------------------------------------------------
[16:39:47    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[16:39:52    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_6 ... 
[16:39:52    INFO]  - Will gen. input-parameter errors ...
[16:39:53    INFO]  - starting ANNZ::loadReaders() ... 
[16:40:04    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[16:47:46    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:47:46    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[16:47:46    INFO]  -----------------------------------------------------------------------------------------------------------
[16:47:46    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[16:49:42    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:49:42    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[16:49:42    INFO]  -----------------------------------------------------------------------------------------------------------
[16:49:42    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_6/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[16:49:43    INFO]  - ending makeTreeRegClsOneMLM() ... 
[16:49:43    INFO]  - will validate that the bias-correction actually improved the result ...
[16:49:43    INFO]  - starting ANNZ::doMetricPlots() ... 
[16:49:43    INFO]  - Will use (1) MLMs from the input chain: ANNZ_6,
[16:49:46    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_6/plots/
[16:49:53        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_6/plots output/SPEC_advanced24/regres/train/ANNZ_6/plots_biasCor_before
[16:49:53    INFO]  - starting ANNZ::doMetricPlots() ... 
[16:49:53    INFO]  - Will use (1) MLMs from the input chain: ANNZ_6,
[16:49:56    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_6/plots/
[16:50:02        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_6/plots output/SPEC_advanced24/regres/train/ANNZ_6/plots_biasCor_after
[16:50:02    INFO]  - Got original [KS-test,N_poiss]: [0.076294 , 6.91572] , after the bias-correction: [0.0329375 , 5.82264] --> will KEEP the correction !

(16:50 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:50 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=3:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:50 INFO) 
[16:50:05    INFO]  -----------------------------------------------------
[16:50:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:50:05    INFO]  -----------------------------------------------------------------------------------------------------------
[16:50:05    INFO]  - starting ANNZ::Init()  ... 
[16:50:08    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_7/saveOpt.txt ...
[16:50:13    INFO]  - starting ANNZ::Train_singleReg() ... 
[16:50:13    INFO] ----------------------------------------------------------------------------------------------------
[16:50:13    INFO]  - will book (ANNZ_7) method(KNN) with options: :nkNN=18:BalanceDepth=3:Kernel=Gaus:VarTransform=N
[16:50:13    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:50:13    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[16:50:13    INFO]      cuts (train):        ,
[16:50:13    INFO]      cuts (valid):       
[16:50:13    INFO]    - weights:            1
[16:50:13    INFO] ----------------------------------------------------------------------------------------------------
[16:50:13    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(16:50 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(16:50 CRITICAL) [41;37;1mWill terminate !!!![0m
(16:52 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(16:52 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(16:52 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(16:52 INFO) [40;37;1m - 03/04/19 16:52:22 - starting ANNZ[0m
(16:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:52 INFO) 
[16:52:22    INFO]  -----------------------------------------------------
[16:52:22    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:52:22    INFO]  -----------------------------------------------------------------------------------------------------------
[16:52:23    INFO]  - starting ANNZ::Init()  ... 
[16:52:23    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[16:52:23    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=4:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:52 INFO) 
[16:52:23    INFO]  -----------------------------------------------------
[16:52:23    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:52:23    INFO]  -----------------------------------------------------------------------------------------------------------
[16:52:24    INFO]  - starting ANNZ::Init()  ... 
[16:52:24    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[16:52:24    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=Bagging:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:52 INFO) 
[16:52:24    INFO]  -----------------------------------------------------
[16:52:24    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:52:24    INFO]  -----------------------------------------------------------------------------------------------------------
[16:52:25    INFO]  - starting ANNZ::Init()  ... 
[16:52:25    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[16:52:25    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:52 INFO) 
[16:52:25    INFO]  -----------------------------------------------------
[16:52:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:52:25    INFO]  -----------------------------------------------------------------------------------------------------------
[16:52:26    INFO]  - starting ANNZ::Init()  ... 
[16:52:26    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[16:52:26    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:52 INFO) 
[16:52:26    INFO]  -----------------------------------------------------
[16:52:26    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:52:26    INFO]  -----------------------------------------------------------------------------------------------------------
[16:52:26    INFO]  - starting ANNZ::Init()  ... 
[16:52:27    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[16:52:27    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:52 INFO) 
[16:52:27    INFO]  -----------------------------------------------------
[16:52:27    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:52:27    INFO]  -----------------------------------------------------------------------------------------------------------
[16:52:27    INFO]  - starting ANNZ::Init()  ... 
[16:52:27    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[16:52:27    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:52 INFO) 
[16:52:28    INFO]  -----------------------------------------------------
[16:52:28    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:52:28    INFO]  -----------------------------------------------------------------------------------------------------------
[16:52:28    INFO]  - starting ANNZ::Init()  ... 
[16:52:29    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[16:52:29    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:52 INFO) 
[16:52:29    INFO]  -----------------------------------------------------
[16:52:29    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:52:29    INFO]  -----------------------------------------------------------------------------------------------------------
[16:52:29    INFO]  - starting ANNZ::Init()  ... 
[16:52:30    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_7/saveOpt.txt ...
[16:52:35    INFO]  - starting ANNZ::Train_singleReg() ... 
[16:52:36    INFO] ----------------------------------------------------------------------------------------------------
[16:52:36    INFO]  - will book (ANNZ_7) method(KNN) with options: :nkNN=10:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P
[16:52:36    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:52:36    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[16:52:36    INFO]      cuts (train):        ,
[16:52:36    INFO]      cuts (valid):       
[16:52:36    INFO]    - weights:            1
[16:52:36    INFO] ----------------------------------------------------------------------------------------------------
[16:52:36    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[16:52:39    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/saveTrainOpt_ANNZ_7.txt ...
[16:52:40    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_7 ... 
[16:52:40    INFO]  - Will gen. input-parameter errors ...
[16:52:41    INFO]  - starting ANNZ::loadReaders() ... 
[16:52:44    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[16:57:33    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:57:33    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[16:57:33    INFO]  -----------------------------------------------------------------------------------------------------------
[16:57:33    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[16:58:45    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:58:45    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[16:58:45    INFO]  -----------------------------------------------------------------------------------------------------------
[16:58:46    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_7/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[16:58:46    INFO]  - ending makeTreeRegClsOneMLM() ... 
[16:58:46    INFO]  - will try to derive a bias correction ... 
[16:58:46    INFO]  - will validate that training produced an XML file for later ... 
[16:58:46    INFO]  - starting ANNZ::loadReaders() ... 
[16:58:46    INFO]  - will validate that the training was not a complete failure ... 
[16:58:46    INFO]  - training seems to have been successful! will move on ...
[16:58:46    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[16:58:51    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[16:58:52    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[16:58:52    INFO] ----------------------------------------------------------------------------------------------------
[16:58:52    INFO]  - will book (ANNZ_7_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[16:58:52    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:58:52    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[16:58:52    INFO]    - weights:            1
[16:58:52    INFO] ----------------------------------------------------------------------------------------------------
[16:58:52    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[16:58:55    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_7 ... 
[16:58:55    INFO]  - Will gen. input-parameter errors ...
[16:58:56    INFO]  - starting ANNZ::loadReaders() ... 
[16:59:10    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[17:21:59    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:21:59    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:21:59    INFO]  -----------------------------------------------------------------------------------------------------------
[17:22:00    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[17:27:41    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:27:41    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:27:41    INFO]  -----------------------------------------------------------------------------------------------------------
[17:27:41    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_7/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:27:42    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:27:42    INFO]  - will validate that the bias-correction actually improved the result ...
[17:27:42    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:27:42    INFO]  - Will use (1) MLMs from the input chain: ANNZ_7,
Warning in <Fit>: Fit data is empty 
[17:27:45    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_7/plots/
[17:27:51        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_7/plots output/SPEC_advanced24/regres/train/ANNZ_7/plots_biasCor_before
[17:27:51    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:27:51    INFO]  - Will use (1) MLMs from the input chain: ANNZ_7,
[17:27:53    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_7/plots/
[17:28:00        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_7/plots output/SPEC_advanced24/regres/train/ANNZ_7/plots_biasCor_after
[17:28:00    INFO]  - Got original [KS-test,N_poiss]: [0.578828 , 17.1966] , after the bias-correction: [0.0364839 , 5.61832] --> will KEEP the correction !

(17:28 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:28 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:28 INFO) 
[17:28:02    INFO]  -----------------------------------------------------
[17:28:02    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:28:02    INFO]  -----------------------------------------------------------------------------------------------------------
[17:28:02    INFO]  - starting ANNZ::Init()  ... 
[17:28:05    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_8/saveOpt.txt ...
[17:28:11    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:28:11    INFO] ----------------------------------------------------------------------------------------------------
[17:28:11    INFO]  - will book (ANNZ_8) method(BDT) with options: :NTrees=400:BoostType=Bagging:VarTransform=N
[17:28:11    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:28:11    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:28:11    INFO]      cuts (train):        ,
[17:28:11    INFO]      cuts (valid):       
[17:28:11    INFO]    - weights:            1
[17:28:11    INFO] ----------------------------------------------------------------------------------------------------
[17:28:11    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:28:40    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/saveTrainOpt_ANNZ_8.txt ...
[17:28:43    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_8 ... 
[17:28:43    INFO]  - Will gen. input-parameter errors ...
[17:28:45    INFO]  - starting ANNZ::loadReaders() ... 
[17:28:51    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[17:30:28    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:30:28    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:30:28    INFO]  -----------------------------------------------------------------------------------------------------------
[17:30:28    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[17:30:51    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:30:51    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:30:51    INFO]  -----------------------------------------------------------------------------------------------------------
[17:30:52    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_8/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:30:53    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:30:53    INFO]  - will try to derive a bias correction ... 
[17:30:53    INFO]  - will validate that training produced an XML file for later ... 
[17:30:53    INFO]  - starting ANNZ::loadReaders() ... 
[17:30:56    INFO]  - will validate that the training was not a complete failure ... 
[17:30:56    INFO]  - training seems to have been successful! will move on ...
[17:30:56    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[17:31:00    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:31:01    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:31:01    INFO] ----------------------------------------------------------------------------------------------------
[17:31:01    INFO]  - will book (ANNZ_8_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[17:31:01    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:31:01    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[17:31:01    INFO]    - weights:            1
[17:31:01    INFO] ----------------------------------------------------------------------------------------------------
[17:31:01    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:31:07    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_8 ... 
[17:31:07    INFO]  - Will gen. input-parameter errors ...
[17:31:08    INFO]  - starting ANNZ::loadReaders() ... 
[17:31:15    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[17:32:45    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:32:45    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:32:45    INFO]  -----------------------------------------------------------------------------------------------------------
[17:32:45    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[17:33:07    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:33:07    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:33:07    INFO]  -----------------------------------------------------------------------------------------------------------
[17:33:07    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_8/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:33:09    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:33:09    INFO]  - will validate that the bias-correction actually improved the result ...
[17:33:09    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:33:09    INFO]  - Will use (1) MLMs from the input chain: ANNZ_8,
[17:33:12    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_8/plots/
[17:33:18        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_8/plots output/SPEC_advanced24/regres/train/ANNZ_8/plots_biasCor_before
[17:33:18    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:33:18    INFO]  - Will use (1) MLMs from the input chain: ANNZ_8,
[17:33:21    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_8/plots/
[17:33:28        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_8/plots output/SPEC_advanced24/regres/train/ANNZ_8/plots_biasCor_after
[17:33:28    INFO]  - Got original [KS-test,N_poiss]: [0.0818956 , 6.8565] , after the bias-correction: [0.0469415 , 5.86739] --> will KEEP the correction !

(17:33 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:33 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:33 INFO) 
[17:33:30    INFO]  -----------------------------------------------------
[17:33:30    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:33:30    INFO]  -----------------------------------------------------------------------------------------------------------
[17:33:31    INFO]  - starting ANNZ::Init()  ... 
[17:33:32    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_9/saveOpt.txt ...
[17:33:37    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:33:37    INFO] ----------------------------------------------------------------------------------------------------
[17:33:37    INFO]  - will book (ANNZ_9) method(KNN) with options: :nkNN=12:BalanceDepth=3:Kernel=Gaus:VarTransform=N
[17:33:37    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:33:37    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:33:37    INFO]      cuts (train):        ,
[17:33:37    INFO]      cuts (valid):       
[17:33:37    INFO]    - weights:            1
[17:33:37    INFO] ----------------------------------------------------------------------------------------------------
[17:33:37    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(17:33 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(17:33 CRITICAL) [41;37;1mWill terminate !!!![0m
(18:01 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(18:01 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(18:01 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(18:01 INFO) [40;37;1m - 03/04/19 18:01:05 - starting ANNZ[0m
(18:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=880:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:01 INFO) 
[18:01:05    INFO]  -----------------------------------------------------
[18:01:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:01:05    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:06    INFO]  - starting ANNZ::Init()  ... 
[18:01:07    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[18:01:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(18:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:01 INFO) 
[18:01:07    INFO]  -----------------------------------------------------
[18:01:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:01:07    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:07    INFO]  - starting ANNZ::Init()  ... 
[18:01:07    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[18:01:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(18:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=540:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:01 INFO) 
[18:01:07    INFO]  -----------------------------------------------------
[18:01:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:01:07    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:08    INFO]  - starting ANNZ::Init()  ... 
[18:01:08    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[18:01:08    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(18:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:01 INFO) 
[18:01:08    INFO]  -----------------------------------------------------
[18:01:08    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:01:08    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:09    INFO]  - starting ANNZ::Init()  ... 
[18:01:09    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[18:01:09    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(18:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=370:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:01 INFO) 
[18:01:09    INFO]  -----------------------------------------------------
[18:01:09    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:01:09    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:09    INFO]  - starting ANNZ::Init()  ... 
[18:01:10    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[18:01:10    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(18:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=15:BalanceDepth=3:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:01 INFO) 
[18:01:10    INFO]  -----------------------------------------------------
[18:01:10    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:01:10    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:10    INFO]  - starting ANNZ::Init()  ... 
[18:01:10    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[18:01:10    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(18:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=360:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:01 INFO) 
[18:01:11    INFO]  -----------------------------------------------------
[18:01:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:01:11    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:11    INFO]  - starting ANNZ::Init()  ... 
[18:01:12    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[18:01:12    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(18:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:01 INFO) 
[18:01:12    INFO]  -----------------------------------------------------
[18:01:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:01:12    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:12    INFO]  - starting ANNZ::Init()  ... 
[18:01:12    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[18:01:12    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(18:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=440:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:01 INFO) 
[18:01:12    INFO]  -----------------------------------------------------
[18:01:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:01:12    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:13    INFO]  - starting ANNZ::Init()  ... 
[18:01:14    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[18:01:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(18:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:01 INFO) 
[18:01:14    INFO]  -----------------------------------------------------
[18:01:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:01:14    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:14    INFO]  - starting ANNZ::Init()  ... 
[18:01:17    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_9/saveOpt.txt ...
[18:01:22    INFO]  - starting ANNZ::Train_singleReg() ... 
[18:01:22    INFO] ----------------------------------------------------------------------------------------------------
[18:01:22    INFO]  - will book (ANNZ_9) method(KNN) with options: :nkNN=18:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P
[18:01:22    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:01:22    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[18:01:22    INFO]      cuts (train):        ,
[18:01:22    INFO]      cuts (valid):       
[18:01:22    INFO]    - weights:            1
[18:01:22    INFO] ----------------------------------------------------------------------------------------------------
[18:01:22    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:01:26    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/saveTrainOpt_ANNZ_9.txt ...
[18:01:26    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_9 ... 
[18:01:26    INFO]  - Will gen. input-parameter errors ...
[18:01:27    INFO]  - starting ANNZ::loadReaders() ... 
[18:01:31    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[18:06:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:06:19    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:06:19    INFO]  -----------------------------------------------------------------------------------------------------------
[18:06:19    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[18:07:31    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:07:31    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:07:31    INFO]  -----------------------------------------------------------------------------------------------------------
[18:07:31    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_9/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:07:31    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:07:31    INFO]  - will try to derive a bias correction ... 
[18:07:31    INFO]  - will validate that training produced an XML file for later ... 
[18:07:31    INFO]  - starting ANNZ::loadReaders() ... 
[18:07:32    INFO]  - will validate that the training was not a complete failure ... 
[18:07:32    INFO]  - training seems to have been successful! will move on ...
[18:07:32    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[18:07:37    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:07:37    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:07:38    INFO] ----------------------------------------------------------------------------------------------------
[18:07:38    INFO]  - will book (ANNZ_9_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[18:07:38    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:07:38    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[18:07:38    INFO]    - weights:            1
[18:07:38    INFO] ----------------------------------------------------------------------------------------------------
[18:07:38    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:07:41    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_9 ... 
[18:07:41    INFO]  - Will gen. input-parameter errors ...
[18:07:42    INFO]  - starting ANNZ::loadReaders() ... 
[18:07:56    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[18:29:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:29:49    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:29:49    INFO]  -----------------------------------------------------------------------------------------------------------
[18:29:49    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[18:35:17    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:35:17    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:35:17    INFO]  -----------------------------------------------------------------------------------------------------------
[18:35:17    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_9/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:35:18    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:35:18    INFO]  - will validate that the bias-correction actually improved the result ...
[18:35:18    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:35:18    INFO]  - Will use (1) MLMs from the input chain: ANNZ_9,
Warning in <Fit>: Fit data is empty 
[18:35:20    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_9/plots/
[18:35:27        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_9/plots output/SPEC_advanced24/regres/train/ANNZ_9/plots_biasCor_before
[18:35:27    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:35:27    INFO]  - Will use (1) MLMs from the input chain: ANNZ_9,
[18:35:29    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_9/plots/
[18:35:36        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_9/plots output/SPEC_advanced24/regres/train/ANNZ_9/plots_biasCor_after
[18:35:36    INFO]  - Got original [KS-test,N_poiss]: [0.610526 , 19.4102] , after the bias-correction: [0.0389967 , 5.66654] --> will KEEP the correction !

(18:35 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:35 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=470:BoostType=Bagging:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:35 INFO) 
[18:35:38    INFO]  -----------------------------------------------------
[18:35:38    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:35:38    INFO]  -----------------------------------------------------------------------------------------------------------
[18:35:38    INFO]  - starting ANNZ::Init()  ... 
[18:35:41    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_10/saveOpt.txt ...
[18:35:46    INFO]  - starting ANNZ::Train_singleReg() ... 
[18:35:46    INFO] ----------------------------------------------------------------------------------------------------
[18:35:46    INFO]  - will book (ANNZ_10) method(BDT) with options: :NTrees=470:BoostType=Bagging:VarTransform=P
[18:35:46    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:35:46    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[18:35:46    INFO]      cuts (train):        ,
[18:35:46    INFO]      cuts (valid):       
[18:35:46    INFO]    - weights:            1
[18:35:46    INFO] ----------------------------------------------------------------------------------------------------
[18:35:47    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          :  while the separation is thought to be 0.0672569
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(18:35 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(18:35 CRITICAL) [41;37;1mWill terminate !!!![0m
(20:14 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(20:14 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(20:14 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(20:14 INFO) [40;37;1m - 03/04/19 20:14:38 - starting ANNZ[0m
(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:38    INFO]  -----------------------------------------------------
[20:14:38    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:38    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:38    INFO]  - starting ANNZ::Init()  ... 
[20:14:39    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[20:14:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:39    INFO]  -----------------------------------------------------
[20:14:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:39    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:40    INFO]  - starting ANNZ::Init()  ... 
[20:14:40    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[20:14:40    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:40    INFO]  -----------------------------------------------------
[20:14:40    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:40    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:40    INFO]  - starting ANNZ::Init()  ... 
[20:14:41    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[20:14:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:41    INFO]  -----------------------------------------------------
[20:14:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:41    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:41    INFO]  - starting ANNZ::Init()  ... 
[20:14:41    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[20:14:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=250:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:41    INFO]  -----------------------------------------------------
[20:14:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:41    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:42    INFO]  - starting ANNZ::Init()  ... 
[20:14:43    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[20:14:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:43    INFO]  -----------------------------------------------------
[20:14:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:43    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:43    INFO]  - starting ANNZ::Init()  ... 
[20:14:43    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[20:14:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=410:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:43    INFO]  -----------------------------------------------------
[20:14:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:43    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:44    INFO]  - starting ANNZ::Init()  ... 
[20:14:45    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[20:14:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:45    INFO]  -----------------------------------------------------
[20:14:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:45    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:45    INFO]  - starting ANNZ::Init()  ... 
[20:14:45    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[20:14:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=460:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:45    INFO]  -----------------------------------------------------
[20:14:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:45    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:46    INFO]  - starting ANNZ::Init()  ... 
[20:14:47    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[20:14:47    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:47    INFO]  -----------------------------------------------------
[20:14:47    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:47    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:47    INFO]  - starting ANNZ::Init()  ... 
[20:14:48    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[20:14:48    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(20:14 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:14 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=320:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:14 INFO) 
[20:14:48    INFO]  -----------------------------------------------------
[20:14:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:14:48    INFO]  -----------------------------------------------------------------------------------------------------------
[20:14:48    INFO]  - starting ANNZ::Init()  ... 
[20:14:51    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_10/saveOpt.txt ...
[20:14:56    INFO]  - starting ANNZ::Train_singleReg() ... 
[20:14:57    INFO] ----------------------------------------------------------------------------------------------------
[20:14:57    INFO]  - will book (ANNZ_10) method(BDT) with options: :NTrees=320:BoostType=AdaBoostR2:VarTransform=N
[20:14:57    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[20:14:57    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[20:14:57    INFO]      cuts (train):        ,
[20:14:57    INFO]      cuts (valid):       
[20:14:57    INFO]    - weights:            1
[20:14:57    INFO] ----------------------------------------------------------------------------------------------------
[20:14:57    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[20:15:17    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/saveTrainOpt_ANNZ_10.txt ...
[20:15:18    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_10 ... 
[20:15:18    INFO]  - Will gen. input-parameter errors ...
[20:15:19    INFO]  - starting ANNZ::loadReaders() ... 
[20:15:25    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[20:19:03    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[20:19:03    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[20:19:03    INFO]  -----------------------------------------------------------------------------------------------------------
[20:19:03    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[20:19:57    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[20:19:57    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[20:19:57    INFO]  -----------------------------------------------------------------------------------------------------------
[20:19:57    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_10/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[20:19:58    INFO]  - ending makeTreeRegClsOneMLM() ... 
[20:19:58    INFO]  - will try to derive a bias correction ... 
[20:19:58    INFO]  - will validate that training produced an XML file for later ... 
[20:19:58    INFO]  - starting ANNZ::loadReaders() ... 
[20:20:00    INFO]  - will validate that the training was not a complete failure ... 
[20:20:00    INFO]  - training seems to have been successful! will move on ...
[20:20:00    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[20:20:04    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[20:20:05    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[20:20:05    INFO] ----------------------------------------------------------------------------------------------------
[20:20:05    INFO]  - will book (ANNZ_10_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[20:20:05    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[20:20:05    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[20:20:05    INFO]    - weights:            1
[20:20:05    INFO] ----------------------------------------------------------------------------------------------------
[20:20:05    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[20:20:10    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_10 ... 
[20:20:10    INFO]  - Will gen. input-parameter errors ...
[20:20:12    INFO]  - starting ANNZ::loadReaders() ... 
[20:20:18    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[20:23:59    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[20:23:59    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[20:23:59    INFO]  -----------------------------------------------------------------------------------------------------------
[20:23:59    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[20:24:53    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[20:24:53    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[20:24:53    INFO]  -----------------------------------------------------------------------------------------------------------
[20:24:53    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_10/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[20:24:54    INFO]  - ending makeTreeRegClsOneMLM() ... 
[20:24:54    INFO]  - will validate that the bias-correction actually improved the result ...
[20:24:54    INFO]  - starting ANNZ::doMetricPlots() ... 
[20:24:54    INFO]  - Will use (1) MLMs from the input chain: ANNZ_10,
Warning in <Fit>: Fit data is empty 
[20:24:57    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_10/plots/
[20:25:04        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_10/plots output/SPEC_advanced24/regres/train/ANNZ_10/plots_biasCor_before
[20:25:04    INFO]  - starting ANNZ::doMetricPlots() ... 
[20:25:04    INFO]  - Will use (1) MLMs from the input chain: ANNZ_10,
Warning in <Fit>: Fit data is empty 
[20:25:07    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_10/plots/
[20:25:14        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_10/plots output/SPEC_advanced24/regres/train/ANNZ_10/plots_biasCor_after
[20:25:14    INFO]  - Got original [KS-test,N_poiss]: [0.065875 , 6.92649] , after the bias-correction: [0.0378669 , 5.6013] --> will KEEP the correction !

(20:25 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:25 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:25 INFO) 
[20:25:16    INFO]  -----------------------------------------------------
[20:25:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[20:25:16    INFO]  -----------------------------------------------------------------------------------------------------------
[20:25:17    INFO]  - starting ANNZ::Init()  ... 
[20:25:18    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_11/saveOpt.txt ...
[20:25:24    INFO]  - starting ANNZ::Train_singleReg() ... 
[20:25:24    INFO] ----------------------------------------------------------------------------------------------------
[20:25:24    INFO]  - will book (ANNZ_11) method(KNN) with options: :nkNN=16:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P
[20:25:24    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[20:25:24    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[20:25:24    INFO]      cuts (train):        ,
[20:25:24    INFO]      cuts (valid):       
[20:25:24    INFO]    - weights:            1
[20:25:24    INFO] ----------------------------------------------------------------------------------------------------
[20:25:24    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[20:25:28    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/saveTrainOpt_ANNZ_11.txt ...
[20:25:28    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_11 ... 
[20:25:28    INFO]  - Will gen. input-parameter errors ...
[20:25:29    INFO]  - starting ANNZ::loadReaders() ... 
[20:25:33    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[20:30:34    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[20:30:34    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[20:30:34    INFO]  -----------------------------------------------------------------------------------------------------------
[20:30:34    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[20:31:50    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[20:31:50    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[20:31:50    INFO]  -----------------------------------------------------------------------------------------------------------
[20:31:50    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_11/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[20:31:50    INFO]  - ending makeTreeRegClsOneMLM() ... 
[20:31:50    INFO]  - will try to derive a bias correction ... 
[20:31:50    INFO]  - will validate that training produced an XML file for later ... 
[20:31:50    INFO]  - starting ANNZ::loadReaders() ... 
[20:31:50    INFO]  - will validate that the training was not a complete failure ... 
[20:31:50    INFO]  - training seems to have been successful! will move on ...
[20:31:50    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[20:31:56    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[20:31:56    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[20:31:57    INFO] ----------------------------------------------------------------------------------------------------
[20:31:57    INFO]  - will book (ANNZ_11_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[20:31:57    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[20:31:57    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[20:31:57    INFO]    - weights:            1
[20:31:57    INFO] ----------------------------------------------------------------------------------------------------
[20:31:57    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[20:32:00    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_11 ... 
[20:32:00    INFO]  - Will gen. input-parameter errors ...
[20:32:02    INFO]  - starting ANNZ::loadReaders() ... 
[20:32:19    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[20:58:09    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[20:58:09    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[20:58:09    INFO]  -----------------------------------------------------------------------------------------------------------
[20:58:09    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[21:04:17    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:04:17    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[21:04:17    INFO]  -----------------------------------------------------------------------------------------------------------
[21:04:17    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_11/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:04:17    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:04:17    INFO]  - will validate that the bias-correction actually improved the result ...
[21:04:17    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:04:17    INFO]  - Will use (1) MLMs from the input chain: ANNZ_11,
Warning in <Fit>: Fit data is empty 
[21:04:20    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_11/plots/
[21:04:27        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_11/plots output/SPEC_advanced24/regres/train/ANNZ_11/plots_biasCor_before
[21:04:27    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:04:27    INFO]  - Will use (1) MLMs from the input chain: ANNZ_11,
[21:04:30    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_11/plots/
[21:04:37        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_11/plots output/SPEC_advanced24/regres/train/ANNZ_11/plots_biasCor_after
[21:04:37    INFO]  - Got original [KS-test,N_poiss]: [0.605338 , 18.3556] , after the bias-correction: [0.0373147 , 5.75056] --> will KEEP the correction !

(21:04 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:04 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:04 INFO) 
[21:04:39    INFO]  -----------------------------------------------------
[21:04:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:04:39    INFO]  -----------------------------------------------------------------------------------------------------------
[21:04:39    INFO]  - starting ANNZ::Init()  ... 
[21:04:42    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_12/saveOpt.txt ...
[21:04:47    INFO]  - starting ANNZ::Train_singleReg() ... 
[21:04:48    INFO] ----------------------------------------------------------------------------------------------------
[21:04:48    INFO]  - will book (ANNZ_12) method(BDT) with options: :NTrees=450:BoostType=AdaBoost:VarTransform=N,P
[21:04:48    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:04:48    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[21:04:48    INFO]      cuts (train):        ,
[21:04:48    INFO]      cuts (valid):       
[21:04:48    INFO]    - weights:            1
[21:04:48    INFO] ----------------------------------------------------------------------------------------------------
[21:04:48    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:05:06    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/saveTrainOpt_ANNZ_12.txt ...
[21:05:07    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_12 ... 
[21:05:07    INFO]  - Will gen. input-parameter errors ...
[21:05:08    INFO]  - starting ANNZ::loadReaders() ... 
[21:05:12    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[21:06:36    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:06:36    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[21:06:36    INFO]  -----------------------------------------------------------------------------------------------------------
[21:06:36    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[21:06:57    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:06:57    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[21:06:57    INFO]  -----------------------------------------------------------------------------------------------------------
[21:06:57    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_12/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:06:58    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:06:58    INFO]  - will try to derive a bias correction ... 
[21:06:58    INFO]  - will validate that training produced an XML file for later ... 
[21:06:58    INFO]  - starting ANNZ::loadReaders() ... 
[21:06:59    INFO]  - will validate that the training was not a complete failure ... 
[21:06:59    INFO]  - training seems to have been successful! will move on ...
[21:06:59    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[21:07:02    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:07:03    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:07:03    INFO] ----------------------------------------------------------------------------------------------------
[21:07:03    INFO]  - will book (ANNZ_12_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[21:07:03    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:07:03    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[21:07:03    INFO]    - weights:            1
[21:07:03    INFO] ----------------------------------------------------------------------------------------------------
[21:07:03    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:07:08    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_12 ... 
[21:07:08    INFO]  - Will gen. input-parameter errors ...
[21:07:09    INFO]  - starting ANNZ::loadReaders() ... 
[21:07:12    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[21:08:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:08:38    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[21:08:38    INFO]  -----------------------------------------------------------------------------------------------------------
[21:08:38    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[21:08:59    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:08:59    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[21:08:59    INFO]  -----------------------------------------------------------------------------------------------------------
[21:08:59    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_12/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:09:00    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:09:00    INFO]  - will validate that the bias-correction actually improved the result ...
[21:09:00    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:09:00    INFO]  - Will use (1) MLMs from the input chain: ANNZ_12,
Warning in <Fit>: Fit data is empty 
[21:09:03    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_12/plots/
[21:09:10        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_12/plots output/SPEC_advanced24/regres/train/ANNZ_12/plots_biasCor_before
[21:09:10    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:09:10    INFO]  - Will use (1) MLMs from the input chain: ANNZ_12,
[21:09:12    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_12/plots/
[21:09:19        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_12/plots output/SPEC_advanced24/regres/train/ANNZ_12/plots_biasCor_after
[21:09:19    INFO]  - Got original [KS-test,N_poiss]: [0.086713 , 6.35652] , after the bias-correction: [0.0455971 , 5.87017] --> will KEEP the correction !

(21:09 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:09 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:09 INFO) 
[21:09:21    INFO]  -----------------------------------------------------
[21:09:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:09:21    INFO]  -----------------------------------------------------------------------------------------------------------
[21:09:22    INFO]  - starting ANNZ::Init()  ... 
[21:09:23    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_13/saveOpt.txt ...
[21:09:28    INFO]  - starting ANNZ::Train_singleReg() ... 
[21:09:28    INFO] ----------------------------------------------------------------------------------------------------
[21:09:28    INFO]  - will book (ANNZ_13) method(KNN) with options: :nkNN=12:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P
[21:09:28    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:09:28    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[21:09:28    INFO]      cuts (train):        ,
[21:09:28    INFO]      cuts (valid):       
[21:09:28    INFO]    - weights:            1
[21:09:28    INFO] ----------------------------------------------------------------------------------------------------
[21:09:28    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:09:32    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/saveTrainOpt_ANNZ_13.txt ...
[21:09:32    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_13 ... 
[21:09:32    INFO]  - Will gen. input-parameter errors ...
[21:09:33    INFO]  - starting ANNZ::loadReaders() ... 
[21:09:37    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[21:14:31    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:14:31    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[21:14:31    INFO]  -----------------------------------------------------------------------------------------------------------
[21:14:31    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[21:15:44    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:15:44    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[21:15:44    INFO]  -----------------------------------------------------------------------------------------------------------
[21:15:44    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_13/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:15:44    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:15:44    INFO]  - will try to derive a bias correction ... 
[21:15:44    INFO]  - will validate that training produced an XML file for later ... 
[21:15:44    INFO]  - starting ANNZ::loadReaders() ... 
[21:15:44    INFO]  - will validate that the training was not a complete failure ... 
[21:15:44    INFO]  - training seems to have been successful! will move on ...
[21:15:44    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[21:15:47    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:15:48    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:15:48    INFO] ----------------------------------------------------------------------------------------------------
[21:15:48    INFO]  - will book (ANNZ_13_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[21:15:48    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:15:48    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[21:15:48    INFO]    - weights:            1
[21:15:48    INFO] ----------------------------------------------------------------------------------------------------
[21:15:48    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:15:52    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_13 ... 
[21:15:52    INFO]  - Will gen. input-parameter errors ...
[21:15:53    INFO]  - starting ANNZ::loadReaders() ... 
[21:16:07    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[21:39:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:39:49    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[21:39:49    INFO]  -----------------------------------------------------------------------------------------------------------
[21:39:49    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[21:45:41    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:45:41    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[21:45:41    INFO]  -----------------------------------------------------------------------------------------------------------
[21:45:41    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_13/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:45:41    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:45:41    INFO]  - will validate that the bias-correction actually improved the result ...
[21:45:41    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:45:41    INFO]  - Will use (1) MLMs from the input chain: ANNZ_13,
Warning in <Fit>: Fit data is empty 
[21:45:44    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_13/plots/
[21:45:51        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_13/plots output/SPEC_advanced24/regres/train/ANNZ_13/plots_biasCor_before
[21:45:51    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:45:51    INFO]  - Will use (1) MLMs from the input chain: ANNZ_13,
[21:45:53    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_13/plots/
[21:46:00        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_13/plots output/SPEC_advanced24/regres/train/ANNZ_13/plots_biasCor_after
[21:46:00    INFO]  - Got original [KS-test,N_poiss]: [0.585927 , 18.5521] , after the bias-correction: [0.04068 , 5.74817] --> will KEEP the correction !

(21:46 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:46 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=460:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:46 INFO) 
[21:46:01    INFO]  -----------------------------------------------------
[21:46:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:46:01    INFO]  -----------------------------------------------------------------------------------------------------------
[21:46:02    INFO]  - starting ANNZ::Init()  ... 
[21:46:06    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_14/saveOpt.txt ...
[21:46:11    INFO]  - starting ANNZ::Train_singleReg() ... 
[21:46:11    INFO] ----------------------------------------------------------------------------------------------------
[21:46:11    INFO]  - will book (ANNZ_14) method(BDT) with options: :NTrees=460:BoostType=AdaBoost:VarTransform=N
[21:46:11    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:46:11    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[21:46:11    INFO]      cuts (train):        ,
[21:46:11    INFO]      cuts (valid):       
[21:46:11    INFO]    - weights:            1
[21:46:11    INFO] ----------------------------------------------------------------------------------------------------
[21:46:11    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:46:31    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/saveTrainOpt_ANNZ_14.txt ...
[21:46:33    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_14 ... 
[21:46:33    INFO]  - Will gen. input-parameter errors ...
[21:46:34    INFO]  - starting ANNZ::loadReaders() ... 
[21:46:38    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[21:47:51    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:47:51    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[21:47:51    INFO]  -----------------------------------------------------------------------------------------------------------
[21:47:51    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[21:48:09    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:48:09    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[21:48:09    INFO]  -----------------------------------------------------------------------------------------------------------
[21:48:09    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_14/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:48:10    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:48:10    INFO]  - will try to derive a bias correction ... 
[21:48:10    INFO]  - will validate that training produced an XML file for later ... 
[21:48:10    INFO]  - starting ANNZ::loadReaders() ... 
[21:48:11    INFO]  - will validate that the training was not a complete failure ... 
[21:48:11    INFO]  - training seems to have been successful! will move on ...
[21:48:11    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[21:48:14    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:48:15    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:48:15    INFO] ----------------------------------------------------------------------------------------------------
[21:48:15    INFO]  - will book (ANNZ_14_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[21:48:15    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:48:15    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[21:48:15    INFO]    - weights:            1
[21:48:15    INFO] ----------------------------------------------------------------------------------------------------
[21:48:15    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:48:21    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_14 ... 
[21:48:21    INFO]  - Will gen. input-parameter errors ...
[21:48:22    INFO]  - starting ANNZ::loadReaders() ... 
[21:48:26    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[21:49:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:49:38    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[21:49:38    INFO]  -----------------------------------------------------------------------------------------------------------
[21:49:38    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[21:49:56    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:49:56    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[21:49:56    INFO]  -----------------------------------------------------------------------------------------------------------
[21:49:56    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_14/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:49:57    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:49:57    INFO]  - will validate that the bias-correction actually improved the result ...
[21:49:57    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:49:57    INFO]  - Will use (1) MLMs from the input chain: ANNZ_14,
Warning in <Fit>: Fit data is empty 
[21:50:00    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_14/plots/
[21:50:07        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_14/plots output/SPEC_advanced24/regres/train/ANNZ_14/plots_biasCor_before
[21:50:07    INFO]  - starting ANNZ::doMetricPlots() ... 
[21:50:07    INFO]  - Will use (1) MLMs from the input chain: ANNZ_14,
Warning in <Fit>: Fit data is empty 
[21:50:09    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_14/plots/
[21:50:16        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_14/plots output/SPEC_advanced24/regres/train/ANNZ_14/plots_biasCor_after
[21:50:16    INFO]  - Got original [KS-test,N_poiss]: [0.0826798 , 6.32915] , after the bias-correction: [0.0482859 , 5.84965] --> will KEEP the correction !

(21:50 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:50 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:50 INFO) 
[21:50:18    INFO]  -----------------------------------------------------
[21:50:18    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:50:18    INFO]  -----------------------------------------------------------------------------------------------------------
[21:50:19    INFO]  - starting ANNZ::Init()  ... 
[21:50:20    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_15/saveOpt.txt ...
[21:50:25    INFO]  - starting ANNZ::Train_singleReg() ... 
[21:50:25    INFO] ----------------------------------------------------------------------------------------------------
[21:50:25    INFO]  - will book (ANNZ_15) method(KNN) with options: :nkNN=18:BalanceDepth=8:Kernel=Gaus:VarTransform=N
[21:50:25    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:50:25    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[21:50:25    INFO]      cuts (train):        ,
[21:50:25    INFO]      cuts (valid):       
[21:50:25    INFO]    - weights:            1
[21:50:25    INFO] ----------------------------------------------------------------------------------------------------
[21:50:25    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(21:50 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(21:50 CRITICAL) [41;37;1mWill terminate !!!![0m
(21:51 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(21:51 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(21:51 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(21:51 INFO) [40;37;1m - 03/04/19 21:51:03 - starting ANNZ[0m
(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=970:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:04    INFO]  -----------------------------------------------------
[21:51:04    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:04    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:04    INFO]  - starting ANNZ::Init()  ... 
[21:51:05    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[21:51:05    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:05    INFO]  -----------------------------------------------------
[21:51:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:05    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:05    INFO]  - starting ANNZ::Init()  ... 
[21:51:06    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[21:51:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=300:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:06    INFO]  -----------------------------------------------------
[21:51:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:06    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:06    INFO]  - starting ANNZ::Init()  ... 
[21:51:06    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[21:51:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=28:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:06    INFO]  -----------------------------------------------------
[21:51:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:06    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:07    INFO]  - starting ANNZ::Init()  ... 
[21:51:07    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[21:51:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:07    INFO]  -----------------------------------------------------
[21:51:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:07    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:08    INFO]  - starting ANNZ::Init()  ... 
[21:51:08    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[21:51:08    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:08    INFO]  -----------------------------------------------------
[21:51:08    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:08    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:09    INFO]  - starting ANNZ::Init()  ... 
[21:51:09    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[21:51:09    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=320:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:09    INFO]  -----------------------------------------------------
[21:51:09    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:09    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:09    INFO]  - starting ANNZ::Init()  ... 
[21:51:10    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[21:51:10    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=20:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:10    INFO]  -----------------------------------------------------
[21:51:10    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:10    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:11    INFO]  - starting ANNZ::Init()  ... 
[21:51:11    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[21:51:11    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=670:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:11    INFO]  -----------------------------------------------------
[21:51:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:11    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:11    INFO]  - starting ANNZ::Init()  ... 
[21:51:12    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[21:51:12    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:12    INFO]  -----------------------------------------------------
[21:51:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:12    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:13    INFO]  - starting ANNZ::Init()  ... 
[21:51:13    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[21:51:13    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:13    INFO]  -----------------------------------------------------
[21:51:13    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:13    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:13    INFO]  - starting ANNZ::Init()  ... 
[21:51:14    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[21:51:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=28:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:14    INFO]  -----------------------------------------------------
[21:51:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:14    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:14    INFO]  - starting ANNZ::Init()  ... 
[21:51:14    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[21:51:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=270:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:14    INFO]  -----------------------------------------------------
[21:51:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:14    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:15    INFO]  - starting ANNZ::Init()  ... 
[21:51:15    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[21:51:15    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:15    INFO]  -----------------------------------------------------
[21:51:15    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:15    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:16    INFO]  - starting ANNZ::Init()  ... 
[21:51:16    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[21:51:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=280:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:16    INFO]  -----------------------------------------------------
[21:51:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:16    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:16    INFO]  - starting ANNZ::Init()  ... 
[21:51:17    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[21:51:17    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(21:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=15:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:51 INFO) 
[21:51:17    INFO]  -----------------------------------------------------
[21:51:17    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[21:51:17    INFO]  -----------------------------------------------------------------------------------------------------------
[21:51:17    INFO]  - starting ANNZ::Init()  ... 
[21:51:20    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_15/saveOpt.txt ...
[21:51:25    INFO]  - starting ANNZ::Train_singleReg() ... 
[21:51:25    INFO] ----------------------------------------------------------------------------------------------------
[21:51:25    INFO]  - will book (ANNZ_15) method(KNN) with options: :nkNN=15:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P
[21:51:25    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:51:25    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[21:51:25    INFO]      cuts (train):        ,
[21:51:25    INFO]      cuts (valid):       
[21:51:25    INFO]    - weights:            1
[21:51:25    INFO] ----------------------------------------------------------------------------------------------------
[21:51:25    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:51:28    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/saveTrainOpt_ANNZ_15.txt ...
[21:51:29    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_15 ... 
[21:51:29    INFO]  - Will gen. input-parameter errors ...
[21:51:30    INFO]  - starting ANNZ::loadReaders() ... 
[21:51:33    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[21:56:25    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:56:25    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[21:56:25    INFO]  -----------------------------------------------------------------------------------------------------------
[21:56:25    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[21:57:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[21:57:38    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[21:57:38    INFO]  -----------------------------------------------------------------------------------------------------------
[21:57:39    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_15/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[21:57:39    INFO]  - ending makeTreeRegClsOneMLM() ... 
[21:57:39    INFO]  - will try to derive a bias correction ... 
[21:57:39    INFO]  - will validate that training produced an XML file for later ... 
[21:57:39    INFO]  - starting ANNZ::loadReaders() ... 
[21:57:39    INFO]  - will validate that the training was not a complete failure ... 
[21:57:39    INFO]  - training seems to have been successful! will move on ...
[21:57:39    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[21:57:44    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:57:45    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[21:57:45    INFO] ----------------------------------------------------------------------------------------------------
[21:57:45    INFO]  - will book (ANNZ_15_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[21:57:45    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[21:57:45    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[21:57:45    INFO]    - weights:            1
[21:57:45    INFO] ----------------------------------------------------------------------------------------------------
[21:57:46    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[21:57:49    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_15 ... 
[21:57:49    INFO]  - Will gen. input-parameter errors ...
[21:57:50    INFO]  - starting ANNZ::loadReaders() ... 
[21:58:06    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[22:23:09    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:23:09    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[22:23:09    INFO]  -----------------------------------------------------------------------------------------------------------
[22:23:09    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[22:29:24    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:29:24    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[22:29:24    INFO]  -----------------------------------------------------------------------------------------------------------
[22:29:24    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_15/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:29:24    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:29:24    INFO]  - will validate that the bias-correction actually improved the result ...
[22:29:24    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:29:24    INFO]  - Will use (1) MLMs from the input chain: ANNZ_15,
Warning in <Fit>: Fit data is empty 
[22:29:27    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_15/plots/
[22:29:34        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_15/plots output/SPEC_advanced24/regres/train/ANNZ_15/plots_biasCor_before
[22:29:34    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:29:34    INFO]  - Will use (1) MLMs from the input chain: ANNZ_15,
[22:29:37    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_15/plots/
[22:29:43        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_15/plots output/SPEC_advanced24/regres/train/ANNZ_15/plots_biasCor_after
[22:29:43    INFO]  - Got original [KS-test,N_poiss]: [0.600982 , 18.9358] , after the bias-correction: [0.0400221 , 5.8226] --> will KEEP the correction !

(22:29 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(22:29 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=460:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(22:29 INFO) 
[22:29:45    INFO]  -----------------------------------------------------
[22:29:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[22:29:45    INFO]  -----------------------------------------------------------------------------------------------------------
[22:29:46    INFO]  - starting ANNZ::Init()  ... 
[22:29:50    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_16/saveOpt.txt ...
[22:29:55    INFO]  - starting ANNZ::Train_singleReg() ... 
[22:29:55    INFO] ----------------------------------------------------------------------------------------------------
[22:29:55    INFO]  - will book (ANNZ_16) method(BDT) with options: :NTrees=460:BoostType=AdaBoost:VarTransform=N,P
[22:29:55    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:29:55    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[22:29:55    INFO]      cuts (train):        ,
[22:29:55    INFO]      cuts (valid):       
[22:29:55    INFO]    - weights:            1
[22:29:55    INFO] ----------------------------------------------------------------------------------------------------
[22:29:55    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:30:13    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/saveTrainOpt_ANNZ_16.txt ...
[22:30:14    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_16 ... 
[22:30:14    INFO]  - Will gen. input-parameter errors ...
[22:30:16    INFO]  - starting ANNZ::loadReaders() ... 
[22:30:19    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[22:31:42    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:31:42    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[22:31:42    INFO]  -----------------------------------------------------------------------------------------------------------
[22:31:42    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[22:32:03    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:32:03    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[22:32:03    INFO]  -----------------------------------------------------------------------------------------------------------
[22:32:03    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_16/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:32:04    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:32:04    INFO]  - will try to derive a bias correction ... 
[22:32:04    INFO]  - will validate that training produced an XML file for later ... 
[22:32:04    INFO]  - starting ANNZ::loadReaders() ... 
[22:32:05    INFO]  - will validate that the training was not a complete failure ... 
[22:32:05    INFO]  - training seems to have been successful! will move on ...
[22:32:05    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[22:32:08    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:32:09    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:32:09    INFO] ----------------------------------------------------------------------------------------------------
[22:32:09    INFO]  - will book (ANNZ_16_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[22:32:09    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:32:09    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[22:32:09    INFO]    - weights:            1
[22:32:09    INFO] ----------------------------------------------------------------------------------------------------
[22:32:09    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:32:14    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_16 ... 
[22:32:14    INFO]  - Will gen. input-parameter errors ...
[22:32:15    INFO]  - starting ANNZ::loadReaders() ... 
[22:32:18    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[22:33:42    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:33:42    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[22:33:42    INFO]  -----------------------------------------------------------------------------------------------------------
[22:33:42    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[22:34:03    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:34:03    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[22:34:03    INFO]  -----------------------------------------------------------------------------------------------------------
[22:34:03    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_16/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:34:03    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:34:03    INFO]  - will validate that the bias-correction actually improved the result ...
[22:34:03    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:34:03    INFO]  - Will use (1) MLMs from the input chain: ANNZ_16,
Warning in <Fit>: Fit data is empty 
[22:34:06    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_16/plots/
[22:34:13        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_16/plots output/SPEC_advanced24/regres/train/ANNZ_16/plots_biasCor_before
[22:34:13    INFO]  - starting ANNZ::doMetricPlots() ... 
[22:34:13    INFO]  - Will use (1) MLMs from the input chain: ANNZ_16,
[22:34:16    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_16/plots/
[22:34:22        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_16/plots output/SPEC_advanced24/regres/train/ANNZ_16/plots_biasCor_after
[22:34:22    INFO]  - Got original [KS-test,N_poiss]: [0.086713 , 6.35652] , after the bias-correction: [0.0457092 , 5.83192] --> will KEEP the correction !

(22:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(22:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=3:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(22:34 INFO) 
[22:34:24    INFO]  -----------------------------------------------------
[22:34:24    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[22:34:24    INFO]  -----------------------------------------------------------------------------------------------------------
[22:34:25    INFO]  - starting ANNZ::Init()  ... 
[22:34:26    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_17/saveOpt.txt ...
[22:34:31    INFO]  - starting ANNZ::Train_singleReg() ... 
[22:34:31    INFO] ----------------------------------------------------------------------------------------------------
[22:34:31    INFO]  - will book (ANNZ_17) method(KNN) with options: :nkNN=14:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P
[22:34:31    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:34:31    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[22:34:31    INFO]      cuts (train):        ,
[22:34:31    INFO]      cuts (valid):       
[22:34:31    INFO]    - weights:            1
[22:34:31    INFO] ----------------------------------------------------------------------------------------------------
[22:34:31    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:34:35    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/saveTrainOpt_ANNZ_17.txt ...
[22:34:35    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_17 ... 
[22:34:35    INFO]  - Will gen. input-parameter errors ...
[22:34:36    INFO]  - starting ANNZ::loadReaders() ... 
[22:34:40    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[22:39:33    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:39:33    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[22:39:33    INFO]  -----------------------------------------------------------------------------------------------------------
[22:39:33    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[22:40:47    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[22:40:47    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[22:40:47    INFO]  -----------------------------------------------------------------------------------------------------------
[22:40:47    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_17/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[22:40:47    INFO]  - ending makeTreeRegClsOneMLM() ... 
[22:40:47    INFO]  - will try to derive a bias correction ... 
[22:40:47    INFO]  - will validate that training produced an XML file for later ... 
[22:40:47    INFO]  - starting ANNZ::loadReaders() ... 
[22:40:48    INFO]  - will validate that the training was not a complete failure ... 
[22:40:48    INFO]  - training seems to have been successful! will move on ...
[22:40:48    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[22:40:53    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:40:53    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[22:40:54    INFO] ----------------------------------------------------------------------------------------------------
[22:40:54    INFO]  - will book (ANNZ_17_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[22:40:54    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[22:40:54    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[22:40:54    INFO]    - weights:            1
[22:40:54    INFO] ----------------------------------------------------------------------------------------------------
[22:40:54    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[22:40:57    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_17 ... 
[22:40:57    INFO]  - Will gen. input-parameter errors ...
[22:40:58    INFO]  - starting ANNZ::loadReaders() ... 
[22:41:14    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[23:06:03    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:06:03    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[23:06:03    INFO]  -----------------------------------------------------------------------------------------------------------
[23:06:03    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[23:12:11    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:12:11    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[23:12:11    INFO]  -----------------------------------------------------------------------------------------------------------
[23:12:11    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_17/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[23:12:11    INFO]  - ending makeTreeRegClsOneMLM() ... 
[23:12:11    INFO]  - will validate that the bias-correction actually improved the result ...
[23:12:11    INFO]  - starting ANNZ::doMetricPlots() ... 
[23:12:11    INFO]  - Will use (1) MLMs from the input chain: ANNZ_17,
Warning in <Fit>: Fit data is empty 
[23:12:14    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_17/plots/
[23:12:21        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_17/plots output/SPEC_advanced24/regres/train/ANNZ_17/plots_biasCor_before
[23:12:21    INFO]  - starting ANNZ::doMetricPlots() ... 
[23:12:21    INFO]  - Will use (1) MLMs from the input chain: ANNZ_17,
[23:12:23    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_17/plots/
[23:12:30        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_17/plots output/SPEC_advanced24/regres/train/ANNZ_17/plots_biasCor_after
[23:12:30    INFO]  - Got original [KS-test,N_poiss]: [0.594415 , 18.5642] , after the bias-correction: [0.0390744 , 5.62087] --> will KEEP the correction !

(23:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=370:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:12 INFO) 
[23:12:32    INFO]  -----------------------------------------------------
[23:12:32    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:12:32    INFO]  -----------------------------------------------------------------------------------------------------------
[23:12:32    INFO]  - starting ANNZ::Init()  ... 
[23:12:36    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_18/saveOpt.txt ...
[23:12:41    INFO]  - starting ANNZ::Train_singleReg() ... 
[23:12:41    INFO] ----------------------------------------------------------------------------------------------------
[23:12:41    INFO]  - will book (ANNZ_18) method(BDT) with options: :NTrees=370:BoostType=Bagging:VarTransform=N
[23:12:41    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[23:12:41    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[23:12:41    INFO]      cuts (train):        ,
[23:12:41    INFO]      cuts (valid):       
[23:12:41    INFO]    - weights:            1
[23:12:41    INFO] ----------------------------------------------------------------------------------------------------
[23:12:41    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[23:13:08    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/saveTrainOpt_ANNZ_18.txt ...
[23:13:11    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_18 ... 
[23:13:11    INFO]  - Will gen. input-parameter errors ...
[23:13:12    INFO]  - starting ANNZ::loadReaders() ... 
[23:13:19    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[23:14:51    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:14:51    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[23:14:51    INFO]  -----------------------------------------------------------------------------------------------------------
[23:14:51    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[23:15:14    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:15:14    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[23:15:14    INFO]  -----------------------------------------------------------------------------------------------------------
[23:15:14    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_18/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[23:15:15    INFO]  - ending makeTreeRegClsOneMLM() ... 
[23:15:15    INFO]  - will try to derive a bias correction ... 
[23:15:15    INFO]  - will validate that training produced an XML file for later ... 
[23:15:15    INFO]  - starting ANNZ::loadReaders() ... 
[23:15:18    INFO]  - will validate that the training was not a complete failure ... 
[23:15:19    INFO]  - training seems to have been successful! will move on ...
[23:15:19    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[23:15:22    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[23:15:23    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[23:15:23    INFO] ----------------------------------------------------------------------------------------------------
[23:15:23    INFO]  - will book (ANNZ_18_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[23:15:23    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[23:15:23    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[23:15:23    INFO]    - weights:            1
[23:15:23    INFO] ----------------------------------------------------------------------------------------------------
[23:15:23    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[23:15:29    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_18 ... 
[23:15:29    INFO]  - Will gen. input-parameter errors ...
[23:15:31    INFO]  - starting ANNZ::loadReaders() ... 
[23:15:37    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[23:17:05    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:17:05    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[23:17:05    INFO]  -----------------------------------------------------------------------------------------------------------
[23:17:05    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[23:17:27    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:17:27    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[23:17:27    INFO]  -----------------------------------------------------------------------------------------------------------
[23:17:27    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_18/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[23:17:28    INFO]  - ending makeTreeRegClsOneMLM() ... 
[23:17:28    INFO]  - will validate that the bias-correction actually improved the result ...
[23:17:28    INFO]  - starting ANNZ::doMetricPlots() ... 
[23:17:28    INFO]  - Will use (1) MLMs from the input chain: ANNZ_18,
[23:17:32    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_18/plots/
[23:17:38        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_18/plots output/SPEC_advanced24/regres/train/ANNZ_18/plots_biasCor_before
[23:17:38    INFO]  - starting ANNZ::doMetricPlots() ... 
[23:17:38    INFO]  - Will use (1) MLMs from the input chain: ANNZ_18,
[23:17:41    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_18/plots/
[23:17:48        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_18/plots output/SPEC_advanced24/regres/train/ANNZ_18/plots_biasCor_after
[23:17:48    INFO]  - Got original [KS-test,N_poiss]: [0.0816715 , 6.78737] , after the bias-correction: [0.044925 , 5.7266] --> will KEEP the correction !

(23:17 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:17 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:17 INFO) 
[23:17:50    INFO]  -----------------------------------------------------
[23:17:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:17:50    INFO]  -----------------------------------------------------------------------------------------------------------
[23:17:51    INFO]  - starting ANNZ::Init()  ... 
[23:17:52    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_19/saveOpt.txt ...
[23:17:57    INFO]  - starting ANNZ::Train_singleReg() ... 
[23:17:58    INFO] ----------------------------------------------------------------------------------------------------
[23:17:58    INFO]  - will book (ANNZ_19) method(KNN) with options: :nkNN=16:BalanceDepth=5:Kernel=Gaus:VarTransform=N
[23:17:58    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[23:17:58    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[23:17:58    INFO]      cuts (train):        ,
[23:17:58    INFO]      cuts (valid):       
[23:17:58    INFO]    - weights:            1
[23:17:58    INFO] ----------------------------------------------------------------------------------------------------
[23:17:58    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(23:17 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(23:17 CRITICAL) [41;37;1mWill terminate !!!![0m
(23:24 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(23:24 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(23:24 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(23:24 INFO) [40;37;1m - 03/04/19 23:24:40 - starting ANNZ[0m
(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=790:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:40    INFO]  -----------------------------------------------------
[23:24:40    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:40    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:40    INFO]  - starting ANNZ::Init()  ... 
[23:24:41    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[23:24:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:41    INFO]  -----------------------------------------------------
[23:24:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:41    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:42    INFO]  - starting ANNZ::Init()  ... 
[23:24:42    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[23:24:42    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:42    INFO]  -----------------------------------------------------
[23:24:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:42    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:42    INFO]  - starting ANNZ::Init()  ... 
[23:24:42    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[23:24:42    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:43    INFO]  -----------------------------------------------------
[23:24:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:43    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:43    INFO]  - starting ANNZ::Init()  ... 
[23:24:43    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[23:24:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:43    INFO]  -----------------------------------------------------
[23:24:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:43    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:44    INFO]  - starting ANNZ::Init()  ... 
[23:24:44    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[23:24:44    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:44    INFO]  -----------------------------------------------------
[23:24:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:44    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:45    INFO]  - starting ANNZ::Init()  ... 
[23:24:45    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[23:24:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:45    INFO]  -----------------------------------------------------
[23:24:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:45    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:46    INFO]  - starting ANNZ::Init()  ... 
[23:24:46    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[23:24:46    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:46    INFO]  -----------------------------------------------------
[23:24:46    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:46    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:47    INFO]  - starting ANNZ::Init()  ... 
[23:24:47    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[23:24:47    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=380:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:47    INFO]  -----------------------------------------------------
[23:24:47    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:47    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:48    INFO]  - starting ANNZ::Init()  ... 
[23:24:48    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[23:24:48    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=4:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:48    INFO]  -----------------------------------------------------
[23:24:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:48    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:49    INFO]  - starting ANNZ::Init()  ... 
[23:24:49    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[23:24:49    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=540:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:49    INFO]  -----------------------------------------------------
[23:24:49    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:49    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:50    INFO]  - starting ANNZ::Init()  ... 
[23:24:50    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[23:24:50    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:50    INFO]  -----------------------------------------------------
[23:24:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:50    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:50    INFO]  - starting ANNZ::Init()  ... 
[23:24:51    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[23:24:51    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:51    INFO]  -----------------------------------------------------
[23:24:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:51    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:51    INFO]  - starting ANNZ::Init()  ... 
[23:24:51    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[23:24:51    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:51    INFO]  -----------------------------------------------------
[23:24:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:51    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:52    INFO]  - starting ANNZ::Init()  ... 
[23:24:52    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[23:24:52    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:52    INFO]  -----------------------------------------------------
[23:24:52    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:52    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:53    INFO]  - starting ANNZ::Init()  ... 
[23:24:53    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[23:24:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:53    INFO]  -----------------------------------------------------
[23:24:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:53    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:54    INFO]  - starting ANNZ::Init()  ... 
[23:24:54    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[23:24:54    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:54    INFO]  -----------------------------------------------------
[23:24:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:54    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:54    INFO]  - starting ANNZ::Init()  ... 
[23:24:54    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[23:24:54    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:55    INFO]  -----------------------------------------------------
[23:24:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:55    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:55    INFO]  - starting ANNZ::Init()  ... 
[23:24:55    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[23:24:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=410:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:55    INFO]  -----------------------------------------------------
[23:24:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:55    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:56    INFO]  - starting ANNZ::Init()  ... 
[23:24:56    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[23:24:56    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:24 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:24 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:24 INFO) 
[23:24:56    INFO]  -----------------------------------------------------
[23:24:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:24:56    INFO]  -----------------------------------------------------------------------------------------------------------
[23:24:57    INFO]  - starting ANNZ::Init()  ... 
[23:24:58    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_19/saveOpt.txt ...
[23:25:04    INFO]  - starting ANNZ::Train_singleReg() ... 
[23:25:04    INFO] ----------------------------------------------------------------------------------------------------
[23:25:04    INFO]  - will book (ANNZ_19) method(KNN) with options: :nkNN=19:BalanceDepth=8:Kernel=Gaus:VarTransform=N
[23:25:04    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[23:25:04    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[23:25:04    INFO]      cuts (train):        ,
[23:25:04    INFO]      cuts (valid):       
[23:25:04    INFO]    - weights:            1
[23:25:04    INFO] ----------------------------------------------------------------------------------------------------
[23:25:04    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(23:25 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(23:25 CRITICAL) [41;37;1mWill terminate !!!![0m
(23:34 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(23:34 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(23:34 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(23:34 INFO) [40;37;1m - 03/04/19 23:34:39 - starting ANNZ[0m
(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=820:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:39    INFO]  -----------------------------------------------------
[23:34:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:39    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:39    INFO]  - starting ANNZ::Init()  ... 
[23:34:40    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[23:34:40    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:40    INFO]  -----------------------------------------------------
[23:34:40    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:40    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:41    INFO]  - starting ANNZ::Init()  ... 
[23:34:41    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[23:34:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:41    INFO]  -----------------------------------------------------
[23:34:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:41    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:41    INFO]  - starting ANNZ::Init()  ... 
[23:34:42    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[23:34:42    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:42    INFO]  -----------------------------------------------------
[23:34:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:42    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:42    INFO]  - starting ANNZ::Init()  ... 
[23:34:42    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[23:34:42    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1030:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:42    INFO]  -----------------------------------------------------
[23:34:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:42    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:43    INFO]  - starting ANNZ::Init()  ... 
[23:34:43    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[23:34:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:44    INFO]  -----------------------------------------------------
[23:34:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:44    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:44    INFO]  - starting ANNZ::Init()  ... 
[23:34:44    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[23:34:44    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:44    INFO]  -----------------------------------------------------
[23:34:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:44    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:45    INFO]  - starting ANNZ::Init()  ... 
[23:34:45    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[23:34:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=15:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:45    INFO]  -----------------------------------------------------
[23:34:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:45    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:46    INFO]  - starting ANNZ::Init()  ... 
[23:34:46    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[23:34:46    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=440:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:46    INFO]  -----------------------------------------------------
[23:34:46    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:46    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:47    INFO]  - starting ANNZ::Init()  ... 
[23:34:47    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[23:34:47    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:47    INFO]  -----------------------------------------------------
[23:34:47    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:47    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:48    INFO]  - starting ANNZ::Init()  ... 
[23:34:48    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[23:34:48    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:48    INFO]  -----------------------------------------------------
[23:34:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:48    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:49    INFO]  - starting ANNZ::Init()  ... 
[23:34:49    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[23:34:49    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:49    INFO]  -----------------------------------------------------
[23:34:49    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:49    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:50    INFO]  - starting ANNZ::Init()  ... 
[23:34:50    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[23:34:50    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:50    INFO]  -----------------------------------------------------
[23:34:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:50    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:51    INFO]  - starting ANNZ::Init()  ... 
[23:34:51    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[23:34:51    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:51    INFO]  -----------------------------------------------------
[23:34:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:51    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:51    INFO]  - starting ANNZ::Init()  ... 
[23:34:52    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[23:34:52    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=270:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:52    INFO]  -----------------------------------------------------
[23:34:52    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:52    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:52    INFO]  - starting ANNZ::Init()  ... 
[23:34:53    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[23:34:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:53    INFO]  -----------------------------------------------------
[23:34:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:53    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:53    INFO]  - starting ANNZ::Init()  ... 
[23:34:53    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[23:34:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:53    INFO]  -----------------------------------------------------
[23:34:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:53    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:54    INFO]  - starting ANNZ::Init()  ... 
[23:34:54    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[23:34:54    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:54    INFO]  -----------------------------------------------------
[23:34:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:54    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:55    INFO]  - starting ANNZ::Init()  ... 
[23:34:55    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[23:34:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=330:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:55    INFO]  -----------------------------------------------------
[23:34:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:55    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:56    INFO]  - starting ANNZ::Init()  ... 
[23:34:56    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[23:34:56    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(23:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(23:34 INFO) 
[23:34:56    INFO]  -----------------------------------------------------
[23:34:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[23:34:56    INFO]  -----------------------------------------------------------------------------------------------------------
[23:34:57    INFO]  - starting ANNZ::Init()  ... 
[23:35:00    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_19/saveOpt.txt ...
[23:35:05    INFO]  - starting ANNZ::Train_singleReg() ... 
[23:35:06    INFO] ----------------------------------------------------------------------------------------------------
[23:35:06    INFO]  - will book (ANNZ_19) method(KNN) with options: :nkNN=10:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P
[23:35:06    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[23:35:06    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[23:35:06    INFO]      cuts (train):        ,
[23:35:06    INFO]      cuts (valid):       
[23:35:06    INFO]    - weights:            1
[23:35:06    INFO] ----------------------------------------------------------------------------------------------------
[23:35:06    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[23:35:09    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/saveTrainOpt_ANNZ_19.txt ...
[23:35:10    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_19 ... 
[23:35:10    INFO]  - Will gen. input-parameter errors ...
[23:35:11    INFO]  - starting ANNZ::loadReaders() ... 
[23:35:15    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[23:40:08    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:40:08    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[23:40:08    INFO]  -----------------------------------------------------------------------------------------------------------
[23:40:08    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[23:41:21    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[23:41:21    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[23:41:21    INFO]  -----------------------------------------------------------------------------------------------------------
[23:41:21    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_19/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[23:41:22    INFO]  - ending makeTreeRegClsOneMLM() ... 
[23:41:22    INFO]  - will try to derive a bias correction ... 
[23:41:22    INFO]  - will validate that training produced an XML file for later ... 
[23:41:22    INFO]  - starting ANNZ::loadReaders() ... 
[23:41:22    INFO]  - will validate that the training was not a complete failure ... 
[23:41:22    INFO]  - training seems to have been successful! will move on ...
[23:41:22    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[23:41:26    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[23:41:27    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[23:41:27    INFO] ----------------------------------------------------------------------------------------------------
[23:41:27    INFO]  - will book (ANNZ_19_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[23:41:27    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[23:41:27    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[23:41:27    INFO]    - weights:            1
[23:41:27    INFO] ----------------------------------------------------------------------------------------------------
[23:41:27    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[23:41:30    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_19 ... 
[23:41:30    INFO]  - Will gen. input-parameter errors ...
[23:41:32    INFO]  - starting ANNZ::loadReaders() ... 
[23:41:47    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[00:05:14    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:05:14    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[00:05:14    INFO]  -----------------------------------------------------------------------------------------------------------
[00:05:14    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[00:10:58    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:10:58    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[00:10:58    INFO]  -----------------------------------------------------------------------------------------------------------
[00:10:58    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_19/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[00:10:59    INFO]  - ending makeTreeRegClsOneMLM() ... 
[00:10:59    INFO]  - will validate that the bias-correction actually improved the result ...
[00:10:59    INFO]  - starting ANNZ::doMetricPlots() ... 
[00:10:59    INFO]  - Will use (1) MLMs from the input chain: ANNZ_19,
Warning in <Fit>: Fit data is empty 
[00:11:01    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_19/plots/
[00:11:08        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_19/plots output/SPEC_advanced24/regres/train/ANNZ_19/plots_biasCor_before
[00:11:08    INFO]  - starting ANNZ::doMetricPlots() ... 
[00:11:08    INFO]  - Will use (1) MLMs from the input chain: ANNZ_19,
[00:11:10    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_19/plots/
[00:11:17        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_19/plots output/SPEC_advanced24/regres/train/ANNZ_19/plots_biasCor_after
[00:11:17    INFO]  - Got original [KS-test,N_poiss]: [0.578828 , 17.1966] , after the bias-correction: [0.0364839 , 5.61832] --> will KEEP the correction !

(00:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(00:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(00:11 INFO) 
[00:11:19    INFO]  -----------------------------------------------------
[00:11:19    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[00:11:19    INFO]  -----------------------------------------------------------------------------------------------------------
[00:11:19    INFO]  - starting ANNZ::Init()  ... 
[00:11:22    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_20/saveOpt.txt ...
[00:11:27    INFO]  - starting ANNZ::Train_singleReg() ... 
[00:11:27    INFO] ----------------------------------------------------------------------------------------------------
[00:11:27    INFO]  - will book (ANNZ_20) method(BDT) with options: :NTrees=390:BoostType=Bagging:VarTransform=N
[00:11:27    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[00:11:27    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[00:11:27    INFO]      cuts (train):        ,
[00:11:27    INFO]      cuts (valid):       
[00:11:27    INFO]    - weights:            1
[00:11:27    INFO] ----------------------------------------------------------------------------------------------------
[00:11:28    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[00:11:56    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/saveTrainOpt_ANNZ_20.txt ...
[00:11:58    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_20 ... 
[00:11:58    INFO]  - Will gen. input-parameter errors ...
[00:12:00    INFO]  - starting ANNZ::loadReaders() ... 
[00:12:07    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[00:13:40    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:13:40    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[00:13:40    INFO]  -----------------------------------------------------------------------------------------------------------
[00:13:40    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[00:14:04    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:14:04    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[00:14:04    INFO]  -----------------------------------------------------------------------------------------------------------
[00:14:04    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_20/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[00:14:05    INFO]  - ending makeTreeRegClsOneMLM() ... 
[00:14:05    INFO]  - will try to derive a bias correction ... 
[00:14:05    INFO]  - will validate that training produced an XML file for later ... 
[00:14:05    INFO]  - starting ANNZ::loadReaders() ... 
[00:14:09    INFO]  - will validate that the training was not a complete failure ... 
[00:14:09    INFO]  - training seems to have been successful! will move on ...
[00:14:09    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[00:14:12    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[00:14:13    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[00:14:13    INFO] ----------------------------------------------------------------------------------------------------
[00:14:13    INFO]  - will book (ANNZ_20_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[00:14:13    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[00:14:13    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[00:14:13    INFO]    - weights:            1
[00:14:13    INFO] ----------------------------------------------------------------------------------------------------
[00:14:13    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[00:14:19    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_20 ... 
[00:14:19    INFO]  - Will gen. input-parameter errors ...
[00:14:21    INFO]  - starting ANNZ::loadReaders() ... 
[00:14:27    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[00:15:56    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:15:56    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[00:15:56    INFO]  -----------------------------------------------------------------------------------------------------------
[00:15:56    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[00:16:18    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:16:18    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[00:16:18    INFO]  -----------------------------------------------------------------------------------------------------------
[00:16:18    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_20/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[00:16:20    INFO]  - ending makeTreeRegClsOneMLM() ... 
[00:16:20    INFO]  - will validate that the bias-correction actually improved the result ...
[00:16:20    INFO]  - starting ANNZ::doMetricPlots() ... 
[00:16:20    INFO]  - Will use (1) MLMs from the input chain: ANNZ_20,
[00:16:23    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_20/plots/
[00:16:29        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_20/plots output/SPEC_advanced24/regres/train/ANNZ_20/plots_biasCor_before
[00:16:29    INFO]  - starting ANNZ::doMetricPlots() ... 
[00:16:29    INFO]  - Will use (1) MLMs from the input chain: ANNZ_20,
[00:16:32    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_20/plots/
[00:16:39        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_20/plots output/SPEC_advanced24/regres/train/ANNZ_20/plots_biasCor_after
[00:16:39    INFO]  - Got original [KS-test,N_poiss]: [0.0817836 , 6.85936] , after the bias-correction: [0.0447009 , 5.77591] --> will KEEP the correction !

(00:16 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(00:16 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(00:16 INFO) 
[00:16:41    INFO]  -----------------------------------------------------
[00:16:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[00:16:41    INFO]  -----------------------------------------------------------------------------------------------------------
[00:16:42    INFO]  - starting ANNZ::Init()  ... 
[00:16:43    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_21/saveOpt.txt ...
[00:16:48    INFO]  - starting ANNZ::Train_singleReg() ... 
[00:16:48    INFO] ----------------------------------------------------------------------------------------------------
[00:16:48    INFO]  - will book (ANNZ_21) method(KNN) with options: :nkNN=22:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P
[00:16:48    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[00:16:48    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[00:16:48    INFO]      cuts (train):        ,
[00:16:48    INFO]      cuts (valid):       
[00:16:48    INFO]    - weights:            1
[00:16:48    INFO] ----------------------------------------------------------------------------------------------------
[00:16:48    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[00:16:52    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/saveTrainOpt_ANNZ_21.txt ...
[00:16:52    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_21 ... 
[00:16:52    INFO]  - Will gen. input-parameter errors ...
[00:16:54    INFO]  - starting ANNZ::loadReaders() ... 
[00:16:57    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[00:21:48    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:21:48    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[00:21:48    INFO]  -----------------------------------------------------------------------------------------------------------
[00:21:48    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[00:23:01    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:23:01    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[00:23:01    INFO]  -----------------------------------------------------------------------------------------------------------
[00:23:01    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_21/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[00:23:01    INFO]  - ending makeTreeRegClsOneMLM() ... 
[00:23:01    INFO]  - will try to derive a bias correction ... 
[00:23:01    INFO]  - will validate that training produced an XML file for later ... 
[00:23:01    INFO]  - starting ANNZ::loadReaders() ... 
[00:23:01    INFO]  - will validate that the training was not a complete failure ... 
[00:23:01    INFO]  - training seems to have been successful! will move on ...
[00:23:01    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[00:23:07    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[00:23:07    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[00:23:08    INFO] ----------------------------------------------------------------------------------------------------
[00:23:08    INFO]  - will book (ANNZ_21_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[00:23:08    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[00:23:08    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[00:23:08    INFO]    - weights:            1
[00:23:08    INFO] ----------------------------------------------------------------------------------------------------
[00:23:08    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[00:23:11    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_21 ... 
[00:23:11    INFO]  - Will gen. input-parameter errors ...
[00:23:12    INFO]  - starting ANNZ::loadReaders() ... 
[00:23:27    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[00:46:41    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:46:41    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[00:46:41    INFO]  -----------------------------------------------------------------------------------------------------------
[00:46:41    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[00:52:30    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:52:30    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[00:52:30    INFO]  -----------------------------------------------------------------------------------------------------------
[00:52:30    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_21/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[00:52:30    INFO]  - ending makeTreeRegClsOneMLM() ... 
[00:52:30    INFO]  - will validate that the bias-correction actually improved the result ...
[00:52:30    INFO]  - starting ANNZ::doMetricPlots() ... 
[00:52:30    INFO]  - Will use (1) MLMs from the input chain: ANNZ_21,
Warning in <Fit>: Fit data is empty 
[00:52:33    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_21/plots/
[00:52:39        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_21/plots output/SPEC_advanced24/regres/train/ANNZ_21/plots_biasCor_before
[00:52:39    INFO]  - starting ANNZ::doMetricPlots() ... 
[00:52:39    INFO]  - Will use (1) MLMs from the input chain: ANNZ_21,
[00:52:42    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_21/plots/
[00:52:48        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_21/plots output/SPEC_advanced24/regres/train/ANNZ_21/plots_biasCor_after
[00:52:48    INFO]  - Got original [KS-test,N_poiss]: [0.623705 , 19.5664] , after the bias-correction: [0.0417227 , 5.74051] --> will KEEP the correction !

(00:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(00:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=470:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(00:52 INFO) 
[00:52:50    INFO]  -----------------------------------------------------
[00:52:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[00:52:50    INFO]  -----------------------------------------------------------------------------------------------------------
[00:52:51    INFO]  - starting ANNZ::Init()  ... 
[00:52:54    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_22/saveOpt.txt ...
[00:52:59    INFO]  - starting ANNZ::Train_singleReg() ... 
[00:52:59    INFO] ----------------------------------------------------------------------------------------------------
[00:52:59    INFO]  - will book (ANNZ_22) method(BDT) with options: :NTrees=470:BoostType=Bagging:VarTransform=N,P
[00:52:59    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[00:52:59    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[00:52:59    INFO]      cuts (train):        ,
[00:52:59    INFO]      cuts (valid):       
[00:52:59    INFO]    - weights:            1
[00:52:59    INFO] ----------------------------------------------------------------------------------------------------
[00:52:59    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[00:53:34    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/saveTrainOpt_ANNZ_22.txt ...
[00:53:37    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_22 ... 
[00:53:37    INFO]  - Will gen. input-parameter errors ...
[00:53:39    INFO]  - starting ANNZ::loadReaders() ... 
[00:53:47    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[00:56:29    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:56:29    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[00:56:29    INFO]  -----------------------------------------------------------------------------------------------------------
[00:56:29    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[00:57:09    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[00:57:09    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[00:57:09    INFO]  -----------------------------------------------------------------------------------------------------------
[00:57:09    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_22/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[00:57:11    INFO]  - ending makeTreeRegClsOneMLM() ... 
[00:57:11    INFO]  - will try to derive a bias correction ... 
[00:57:11    INFO]  - will validate that training produced an XML file for later ... 
[00:57:11    INFO]  - starting ANNZ::loadReaders() ... 
[00:57:15    INFO]  - will validate that the training was not a complete failure ... 
[00:57:15    INFO]  - training seems to have been successful! will move on ...
[00:57:15    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[00:57:19    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[00:57:19    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[00:57:20    INFO] ----------------------------------------------------------------------------------------------------
[00:57:20    INFO]  - will book (ANNZ_22_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[00:57:20    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[00:57:20    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[00:57:20    INFO]    - weights:            1
[00:57:20    INFO] ----------------------------------------------------------------------------------------------------
[00:57:20    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[00:57:26    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_22 ... 
[00:57:26    INFO]  - Will gen. input-parameter errors ...
[00:57:27    INFO]  - starting ANNZ::loadReaders() ... 
[00:57:35    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[01:00:09    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[01:00:09    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[01:00:09    INFO]  -----------------------------------------------------------------------------------------------------------
[01:00:09    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[01:00:46    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[01:00:46    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[01:00:46    INFO]  -----------------------------------------------------------------------------------------------------------
[01:00:47    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_22/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[01:00:48    INFO]  - ending makeTreeRegClsOneMLM() ... 
[01:00:48    INFO]  - will validate that the bias-correction actually improved the result ...
[01:00:48    INFO]  - starting ANNZ::doMetricPlots() ... 
[01:00:48    INFO]  - Will use (1) MLMs from the input chain: ANNZ_22,
[01:00:51    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_22/plots/
[01:00:58        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_22/plots output/SPEC_advanced24/regres/train/ANNZ_22/plots_biasCor_before
[01:00:58    INFO]  - starting ANNZ::doMetricPlots() ... 
[01:00:58    INFO]  - Will use (1) MLMs from the input chain: ANNZ_22,
[01:01:00    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_22/plots/
[01:01:07        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_22/plots output/SPEC_advanced24/regres/train/ANNZ_22/plots_biasCor_after
[01:01:07    INFO]  - Got original [KS-test,N_poiss]: [0.0952274 , 6.85779] , after the bias-correction: [0.0482859 , 5.85888] --> will KEEP the correction !

(01:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:01 INFO) 
[01:01:10    INFO]  -----------------------------------------------------
[01:01:10    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:01:10    INFO]  -----------------------------------------------------------------------------------------------------------
[01:01:10    INFO]  - starting ANNZ::Init()  ... 
[01:01:11    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_23/saveOpt.txt ...
[01:01:16    INFO]  - starting ANNZ::Train_singleReg() ... 
[01:01:16    INFO] ----------------------------------------------------------------------------------------------------
[01:01:16    INFO]  - will book (ANNZ_23) method(KNN) with options: :nkNN=21:BalanceDepth=4:Kernel=Gaus:VarTransform=N
[01:01:16    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[01:01:16    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[01:01:16    INFO]      cuts (train):        ,
[01:01:16    INFO]      cuts (valid):       
[01:01:16    INFO]    - weights:            1
[01:01:16    INFO] ----------------------------------------------------------------------------------------------------
[01:01:16    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(01:01 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(01:01 CRITICAL) [41;37;1mWill terminate !!!![0m
(01:30 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(01:30 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(01:30 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(01:30 INFO) [40;37;1m - 04/04/19 01:30:19 - starting ANNZ[0m
(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=430:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:19    INFO]  -----------------------------------------------------
[01:30:19    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:19    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:19    INFO]  - starting ANNZ::Init()  ... 
[01:30:20    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[01:30:20    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:20    INFO]  -----------------------------------------------------
[01:30:20    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:20    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:21    INFO]  - starting ANNZ::Init()  ... 
[01:30:21    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[01:30:21    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1050:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:21    INFO]  -----------------------------------------------------
[01:30:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:21    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:21    INFO]  - starting ANNZ::Init()  ... 
[01:30:22    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[01:30:22    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:22    INFO]  -----------------------------------------------------
[01:30:22    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:22    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:22    INFO]  - starting ANNZ::Init()  ... 
[01:30:22    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[01:30:22    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:22    INFO]  -----------------------------------------------------
[01:30:22    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:22    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:23    INFO]  - starting ANNZ::Init()  ... 
[01:30:24    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[01:30:24    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:24    INFO]  -----------------------------------------------------
[01:30:24    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:24    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:24    INFO]  - starting ANNZ::Init()  ... 
[01:30:24    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[01:30:24    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=510:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:24    INFO]  -----------------------------------------------------
[01:30:24    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:24    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:25    INFO]  - starting ANNZ::Init()  ... 
[01:30:25    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[01:30:25    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:26    INFO]  -----------------------------------------------------
[01:30:26    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:26    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:26    INFO]  - starting ANNZ::Init()  ... 
[01:30:26    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[01:30:26    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:26    INFO]  -----------------------------------------------------
[01:30:26    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:26    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:27    INFO]  - starting ANNZ::Init()  ... 
[01:30:27    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[01:30:27    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:27    INFO]  -----------------------------------------------------
[01:30:27    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:27    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:28    INFO]  - starting ANNZ::Init()  ... 
[01:30:28    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[01:30:28    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:28    INFO]  -----------------------------------------------------
[01:30:28    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:28    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:29    INFO]  - starting ANNZ::Init()  ... 
[01:30:29    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[01:30:29    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:29    INFO]  -----------------------------------------------------
[01:30:29    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:29    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:29    INFO]  - starting ANNZ::Init()  ... 
[01:30:29    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[01:30:29    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=820:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:30    INFO]  -----------------------------------------------------
[01:30:30    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:30    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:30    INFO]  - starting ANNZ::Init()  ... 
[01:30:30    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[01:30:30    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:30    INFO]  -----------------------------------------------------
[01:30:30    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:30    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:31    INFO]  - starting ANNZ::Init()  ... 
[01:30:31    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[01:30:31    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:31    INFO]  -----------------------------------------------------
[01:30:31    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:31    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:32    INFO]  - starting ANNZ::Init()  ... 
[01:30:32    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[01:30:32    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:32    INFO]  -----------------------------------------------------
[01:30:32    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:32    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:32    INFO]  - starting ANNZ::Init()  ... 
[01:30:32    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[01:30:32    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:33    INFO]  -----------------------------------------------------
[01:30:33    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:33    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:33    INFO]  - starting ANNZ::Init()  ... 
[01:30:33    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[01:30:33    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:33    INFO]  -----------------------------------------------------
[01:30:33    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:33    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:34    INFO]  - starting ANNZ::Init()  ... 
[01:30:34    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[01:30:34    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1000:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:34    INFO]  -----------------------------------------------------
[01:30:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:34    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:35    INFO]  - starting ANNZ::Init()  ... 
[01:30:35    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[01:30:35    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:35    INFO]  -----------------------------------------------------
[01:30:35    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:35    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:36    INFO]  - starting ANNZ::Init()  ... 
[01:30:36    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[01:30:36    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=330:BoostType=Bagging:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:36    INFO]  -----------------------------------------------------
[01:30:36    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:36    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:36    INFO]  - starting ANNZ::Init()  ... 
[01:30:37    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[01:30:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:37    INFO]  -----------------------------------------------------
[01:30:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:37    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:38    INFO]  - starting ANNZ::Init()  ... 
[01:30:38    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[01:30:38    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:38    INFO]  -----------------------------------------------------
[01:30:38    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:38    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:38    INFO]  - starting ANNZ::Init()  ... 
[01:30:39    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[01:30:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(01:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(01:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(01:30 INFO) 
[01:30:39    INFO]  -----------------------------------------------------
[01:30:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[01:30:39    INFO]  -----------------------------------------------------------------------------------------------------------
[01:30:40    INFO]  - starting ANNZ::Init()  ... 
[01:30:43    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_23/saveOpt.txt ...
[01:30:48    INFO]  - starting ANNZ::Train_singleReg() ... 
[01:30:48    INFO] ----------------------------------------------------------------------------------------------------
[01:30:48    INFO]  - will book (ANNZ_23) method(KNN) with options: :nkNN=13:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P
[01:30:48    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[01:30:48    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[01:30:48    INFO]      cuts (train):        ,
[01:30:48    INFO]      cuts (valid):       
[01:30:48    INFO]    - weights:            1
[01:30:48    INFO] ----------------------------------------------------------------------------------------------------
[01:30:48    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[01:30:51    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/saveTrainOpt_ANNZ_23.txt ...
[01:30:52    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_23 ... 
[01:30:52    INFO]  - Will gen. input-parameter errors ...
[01:30:53    INFO]  - starting ANNZ::loadReaders() ... 
[01:30:56    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[01:35:43    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[01:35:43    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[01:35:43    INFO]  -----------------------------------------------------------------------------------------------------------
[01:35:43    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[01:36:56    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[01:36:56    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[01:36:56    INFO]  -----------------------------------------------------------------------------------------------------------
[01:36:56    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_23/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[01:36:56    INFO]  - ending makeTreeRegClsOneMLM() ... 
[01:36:56    INFO]  - will try to derive a bias correction ... 
[01:36:56    INFO]  - will validate that training produced an XML file for later ... 
[01:36:56    INFO]  - starting ANNZ::loadReaders() ... 
[01:36:56    INFO]  - will validate that the training was not a complete failure ... 
[01:36:56    INFO]  - training seems to have been successful! will move on ...
[01:36:56    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[01:37:00    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[01:37:01    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[01:37:01    INFO] ----------------------------------------------------------------------------------------------------
[01:37:01    INFO]  - will book (ANNZ_23_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[01:37:01    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[01:37:01    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[01:37:01    INFO]    - weights:            1
[01:37:01    INFO] ----------------------------------------------------------------------------------------------------
[01:37:01    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[01:37:04    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_23 ... 
[01:37:04    INFO]  - Will gen. input-parameter errors ...
[01:37:05    INFO]  - starting ANNZ::loadReaders() ... 
[01:37:20    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[02:01:04    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:01:04    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[02:01:04    INFO]  -----------------------------------------------------------------------------------------------------------
[02:01:04    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[02:06:58    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:06:58    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[02:06:58    INFO]  -----------------------------------------------------------------------------------------------------------
[02:06:58    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_23/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[02:06:58    INFO]  - ending makeTreeRegClsOneMLM() ... 
[02:06:58    INFO]  - will validate that the bias-correction actually improved the result ...
[02:06:58    INFO]  - starting ANNZ::doMetricPlots() ... 
[02:06:58    INFO]  - Will use (1) MLMs from the input chain: ANNZ_23,
Warning in <Fit>: Fit data is empty 
[02:07:01    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_23/plots/
[02:07:07        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_23/plots output/SPEC_advanced24/regres/train/ANNZ_23/plots_biasCor_before
[02:07:07    INFO]  - starting ANNZ::doMetricPlots() ... 
[02:07:07    INFO]  - Will use (1) MLMs from the input chain: ANNZ_23,
Warning in <Fit>: Fit data is empty 
[02:07:10    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_23/plots/
[02:07:16        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_23/plots output/SPEC_advanced24/regres/train/ANNZ_23/plots_biasCor_after
[02:07:16    INFO]  - Got original [KS-test,N_poiss]: [0.588741 , 19.1193] , after the bias-correction: [0.0372763 , 5.80205] --> will KEEP the correction !

(02:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(02:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(02:07 INFO) 
[02:07:18    INFO]  -----------------------------------------------------
[02:07:18    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[02:07:18    INFO]  -----------------------------------------------------------------------------------------------------------
[02:07:19    INFO]  - starting ANNZ::Init()  ... 
[02:07:22    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_24/saveOpt.txt ...
[02:07:27    INFO]  - starting ANNZ::Train_singleReg() ... 
[02:07:27    INFO] ----------------------------------------------------------------------------------------------------
[02:07:27    INFO]  - will book (ANNZ_24) method(BDT) with options: :NTrees=260:BoostType=AdaBoostR2:VarTransform=N,P
[02:07:27    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[02:07:27    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[02:07:27    INFO]      cuts (train):        ,
[02:07:27    INFO]      cuts (valid):       
[02:07:27    INFO]    - weights:            1
[02:07:27    INFO] ----------------------------------------------------------------------------------------------------
[02:07:27    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[02:07:45    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/saveTrainOpt_ANNZ_24.txt ...
[02:07:46    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_24 ... 
[02:07:46    INFO]  - Will gen. input-parameter errors ...
[02:07:48    INFO]  - starting ANNZ::loadReaders() ... 
[02:07:52    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[02:10:45    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:10:45    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[02:10:45    INFO]  -----------------------------------------------------------------------------------------------------------
[02:10:45    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[02:11:28    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:11:28    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[02:11:28    INFO]  -----------------------------------------------------------------------------------------------------------
[02:11:28    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_24/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[02:11:28    INFO]  - ending makeTreeRegClsOneMLM() ... 
[02:11:28    INFO]  - will try to derive a bias correction ... 
[02:11:28    INFO]  - will validate that training produced an XML file for later ... 
[02:11:28    INFO]  - starting ANNZ::loadReaders() ... 
[02:11:30    INFO]  - will validate that the training was not a complete failure ... 
[02:11:30    INFO]  - training seems to have been successful! will move on ...
[02:11:30    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[02:11:33    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[02:11:34    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[02:11:34    INFO] ----------------------------------------------------------------------------------------------------
[02:11:34    INFO]  - will book (ANNZ_24_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[02:11:34    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[02:11:34    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[02:11:34    INFO]    - weights:            1
[02:11:34    INFO] ----------------------------------------------------------------------------------------------------
[02:11:34    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[02:11:38    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_24 ... 
[02:11:38    INFO]  - Will gen. input-parameter errors ...
[02:11:40    INFO]  - starting ANNZ::loadReaders() ... 
[02:11:44    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[02:14:37    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:14:37    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[02:14:37    INFO]  -----------------------------------------------------------------------------------------------------------
[02:14:37    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[02:15:21    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[02:15:21    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[02:15:21    INFO]  -----------------------------------------------------------------------------------------------------------
[02:15:21    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_24/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[02:15:22    INFO]  - ending makeTreeRegClsOneMLM() ... 
[02:15:22    INFO]  - will validate that the bias-correction actually improved the result ...
[02:15:22    INFO]  - starting ANNZ::doMetricPlots() ... 
[02:15:22    INFO]  - Will use (1) MLMs from the input chain: ANNZ_24,
[02:15:25    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_24/plots/
[02:15:32        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_24/plots output/SPEC_advanced24/regres/train/ANNZ_24/plots_biasCor_before
[02:15:32    INFO]  - starting ANNZ::doMetricPlots() ... 
[02:15:32    INFO]  - Will use (1) MLMs from the input chain: ANNZ_24,
[02:15:34    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_24/plots/
[02:15:41        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_24/plots output/SPEC_advanced24/regres/train/ANNZ_24/plots_biasCor_after
[02:15:41    INFO]  - Got original [KS-test,N_poiss]: [0.0757338 , 7.07142] , after the bias-correction: [0.0332736 , 5.69087] --> will KEEP the correction !

(02:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(02:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(02:15 INFO) 
[02:15:43    INFO]  -----------------------------------------------------
[02:15:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[02:15:43    INFO]  -----------------------------------------------------------------------------------------------------------
[02:15:43    INFO]  - starting ANNZ::Init()  ... 
[02:15:44    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_25/saveOpt.txt ...
[02:15:49    INFO]  - starting ANNZ::Train_singleReg() ... 
[02:15:50    INFO] ----------------------------------------------------------------------------------------------------
[02:15:50    INFO]  - will book (ANNZ_25) method(KNN) with options: :nkNN=25:BalanceDepth=7:Kernel=Gaus:VarTransform=N
[02:15:50    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[02:15:50    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[02:15:50    INFO]      cuts (train):        ,
[02:15:50    INFO]      cuts (valid):       
[02:15:50    INFO]    - weights:            1
[02:15:50    INFO] ----------------------------------------------------------------------------------------------------
[02:15:50    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(02:15 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(02:15 CRITICAL) [41;37;1mWill terminate !!!![0m
(08:48 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(08:48 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(08:48 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(08:48 INFO) [40;37;1m - 04/04/19 08:48:19 - starting ANNZ[0m
(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=730:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:19    INFO]  -----------------------------------------------------
[08:48:19    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:19    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:20    INFO]  - starting ANNZ::Init()  ... 
[08:48:21    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[08:48:21    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:21    INFO]  -----------------------------------------------------
[08:48:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:21    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:21    INFO]  - starting ANNZ::Init()  ... 
[08:48:21    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[08:48:21    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:21    INFO]  -----------------------------------------------------
[08:48:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:21    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:22    INFO]  - starting ANNZ::Init()  ... 
[08:48:22    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[08:48:22    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=4:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:22    INFO]  -----------------------------------------------------
[08:48:22    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:22    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:23    INFO]  - starting ANNZ::Init()  ... 
[08:48:23    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[08:48:23    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=280:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:23    INFO]  -----------------------------------------------------
[08:48:23    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:23    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:23    INFO]  - starting ANNZ::Init()  ... 
[08:48:24    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[08:48:24    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:24    INFO]  -----------------------------------------------------
[08:48:24    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:24    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:25    INFO]  - starting ANNZ::Init()  ... 
[08:48:25    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[08:48:25    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:25    INFO]  -----------------------------------------------------
[08:48:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:25    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:25    INFO]  - starting ANNZ::Init()  ... 
[08:48:26    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[08:48:26    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:26    INFO]  -----------------------------------------------------
[08:48:26    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:26    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:27    INFO]  - starting ANNZ::Init()  ... 
[08:48:27    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[08:48:27    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:27    INFO]  -----------------------------------------------------
[08:48:27    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:27    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:27    INFO]  - starting ANNZ::Init()  ... 
[08:48:28    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[08:48:28    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:28    INFO]  -----------------------------------------------------
[08:48:28    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:28    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:29    INFO]  - starting ANNZ::Init()  ... 
[08:48:29    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[08:48:29    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=AdaBoostR2:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:29    INFO]  -----------------------------------------------------
[08:48:29    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:29    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:29    INFO]  - starting ANNZ::Init()  ... 
[08:48:30    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[08:48:30    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:30    INFO]  -----------------------------------------------------
[08:48:30    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:30    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:30    INFO]  - starting ANNZ::Init()  ... 
[08:48:30    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[08:48:30    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=350:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:30    INFO]  -----------------------------------------------------
[08:48:30    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:30    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:31    INFO]  - starting ANNZ::Init()  ... 
[08:48:31    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[08:48:31    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:31    INFO]  -----------------------------------------------------
[08:48:31    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:31    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:32    INFO]  - starting ANNZ::Init()  ... 
[08:48:32    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[08:48:32    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:32    INFO]  -----------------------------------------------------
[08:48:32    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:32    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:32    INFO]  - starting ANNZ::Init()  ... 
[08:48:33    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[08:48:33    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:33    INFO]  -----------------------------------------------------
[08:48:33    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:33    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:33    INFO]  - starting ANNZ::Init()  ... 
[08:48:33    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[08:48:33    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=550:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:34    INFO]  -----------------------------------------------------
[08:48:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:34    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:34    INFO]  - starting ANNZ::Init()  ... 
[08:48:34    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[08:48:34    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:34    INFO]  -----------------------------------------------------
[08:48:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:34    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:35    INFO]  - starting ANNZ::Init()  ... 
[08:48:35    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[08:48:35    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:35    INFO]  -----------------------------------------------------
[08:48:35    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:35    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:36    INFO]  - starting ANNZ::Init()  ... 
[08:48:36    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[08:48:36    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:36    INFO]  -----------------------------------------------------
[08:48:36    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:36    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:37    INFO]  - starting ANNZ::Init()  ... 
[08:48:37    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[08:48:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=250:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:37    INFO]  -----------------------------------------------------
[08:48:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:37    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:38    INFO]  - starting ANNZ::Init()  ... 
[08:48:38    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[08:48:38    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:38    INFO]  -----------------------------------------------------
[08:48:38    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:38    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:39    INFO]  - starting ANNZ::Init()  ... 
[08:48:39    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[08:48:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=420:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:39    INFO]  -----------------------------------------------------
[08:48:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:39    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:40    INFO]  - starting ANNZ::Init()  ... 
[08:48:41    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[08:48:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:41    INFO]  -----------------------------------------------------
[08:48:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:41    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:41    INFO]  - starting ANNZ::Init()  ... 
[08:48:41    INFO]  - found trained "ANNZ_23" (./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/randomReg_ANNZ_23.weights.xml)
[08:48:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:41    INFO]  -----------------------------------------------------
[08:48:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:41    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:42    INFO]  - starting ANNZ::Init()  ... 
[08:48:43    INFO]  - found trained "ANNZ_24" (./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/randomReg_ANNZ_24.weights.xml)
[08:48:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(08:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(08:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(08:48 INFO) 
[08:48:43    INFO]  -----------------------------------------------------
[08:48:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[08:48:43    INFO]  -----------------------------------------------------------------------------------------------------------
[08:48:43    INFO]  - starting ANNZ::Init()  ... 
[08:48:47    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_25/saveOpt.txt ...
[08:48:52    INFO]  - starting ANNZ::Train_singleReg() ... 
[08:48:52    INFO] ----------------------------------------------------------------------------------------------------
[08:48:52    INFO]  - will book (ANNZ_25) method(KNN) with options: :nkNN=29:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P
[08:48:52    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[08:48:52    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[08:48:52    INFO]      cuts (train):        ,
[08:48:52    INFO]      cuts (valid):       
[08:48:52    INFO]    - weights:            1
[08:48:52    INFO] ----------------------------------------------------------------------------------------------------
[08:48:52    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[08:48:56    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_25/ANNZ_25_weights/saveTrainOpt_ANNZ_25.txt ...
[08:48:57    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_25 ... 
[08:48:57    INFO]  - Will gen. input-parameter errors ...
[08:48:58    INFO]  - starting ANNZ::loadReaders() ... 
[08:49:01    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[08:53:57    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[08:53:57    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[08:53:57    INFO]  -----------------------------------------------------------------------------------------------------------
[08:53:57    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[08:55:11    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[08:55:11    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[08:55:11    INFO]  -----------------------------------------------------------------------------------------------------------
[08:55:11    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_25/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[08:55:11    INFO]  - ending makeTreeRegClsOneMLM() ... 
[08:55:11    INFO]  - will try to derive a bias correction ... 
[08:55:11    INFO]  - will validate that training produced an XML file for later ... 
[08:55:11    INFO]  - starting ANNZ::loadReaders() ... 
[08:55:11    INFO]  - will validate that the training was not a complete failure ... 
[08:55:11    INFO]  - training seems to have been successful! will move on ...
[08:55:11    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[08:55:15    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[08:55:16    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[08:55:16    INFO] ----------------------------------------------------------------------------------------------------
[08:55:16    INFO]  - will book (ANNZ_25_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[08:55:16    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[08:55:16    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[08:55:16    INFO]    - weights:            1
[08:55:16    INFO] ----------------------------------------------------------------------------------------------------
[08:55:16    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[08:55:20    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_25 ... 
[08:55:20    INFO]  - Will gen. input-parameter errors ...
[08:55:21    INFO]  - starting ANNZ::loadReaders() ... 
[08:55:35    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[09:19:56    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:19:56    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[09:19:56    INFO]  -----------------------------------------------------------------------------------------------------------
[09:19:56    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[09:26:08    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:26:08    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[09:26:08    INFO]  -----------------------------------------------------------------------------------------------------------
[09:26:08    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_25/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[09:26:08    INFO]  - ending makeTreeRegClsOneMLM() ... 
[09:26:08    INFO]  - will validate that the bias-correction actually improved the result ...
[09:26:09    INFO]  - starting ANNZ::doMetricPlots() ... 
[09:26:09    INFO]  - Will use (1) MLMs from the input chain: ANNZ_25,
[09:26:12    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_25/plots/
[09:26:18        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_25/plots output/SPEC_advanced24/regres/train/ANNZ_25/plots_biasCor_before
[09:26:18    INFO]  - starting ANNZ::doMetricPlots() ... 
[09:26:18    INFO]  - Will use (1) MLMs from the input chain: ANNZ_25,
[09:26:21    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_25/plots/
[09:26:27        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_25/plots output/SPEC_advanced24/regres/train/ANNZ_25/plots_biasCor_after
[09:26:27    INFO]  - Got original [KS-test,N_poiss]: [0.636463 , 19.8269] , after the bias-correction: [0.0464192 , 6.10997] --> will KEEP the correction !

(09:26 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(09:26 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m26[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(09:26 INFO) 
[09:26:29    INFO]  -----------------------------------------------------
[09:26:29    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[09:26:29    INFO]  -----------------------------------------------------------------------------------------------------------
[09:26:30    INFO]  - starting ANNZ::Init()  ... 
[09:26:33    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_26/saveOpt.txt ...
[09:26:38    INFO]  - starting ANNZ::Train_singleReg() ... 
[09:26:38    INFO] ----------------------------------------------------------------------------------------------------
[09:26:38    INFO]  - will book (ANNZ_26) method(BDT) with options: :NTrees=480:BoostType=AdaBoost:VarTransform=N
[09:26:38    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[09:26:38    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[09:26:38    INFO]      cuts (train):        ,
[09:26:38    INFO]      cuts (valid):       
[09:26:38    INFO]    - weights:            1
[09:26:38    INFO] ----------------------------------------------------------------------------------------------------
[09:26:39    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[09:27:00    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_26/ANNZ_26_weights/saveTrainOpt_ANNZ_26.txt ...
[09:27:02    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_26 ... 
[09:27:02    INFO]  - Will gen. input-parameter errors ...
[09:27:04    INFO]  - starting ANNZ::loadReaders() ... 
[09:27:08    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[09:28:25    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:28:25    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[09:28:25    INFO]  -----------------------------------------------------------------------------------------------------------
[09:28:25    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[09:28:44    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:28:44    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[09:28:44    INFO]  -----------------------------------------------------------------------------------------------------------
[09:28:44    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_26/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[09:28:45    INFO]  - ending makeTreeRegClsOneMLM() ... 
[09:28:45    INFO]  - will try to derive a bias correction ... 
[09:28:45    INFO]  - will validate that training produced an XML file for later ... 
[09:28:45    INFO]  - starting ANNZ::loadReaders() ... 
[09:28:47    INFO]  - will validate that the training was not a complete failure ... 
[09:28:47    INFO]  - training seems to have been successful! will move on ...
[09:28:47    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[09:28:51    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[09:28:52    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[09:28:52    INFO] ----------------------------------------------------------------------------------------------------
[09:28:52    INFO]  - will book (ANNZ_26_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[09:28:52    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[09:28:52    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[09:28:52    INFO]    - weights:            1
[09:28:52    INFO] ----------------------------------------------------------------------------------------------------
[09:28:52    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[09:28:57    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_26 ... 
[09:28:57    INFO]  - Will gen. input-parameter errors ...
[09:28:59    INFO]  - starting ANNZ::loadReaders() ... 
[09:29:03    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[09:30:20    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:30:20    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[09:30:20    INFO]  -----------------------------------------------------------------------------------------------------------
[09:30:20    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[09:30:39    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:30:39    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[09:30:39    INFO]  -----------------------------------------------------------------------------------------------------------
[09:30:39    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_26/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[09:30:40    INFO]  - ending makeTreeRegClsOneMLM() ... 
[09:30:40    INFO]  - will validate that the bias-correction actually improved the result ...
[09:30:40    INFO]  - starting ANNZ::doMetricPlots() ... 
[09:30:40    INFO]  - Will use (1) MLMs from the input chain: ANNZ_26,
Warning in <Fit>: Fit data is empty 
[09:30:43    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_26/plots/
[09:30:50        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_26/plots output/SPEC_advanced24/regres/train/ANNZ_26/plots_biasCor_before
[09:30:50    INFO]  - starting ANNZ::doMetricPlots() ... 
[09:30:50    INFO]  - Will use (1) MLMs from the input chain: ANNZ_26,
Warning in <Fit>: Fit data is empty 
[09:30:52    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_26/plots/
[09:30:59        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_26/plots output/SPEC_advanced24/regres/train/ANNZ_26/plots_biasCor_after
[09:30:59    INFO]  - Got original [KS-test,N_poiss]: [0.0829039 , 6.34365] , after the bias-correction: [0.0490701 , 5.89547] --> will KEEP the correction !

(09:31 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(09:31 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m27[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(09:31 INFO) 
[09:31:01    INFO]  -----------------------------------------------------
[09:31:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[09:31:01    INFO]  -----------------------------------------------------------------------------------------------------------
[09:31:02    INFO]  - starting ANNZ::Init()  ... 
[09:31:04    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_27/saveOpt.txt ...
[09:31:09    INFO]  - starting ANNZ::Train_singleReg() ... 
[09:31:09    INFO] ----------------------------------------------------------------------------------------------------
[09:31:09    INFO]  - will book (ANNZ_27) method(KNN) with options: :nkNN=13:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P
[09:31:09    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[09:31:09    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[09:31:09    INFO]      cuts (train):        ,
[09:31:09    INFO]      cuts (valid):       
[09:31:09    INFO]    - weights:            1
[09:31:09    INFO] ----------------------------------------------------------------------------------------------------
[09:31:09    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[09:31:12    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_27/ANNZ_27_weights/saveTrainOpt_ANNZ_27.txt ...
[09:31:13    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_27 ... 
[09:31:13    INFO]  - Will gen. input-parameter errors ...
[09:31:16    INFO]  - starting ANNZ::loadReaders() ... 
[09:31:20    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[09:36:12    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:36:12    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[09:36:12    INFO]  -----------------------------------------------------------------------------------------------------------
[09:36:12    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[09:37:24    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[09:37:24    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[09:37:24    INFO]  -----------------------------------------------------------------------------------------------------------
[09:37:24    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_27/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[09:37:25    INFO]  - ending makeTreeRegClsOneMLM() ... 
[09:37:25    INFO]  - will try to derive a bias correction ... 
[09:37:25    INFO]  - will validate that training produced an XML file for later ... 
[09:37:25    INFO]  - starting ANNZ::loadReaders() ... 
[09:37:25    INFO]  - will validate that the training was not a complete failure ... 
[09:37:25    INFO]  - training seems to have been successful! will move on ...
[09:37:25    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[09:37:29    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[09:37:30    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[09:37:30    INFO] ----------------------------------------------------------------------------------------------------
[09:37:30    INFO]  - will book (ANNZ_27_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[09:37:30    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[09:37:30    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[09:37:30    INFO]    - weights:            1
[09:37:30    INFO] ----------------------------------------------------------------------------------------------------
[09:37:30    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[09:37:34    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_27 ... 
[09:37:34    INFO]  - Will gen. input-parameter errors ...
[09:37:35    INFO]  - starting ANNZ::loadReaders() ... 
[09:37:50    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[10:01:52    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:01:52    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[10:01:52    INFO]  -----------------------------------------------------------------------------------------------------------
[10:01:52    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[10:07:55    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:07:55    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[10:07:55    INFO]  -----------------------------------------------------------------------------------------------------------
[10:07:55    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_27/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[10:07:56    INFO]  - ending makeTreeRegClsOneMLM() ... 
[10:07:56    INFO]  - will validate that the bias-correction actually improved the result ...
[10:07:56    INFO]  - starting ANNZ::doMetricPlots() ... 
[10:07:56    INFO]  - Will use (1) MLMs from the input chain: ANNZ_27,
Warning in <Fit>: Fit data is empty 
[10:07:59    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_27/plots/
[10:08:05        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_27/plots output/SPEC_advanced24/regres/train/ANNZ_27/plots_biasCor_before
[10:08:05    INFO]  - starting ANNZ::doMetricPlots() ... 
[10:08:05    INFO]  - Will use (1) MLMs from the input chain: ANNZ_27,
Warning in <Fit>: Fit data is empty 
[10:08:08    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_27/plots/
[10:08:14        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_27/plots output/SPEC_advanced24/regres/train/ANNZ_27/plots_biasCor_after
[10:08:14    INFO]  - Got original [KS-test,N_poiss]: [0.588741 , 19.1193] , after the bias-correction: [0.0372763 , 5.80205] --> will KEEP the correction !

(10:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m28[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=510:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:08 INFO) 
[10:08:16    INFO]  -----------------------------------------------------
[10:08:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:08:16    INFO]  -----------------------------------------------------------------------------------------------------------
[10:08:17    INFO]  - starting ANNZ::Init()  ... 
[10:08:20    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_28/saveOpt.txt ...
[10:08:25    INFO]  - starting ANNZ::Train_singleReg() ... 
[10:08:26    INFO] ----------------------------------------------------------------------------------------------------
[10:08:26    INFO]  - will book (ANNZ_28) method(BDT) with options: :NTrees=510:BoostType=AdaBoostR2:VarTransform=N,P
[10:08:26    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[10:08:26    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[10:08:26    INFO]      cuts (train):        ,
[10:08:26    INFO]      cuts (valid):       
[10:08:26    INFO]    - weights:            1
[10:08:26    INFO] ----------------------------------------------------------------------------------------------------
[10:08:26    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[10:09:05    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_28/ANNZ_28_weights/saveTrainOpt_ANNZ_28.txt ...
[10:09:07    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_28 ... 
[10:09:07    INFO]  - Will gen. input-parameter errors ...
[10:09:09    INFO]  - starting ANNZ::loadReaders() ... 
[10:09:20    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[10:17:36    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:17:36    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[10:17:36    INFO]  -----------------------------------------------------------------------------------------------------------
[10:17:36    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[10:19:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:19:38    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[10:19:38    INFO]  -----------------------------------------------------------------------------------------------------------
[10:19:38    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_28/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[10:19:39    INFO]  - ending makeTreeRegClsOneMLM() ... 
[10:19:39    INFO]  - will try to derive a bias correction ... 
[10:19:39    INFO]  - will validate that training produced an XML file for later ... 
[10:19:39    INFO]  - starting ANNZ::loadReaders() ... 
[10:19:42    INFO]  - will validate that the training was not a complete failure ... 
[10:19:42    INFO]  - training seems to have been successful! will move on ...
[10:19:42    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[10:19:49    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[10:19:50    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[10:19:50    INFO] ----------------------------------------------------------------------------------------------------
[10:19:50    INFO]  - will book (ANNZ_28_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[10:19:50    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[10:19:50    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[10:19:50    INFO]    - weights:            1
[10:19:50    INFO] ----------------------------------------------------------------------------------------------------
[10:19:50    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[10:19:56    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_28 ... 
[10:19:56    INFO]  - Will gen. input-parameter errors ...
[10:19:58    INFO]  - starting ANNZ::loadReaders() ... 
[10:20:08    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[10:27:43    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:27:43    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[10:27:43    INFO]  -----------------------------------------------------------------------------------------------------------
[10:27:43    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[10:29:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:29:38    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[10:29:38    INFO]  -----------------------------------------------------------------------------------------------------------
[10:29:38    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_28/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[10:29:39    INFO]  - ending makeTreeRegClsOneMLM() ... 
[10:29:39    INFO]  - will validate that the bias-correction actually improved the result ...
[10:29:39    INFO]  - starting ANNZ::doMetricPlots() ... 
[10:29:39    INFO]  - Will use (1) MLMs from the input chain: ANNZ_28,
[10:29:42    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_28/plots/
[10:29:49        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_28/plots output/SPEC_advanced24/regres/train/ANNZ_28/plots_biasCor_before
[10:29:49    INFO]  - starting ANNZ::doMetricPlots() ... 
[10:29:49    INFO]  - Will use (1) MLMs from the input chain: ANNZ_28,
[10:29:52    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_28/plots/
[10:29:58        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_28/plots output/SPEC_advanced24/regres/train/ANNZ_28/plots_biasCor_after
[10:29:58    INFO]  - Got original [KS-test,N_poiss]: [0.076294 , 6.91572] , after the bias-correction: [0.0329375 , 5.82264] --> will KEEP the correction !

(10:30 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:30 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m29[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:30 INFO) 
[10:30:01    INFO]  -----------------------------------------------------
[10:30:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:30:01    INFO]  -----------------------------------------------------------------------------------------------------------
[10:30:01    INFO]  - starting ANNZ::Init()  ... 
[10:30:04    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_29/saveOpt.txt ...
[10:30:09    INFO]  - starting ANNZ::Train_singleReg() ... 
[10:30:10    INFO] ----------------------------------------------------------------------------------------------------
[10:30:10    INFO]  - will book (ANNZ_29) method(KNN) with options: :nkNN=22:BalanceDepth=8:Kernel=Gaus:VarTransform=N
[10:30:10    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[10:30:10    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[10:30:10    INFO]      cuts (train):        ,
[10:30:10    INFO]      cuts (valid):       
[10:30:10    INFO]    - weights:            1
[10:30:10    INFO] ----------------------------------------------------------------------------------------------------
[10:30:10    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(10:30 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(10:30 CRITICAL) [41;37;1mWill terminate !!!![0m
(10:40 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(10:40 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(10:40 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(10:40 INFO) [40;37;1m - 04/04/19 10:40:52 - starting ANNZ[0m
(10:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:40 INFO) 
[10:40:52    INFO]  -----------------------------------------------------
[10:40:52    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:40:52    INFO]  -----------------------------------------------------------------------------------------------------------
[10:40:52    INFO]  - starting ANNZ::Init()  ... 
[10:40:53    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[10:40:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=8:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:40 INFO) 
[10:40:53    INFO]  -----------------------------------------------------
[10:40:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:40:53    INFO]  -----------------------------------------------------------------------------------------------------------
[10:40:54    INFO]  - starting ANNZ::Init()  ... 
[10:40:54    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[10:40:54    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:40 INFO) 
[10:40:54    INFO]  -----------------------------------------------------
[10:40:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:40:54    INFO]  -----------------------------------------------------------------------------------------------------------
[10:40:54    INFO]  - starting ANNZ::Init()  ... 
[10:40:55    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[10:40:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:40 INFO) 
[10:40:55    INFO]  -----------------------------------------------------
[10:40:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:40:55    INFO]  -----------------------------------------------------------------------------------------------------------
[10:40:55    INFO]  - starting ANNZ::Init()  ... 
[10:40:55    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[10:40:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=420:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:40 INFO) 
[10:40:55    INFO]  -----------------------------------------------------
[10:40:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:40:55    INFO]  -----------------------------------------------------------------------------------------------------------
[10:40:56    INFO]  - starting ANNZ::Init()  ... 
[10:40:57    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[10:40:57    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=6:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:40 INFO) 
[10:40:57    INFO]  -----------------------------------------------------
[10:40:57    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:40:57    INFO]  -----------------------------------------------------------------------------------------------------------
[10:40:57    INFO]  - starting ANNZ::Init()  ... 
[10:40:57    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[10:40:57    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:40 INFO) 
[10:40:57    INFO]  -----------------------------------------------------
[10:40:57    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:40:57    INFO]  -----------------------------------------------------------------------------------------------------------
[10:40:58    INFO]  - starting ANNZ::Init()  ... 
[10:40:58    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[10:40:58    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:40 INFO) 
[10:40:58    INFO]  -----------------------------------------------------
[10:40:58    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:40:58    INFO]  -----------------------------------------------------------------------------------------------------------
[10:40:59    INFO]  - starting ANNZ::Init()  ... 
[10:40:59    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[10:40:59    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:40 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:40 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=790:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:40 INFO) 
[10:40:59    INFO]  -----------------------------------------------------
[10:40:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:40:59    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:00    INFO]  - starting ANNZ::Init()  ... 
[10:41:00    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[10:41:00    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:00    INFO]  -----------------------------------------------------
[10:41:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:00    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:01    INFO]  - starting ANNZ::Init()  ... 
[10:41:01    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[10:41:01    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:01    INFO]  -----------------------------------------------------
[10:41:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:01    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:02    INFO]  - starting ANNZ::Init()  ... 
[10:41:02    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[10:41:02    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:02    INFO]  -----------------------------------------------------
[10:41:02    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:02    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:02    INFO]  - starting ANNZ::Init()  ... 
[10:41:03    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[10:41:03    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=360:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:03    INFO]  -----------------------------------------------------
[10:41:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:03    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:03    INFO]  - starting ANNZ::Init()  ... 
[10:41:03    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[10:41:03    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:03    INFO]  -----------------------------------------------------
[10:41:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:03    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:04    INFO]  - starting ANNZ::Init()  ... 
[10:41:04    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[10:41:04    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:04    INFO]  -----------------------------------------------------
[10:41:04    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:04    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:05    INFO]  - starting ANNZ::Init()  ... 
[10:41:05    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[10:41:05    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:05    INFO]  -----------------------------------------------------
[10:41:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:05    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:06    INFO]  - starting ANNZ::Init()  ... 
[10:41:06    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[10:41:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=360:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:06    INFO]  -----------------------------------------------------
[10:41:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:06    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:06    INFO]  - starting ANNZ::Init()  ... 
[10:41:06    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[10:41:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=15:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:06    INFO]  -----------------------------------------------------
[10:41:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:06    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:07    INFO]  - starting ANNZ::Init()  ... 
[10:41:07    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[10:41:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=280:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:07    INFO]  -----------------------------------------------------
[10:41:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:07    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:08    INFO]  - starting ANNZ::Init()  ... 
[10:41:08    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[10:41:08    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:08    INFO]  -----------------------------------------------------
[10:41:08    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:08    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:09    INFO]  - starting ANNZ::Init()  ... 
[10:41:09    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[10:41:09    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=330:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:09    INFO]  -----------------------------------------------------
[10:41:09    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:09    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:10    INFO]  - starting ANNZ::Init()  ... 
[10:41:10    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[10:41:10    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:10    INFO]  -----------------------------------------------------
[10:41:10    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:10    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:11    INFO]  - starting ANNZ::Init()  ... 
[10:41:11    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[10:41:11    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=410:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:11    INFO]  -----------------------------------------------------
[10:41:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:11    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:11    INFO]  - starting ANNZ::Init()  ... 
[10:41:12    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[10:41:12    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:12    INFO]  -----------------------------------------------------
[10:41:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:12    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:13    INFO]  - starting ANNZ::Init()  ... 
[10:41:13    INFO]  - found trained "ANNZ_23" (./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/randomReg_ANNZ_23.weights.xml)
[10:41:13    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=AdaBoost:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:13    INFO]  -----------------------------------------------------
[10:41:13    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:13    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:13    INFO]  - starting ANNZ::Init()  ... 
[10:41:14    INFO]  - found trained "ANNZ_24" (./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/randomReg_ANNZ_24.weights.xml)
[10:41:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:14    INFO]  -----------------------------------------------------
[10:41:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:14    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:14    INFO]  - starting ANNZ::Init()  ... 
[10:41:14    INFO]  - found trained "ANNZ_25" (./output/SPEC_advanced24/regres/train/ANNZ_25/ANNZ_25_weights/randomReg_ANNZ_25.weights.xml)
[10:41:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m26[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=320:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:14    INFO]  -----------------------------------------------------
[10:41:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:14    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:15    INFO]  - starting ANNZ::Init()  ... 
[10:41:15    INFO]  - found trained "ANNZ_26" (./output/SPEC_advanced24/regres/train/ANNZ_26/ANNZ_26_weights/randomReg_ANNZ_26.weights.xml)
[10:41:15    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m27[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:15    INFO]  -----------------------------------------------------
[10:41:15    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:15    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:16    INFO]  - starting ANNZ::Init()  ... 
[10:41:16    INFO]  - found trained "ANNZ_27" (./output/SPEC_advanced24/regres/train/ANNZ_27/ANNZ_27_weights/randomReg_ANNZ_27.weights.xml)
[10:41:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m28[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=430:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:16    INFO]  -----------------------------------------------------
[10:41:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:16    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:17    INFO]  - starting ANNZ::Init()  ... 
[10:41:17    INFO]  - found trained "ANNZ_28" (./output/SPEC_advanced24/regres/train/ANNZ_28/ANNZ_28_weights/randomReg_ANNZ_28.weights.xml)
[10:41:17    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(10:41 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(10:41 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m29[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(10:41 INFO) 
[10:41:17    INFO]  -----------------------------------------------------
[10:41:17    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[10:41:17    INFO]  -----------------------------------------------------------------------------------------------------------
[10:41:18    INFO]  - starting ANNZ::Init()  ... 
[10:41:22    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_29/saveOpt.txt ...
[10:41:27    INFO]  - starting ANNZ::Train_singleReg() ... 
[10:41:27    INFO] ----------------------------------------------------------------------------------------------------
[10:41:27    INFO]  - will book (ANNZ_29) method(KNN) with options: :nkNN=13:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P
[10:41:27    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[10:41:27    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[10:41:27    INFO]      cuts (train):        ,
[10:41:27    INFO]      cuts (valid):       
[10:41:27    INFO]    - weights:            1
[10:41:27    INFO] ----------------------------------------------------------------------------------------------------
[10:41:27    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[10:41:30    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_29/ANNZ_29_weights/saveTrainOpt_ANNZ_29.txt ...
[10:41:31    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_29 ... 
[10:41:31    INFO]  - Will gen. input-parameter errors ...
[10:41:32    INFO]  - starting ANNZ::loadReaders() ... 
[10:41:36    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[10:46:26    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:46:26    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[10:46:26    INFO]  -----------------------------------------------------------------------------------------------------------
[10:46:26    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[10:47:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[10:47:38    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[10:47:38    INFO]  -----------------------------------------------------------------------------------------------------------
[10:47:38    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_29/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[10:47:39    INFO]  - ending makeTreeRegClsOneMLM() ... 
[10:47:39    INFO]  - will try to derive a bias correction ... 
[10:47:39    INFO]  - will validate that training produced an XML file for later ... 
[10:47:39    INFO]  - starting ANNZ::loadReaders() ... 
[10:47:39    INFO]  - will validate that the training was not a complete failure ... 
[10:47:39    INFO]  - training seems to have been successful! will move on ...
[10:47:39    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[10:47:43    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[10:47:44    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[10:47:44    INFO] ----------------------------------------------------------------------------------------------------
[10:47:44    INFO]  - will book (ANNZ_29_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[10:47:44    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[10:47:44    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[10:47:44    INFO]    - weights:            1
[10:47:44    INFO] ----------------------------------------------------------------------------------------------------
[10:47:44    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[10:47:47    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_29 ... 
[10:47:47    INFO]  - Will gen. input-parameter errors ...
[10:47:48    INFO]  - starting ANNZ::loadReaders() ... 
[10:48:03    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[11:12:13    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[11:12:13    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[11:12:13    INFO]  -----------------------------------------------------------------------------------------------------------
[11:12:13    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[11:18:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[11:18:19    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[11:18:19    INFO]  -----------------------------------------------------------------------------------------------------------
[11:18:19    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_29/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[11:18:20    INFO]  - ending makeTreeRegClsOneMLM() ... 
[11:18:20    INFO]  - will validate that the bias-correction actually improved the result ...
[11:18:20    INFO]  - starting ANNZ::doMetricPlots() ... 
[11:18:20    INFO]  - Will use (1) MLMs from the input chain: ANNZ_29,
Warning in <Fit>: Fit data is empty 
[11:18:23    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_29/plots/
[11:18:29        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_29/plots output/SPEC_advanced24/regres/train/ANNZ_29/plots_biasCor_before
[11:18:29    INFO]  - starting ANNZ::doMetricPlots() ... 
[11:18:29    INFO]  - Will use (1) MLMs from the input chain: ANNZ_29,
Warning in <Fit>: Fit data is empty 
[11:18:32    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_29/plots/
[11:18:38        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_29/plots output/SPEC_advanced24/regres/train/ANNZ_29/plots_biasCor_after
[11:18:38    INFO]  - Got original [KS-test,N_poiss]: [0.588741 , 19.1193] , after the bias-correction: [0.0372763 , 5.80205] --> will KEEP the correction !

(11:18 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(11:18 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m30[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(11:18 INFO) 
[11:18:40    INFO]  -----------------------------------------------------
[11:18:40    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[11:18:40    INFO]  -----------------------------------------------------------------------------------------------------------
[11:18:41    INFO]  - starting ANNZ::Init()  ... 
[11:18:46    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_30/saveOpt.txt ...
[11:18:51    INFO]  - starting ANNZ::Train_singleReg() ... 
[11:18:51    INFO] ----------------------------------------------------------------------------------------------------
[11:18:51    INFO]  - will book (ANNZ_30) method(BDT) with options: :NTrees=490:BoostType=AdaBoost:VarTransform=N,P
[11:18:51    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[11:18:51    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[11:18:51    INFO]      cuts (train):        ,
[11:18:51    INFO]      cuts (valid):       
[11:18:51    INFO]    - weights:            1
[11:18:51    INFO] ----------------------------------------------------------------------------------------------------
[11:18:52    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[11:19:10    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_30/ANNZ_30_weights/saveTrainOpt_ANNZ_30.txt ...
[11:19:12    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_30 ... 
[11:19:12    INFO]  - Will gen. input-parameter errors ...
[11:19:13    INFO]  - starting ANNZ::loadReaders() ... 
[11:19:16    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[11:20:44    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[11:20:44    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[11:20:44    INFO]  -----------------------------------------------------------------------------------------------------------
[11:20:44    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[11:21:06    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[11:21:06    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[11:21:06    INFO]  -----------------------------------------------------------------------------------------------------------
[11:21:06    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_30/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[11:21:07    INFO]  - ending makeTreeRegClsOneMLM() ... 
[11:21:07    INFO]  - will try to derive a bias correction ... 
[11:21:07    INFO]  - will validate that training produced an XML file for later ... 
[11:21:07    INFO]  - starting ANNZ::loadReaders() ... 
[11:21:08    INFO]  - will validate that the training was not a complete failure ... 
[11:21:08    INFO]  - training seems to have been successful! will move on ...
[11:21:08    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[11:21:11    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[11:21:12    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[11:21:13    INFO] ----------------------------------------------------------------------------------------------------
[11:21:13    INFO]  - will book (ANNZ_30_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[11:21:13    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[11:21:13    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[11:21:13    INFO]    - weights:            1
[11:21:13    INFO] ----------------------------------------------------------------------------------------------------
[11:21:13    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[11:21:17    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_30 ... 
[11:21:17    INFO]  - Will gen. input-parameter errors ...
[11:21:18    INFO]  - starting ANNZ::loadReaders() ... 
[11:21:22    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[11:22:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[11:22:49    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[11:22:49    INFO]  -----------------------------------------------------------------------------------------------------------
[11:22:49    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[11:23:11    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[11:23:11    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[11:23:11    INFO]  -----------------------------------------------------------------------------------------------------------
[11:23:11    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_30/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[11:23:12    INFO]  - ending makeTreeRegClsOneMLM() ... 
[11:23:12    INFO]  - will validate that the bias-correction actually improved the result ...
[11:23:12    INFO]  - starting ANNZ::doMetricPlots() ... 
[11:23:12    INFO]  - Will use (1) MLMs from the input chain: ANNZ_30,
[11:23:15    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_30/plots/
[11:23:21        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_30/plots output/SPEC_advanced24/regres/train/ANNZ_30/plots_biasCor_before
[11:23:21    INFO]  - starting ANNZ::doMetricPlots() ... 
[11:23:21    INFO]  - Will use (1) MLMs from the input chain: ANNZ_30,
[11:23:24    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_30/plots/
[11:23:30        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_30/plots output/SPEC_advanced24/regres/train/ANNZ_30/plots_biasCor_after
[11:23:30    INFO]  - Got original [KS-test,N_poiss]: [0.086825 , 6.3575] , after the bias-correction: [0.045149 , 5.82517] --> will KEEP the correction !

(11:23 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(11:23 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m31[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=4:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(11:23 INFO) 
[11:23:33    INFO]  -----------------------------------------------------
[11:23:33    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[11:23:33    INFO]  -----------------------------------------------------------------------------------------------------------
[11:23:33    INFO]  - starting ANNZ::Init()  ... 
[11:23:35    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_31/saveOpt.txt ...
[11:23:40    INFO]  - starting ANNZ::Train_singleReg() ... 
[11:23:40    INFO] ----------------------------------------------------------------------------------------------------
[11:23:40    INFO]  - will book (ANNZ_31) method(KNN) with options: :nkNN=14:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P
[11:23:40    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[11:23:40    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[11:23:40    INFO]      cuts (train):        ,
[11:23:40    INFO]      cuts (valid):       
[11:23:40    INFO]    - weights:            1
[11:23:40    INFO] ----------------------------------------------------------------------------------------------------
[11:23:40    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[11:23:43    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_31/ANNZ_31_weights/saveTrainOpt_ANNZ_31.txt ...
[11:23:44    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_31 ... 
[11:23:44    INFO]  - Will gen. input-parameter errors ...
[11:23:45    INFO]  - starting ANNZ::loadReaders() ... 
[11:23:48    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[11:28:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[11:28:38    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[11:28:38    INFO]  -----------------------------------------------------------------------------------------------------------
[11:28:38    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[11:29:51    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[11:29:51    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[11:29:51    INFO]  -----------------------------------------------------------------------------------------------------------
[11:29:51    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_31/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[11:29:51    INFO]  - ending makeTreeRegClsOneMLM() ... 
[11:29:51    INFO]  - will try to derive a bias correction ... 
[11:29:51    INFO]  - will validate that training produced an XML file for later ... 
[11:29:51    INFO]  - starting ANNZ::loadReaders() ... 
[11:29:51    INFO]  - will validate that the training was not a complete failure ... 
[11:29:51    INFO]  - training seems to have been successful! will move on ...
[11:29:51    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[11:29:55    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[11:29:56    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[11:29:56    INFO] ----------------------------------------------------------------------------------------------------
[11:29:56    INFO]  - will book (ANNZ_31_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[11:29:56    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[11:29:56    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[11:29:56    INFO]    - weights:            1
[11:29:56    INFO] ----------------------------------------------------------------------------------------------------
[11:29:56    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[11:29:59    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_31 ... 
[11:29:59    INFO]  - Will gen. input-parameter errors ...
[11:30:01    INFO]  - starting ANNZ::loadReaders() ... 
[11:30:16    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[11:54:22    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[11:54:22    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[11:54:22    INFO]  -----------------------------------------------------------------------------------------------------------
[11:54:22    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[12:00:21    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:00:21    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[12:00:21    INFO]  -----------------------------------------------------------------------------------------------------------
[12:00:21    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_31/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[12:00:22    INFO]  - ending makeTreeRegClsOneMLM() ... 
[12:00:22    INFO]  - will validate that the bias-correction actually improved the result ...
[12:00:22    INFO]  - starting ANNZ::doMetricPlots() ... 
[12:00:22    INFO]  - Will use (1) MLMs from the input chain: ANNZ_31,
Warning in <Fit>: Fit data is empty 
[12:00:25    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_31/plots/
[12:00:31        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_31/plots output/SPEC_advanced24/regres/train/ANNZ_31/plots_biasCor_before
[12:00:31    INFO]  - starting ANNZ::doMetricPlots() ... 
[12:00:31    INFO]  - Will use (1) MLMs from the input chain: ANNZ_31,
[12:00:34    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_31/plots/
[12:00:40        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_31/plots output/SPEC_advanced24/regres/train/ANNZ_31/plots_biasCor_after
[12:00:40    INFO]  - Got original [KS-test,N_poiss]: [0.594415 , 18.5642] , after the bias-correction: [0.0390744 , 5.62087] --> will KEEP the correction !

(12:00 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(12:00 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m32[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(12:00 INFO) 
[12:00:42    INFO]  -----------------------------------------------------
[12:00:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[12:00:42    INFO]  -----------------------------------------------------------------------------------------------------------
[12:00:43    INFO]  - starting ANNZ::Init()  ... 
[12:00:46    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_32/saveOpt.txt ...
[12:00:51    INFO]  - starting ANNZ::Train_singleReg() ... 
[12:00:51    INFO] ----------------------------------------------------------------------------------------------------
[12:00:51    INFO]  - will book (ANNZ_32) method(BDT) with options: :NTrees=520:BoostType=AdaBoostR2:VarTransform=N
[12:00:51    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[12:00:51    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[12:00:51    INFO]      cuts (train):        ,
[12:00:51    INFO]      cuts (valid):       
[12:00:51    INFO]    - weights:            1
[12:00:51    INFO] ----------------------------------------------------------------------------------------------------
[12:00:51    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[12:01:26    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_32/ANNZ_32_weights/saveTrainOpt_ANNZ_32.txt ...
[12:01:29    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_32 ... 
[12:01:29    INFO]  - Will gen. input-parameter errors ...
[12:01:32    INFO]  - starting ANNZ::loadReaders() ... 
[12:01:42    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[12:09:24    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:09:24    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[12:09:24    INFO]  -----------------------------------------------------------------------------------------------------------
[12:09:24    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[12:11:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:11:19    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[12:11:19    INFO]  -----------------------------------------------------------------------------------------------------------
[12:11:19    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_32/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[12:11:20    INFO]  - ending makeTreeRegClsOneMLM() ... 
[12:11:20    INFO]  - will try to derive a bias correction ... 
[12:11:20    INFO]  - will validate that training produced an XML file for later ... 
[12:11:20    INFO]  - starting ANNZ::loadReaders() ... 
[12:11:23    INFO]  - will validate that the training was not a complete failure ... 
[12:11:23    INFO]  - training seems to have been successful! will move on ...
[12:11:23    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[12:11:29    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[12:11:30    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[12:11:30    INFO] ----------------------------------------------------------------------------------------------------
[12:11:30    INFO]  - will book (ANNZ_32_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[12:11:30    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[12:11:30    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[12:11:30    INFO]    - weights:            1
[12:11:30    INFO] ----------------------------------------------------------------------------------------------------
[12:11:30    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[12:11:35    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_32 ... 
[12:11:35    INFO]  - Will gen. input-parameter errors ...
[12:11:37    INFO]  - starting ANNZ::loadReaders() ... 
[12:11:47    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[12:19:01    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:19:01    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[12:19:01    INFO]  -----------------------------------------------------------------------------------------------------------
[12:19:01    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[12:20:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:20:49    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[12:20:49    INFO]  -----------------------------------------------------------------------------------------------------------
[12:20:49    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_32/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[12:20:50    INFO]  - ending makeTreeRegClsOneMLM() ... 
[12:20:50    INFO]  - will validate that the bias-correction actually improved the result ...
[12:20:50    INFO]  - starting ANNZ::doMetricPlots() ... 
[12:20:50    INFO]  - Will use (1) MLMs from the input chain: ANNZ_32,
[12:20:53    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_32/plots/
[12:21:00        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_32/plots output/SPEC_advanced24/regres/train/ANNZ_32/plots_biasCor_before
[12:21:00    INFO]  - starting ANNZ::doMetricPlots() ... 
[12:21:00    INFO]  - Will use (1) MLMs from the input chain: ANNZ_32,
Warning in <Fit>: Fit data is empty 
[12:21:02    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_32/plots/
[12:21:09        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_32/plots output/SPEC_advanced24/regres/train/ANNZ_32/plots_biasCor_after
[12:21:09    INFO]  - Got original [KS-test,N_poiss]: [0.0657629 , 6.94063] , after the bias-correction: [0.0388752 , 5.65008] --> will KEEP the correction !

(12:21 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(12:21 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m33[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=28:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(12:21 INFO) 
[12:21:11    INFO]  -----------------------------------------------------
[12:21:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[12:21:11    INFO]  -----------------------------------------------------------------------------------------------------------
[12:21:12    INFO]  - starting ANNZ::Init()  ... 
[12:21:16    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_33/saveOpt.txt ...
[12:21:21    INFO]  - starting ANNZ::Train_singleReg() ... 
[12:21:21    INFO] ----------------------------------------------------------------------------------------------------
[12:21:21    INFO]  - will book (ANNZ_33) method(KNN) with options: :nkNN=28:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P
[12:21:21    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[12:21:21    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[12:21:21    INFO]      cuts (train):        ,
[12:21:21    INFO]      cuts (valid):       
[12:21:21    INFO]    - weights:            1
[12:21:21    INFO] ----------------------------------------------------------------------------------------------------
[12:21:21    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[12:21:25    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_33/ANNZ_33_weights/saveTrainOpt_ANNZ_33.txt ...
[12:21:25    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_33 ... 
[12:21:25    INFO]  - Will gen. input-parameter errors ...
[12:21:26    INFO]  - starting ANNZ::loadReaders() ... 
[12:21:30    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[12:26:23    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:26:23    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[12:26:23    INFO]  -----------------------------------------------------------------------------------------------------------
[12:26:23    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[12:27:36    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:27:36    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[12:27:36    INFO]  -----------------------------------------------------------------------------------------------------------
[12:27:36    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_33/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[12:27:36    INFO]  - ending makeTreeRegClsOneMLM() ... 
[12:27:36    INFO]  - will try to derive a bias correction ... 
[12:27:36    INFO]  - will validate that training produced an XML file for later ... 
[12:27:36    INFO]  - starting ANNZ::loadReaders() ... 
[12:27:36    INFO]  - will validate that the training was not a complete failure ... 
[12:27:36    INFO]  - training seems to have been successful! will move on ...
[12:27:36    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[12:27:41    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[12:27:41    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[12:27:41    INFO] ----------------------------------------------------------------------------------------------------
[12:27:41    INFO]  - will book (ANNZ_33_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[12:27:41    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[12:27:41    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[12:27:41    INFO]    - weights:            1
[12:27:41    INFO] ----------------------------------------------------------------------------------------------------
[12:27:42    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[12:27:45    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_33 ... 
[12:27:45    INFO]  - Will gen. input-parameter errors ...
[12:27:46    INFO]  - starting ANNZ::loadReaders() ... 
[12:28:01    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[12:52:26    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:52:26    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[12:52:26    INFO]  -----------------------------------------------------------------------------------------------------------
[12:52:26    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[12:58:30    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[12:58:30    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[12:58:30    INFO]  -----------------------------------------------------------------------------------------------------------
[12:58:31    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_33/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[12:58:31    INFO]  - ending makeTreeRegClsOneMLM() ... 
[12:58:31    INFO]  - will validate that the bias-correction actually improved the result ...
[12:58:31    INFO]  - starting ANNZ::doMetricPlots() ... 
[12:58:31    INFO]  - Will use (1) MLMs from the input chain: ANNZ_33,
[12:58:34    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_33/plots/
[12:58:40        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_33/plots output/SPEC_advanced24/regres/train/ANNZ_33/plots_biasCor_before
[12:58:40    INFO]  - starting ANNZ::doMetricPlots() ... 
[12:58:40    INFO]  - Will use (1) MLMs from the input chain: ANNZ_33,
[12:58:43    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_33/plots/
[12:58:49        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_33/plots output/SPEC_advanced24/regres/train/ANNZ_33/plots_biasCor_after
[12:58:49    INFO]  - Got original [KS-test,N_poiss]: [0.636496 , 19.275] , after the bias-correction: [0.0428771 , 6.11577] --> will KEEP the correction !

(12:58 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(12:58 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m34[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=820:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(12:58 INFO) 
[12:58:51    INFO]  -----------------------------------------------------
[12:58:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[12:58:51    INFO]  -----------------------------------------------------------------------------------------------------------
[12:58:52    INFO]  - starting ANNZ::Init()  ... 
[12:58:55    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_34/saveOpt.txt ...
[12:59:00    INFO]  - starting ANNZ::Train_singleReg() ... 
[12:59:00    INFO] ----------------------------------------------------------------------------------------------------
[12:59:00    INFO]  - will book (ANNZ_34) method(BDT) with options: :NTrees=820:BoostType=AdaBoost:VarTransform=N,P
[12:59:00    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[12:59:00    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[12:59:00    INFO]      cuts (train):        ,
[12:59:00    INFO]      cuts (valid):       
[12:59:00    INFO]    - weights:            1
[12:59:00    INFO] ----------------------------------------------------------------------------------------------------
[12:59:00    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[12:59:30    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_34/ANNZ_34_weights/saveTrainOpt_ANNZ_34.txt ...
[12:59:32    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_34 ... 
[12:59:32    INFO]  - Will gen. input-parameter errors ...
[12:59:33    INFO]  - starting ANNZ::loadReaders() ... 
[12:59:39    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[13:02:09    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:02:09    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[13:02:09    INFO]  -----------------------------------------------------------------------------------------------------------
[13:02:09    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[13:02:47    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:02:47    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[13:02:47    INFO]  -----------------------------------------------------------------------------------------------------------
[13:02:47    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_34/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[13:02:48    INFO]  - ending makeTreeRegClsOneMLM() ... 
[13:02:48    INFO]  - will try to derive a bias correction ... 
[13:02:48    INFO]  - will validate that training produced an XML file for later ... 
[13:02:48    INFO]  - starting ANNZ::loadReaders() ... 
[13:02:50    INFO]  - will validate that the training was not a complete failure ... 
[13:02:50    INFO]  - training seems to have been successful! will move on ...
[13:02:50    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[13:02:53    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[13:02:54    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[13:02:54    INFO] ----------------------------------------------------------------------------------------------------
[13:02:54    INFO]  - will book (ANNZ_34_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[13:02:54    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[13:02:54    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[13:02:54    INFO]    - weights:            1
[13:02:54    INFO] ----------------------------------------------------------------------------------------------------
[13:02:54    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[13:02:59    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_34 ... 
[13:02:59    INFO]  - Will gen. input-parameter errors ...
[13:03:00    INFO]  - starting ANNZ::loadReaders() ... 
[13:03:05    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[13:05:03    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:05:03    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[13:05:03    INFO]  -----------------------------------------------------------------------------------------------------------
[13:05:03    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[13:05:33    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:05:33    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[13:05:33    INFO]  -----------------------------------------------------------------------------------------------------------
[13:05:33    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_34/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[13:05:34    INFO]  - ending makeTreeRegClsOneMLM() ... 
[13:05:34    INFO]  - will validate that the bias-correction actually improved the result ...
[13:05:34    INFO]  - starting ANNZ::doMetricPlots() ... 
[13:05:34    INFO]  - Will use (1) MLMs from the input chain: ANNZ_34,
Warning in <Fit>: Fit data is empty 
[13:05:37    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_34/plots/
[13:05:43        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_34/plots output/SPEC_advanced24/regres/train/ANNZ_34/plots_biasCor_before
[13:05:43    INFO]  - starting ANNZ::doMetricPlots() ... 
[13:05:43    INFO]  - Will use (1) MLMs from the input chain: ANNZ_34,
[13:05:46    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_34/plots/
[13:05:53        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_34/plots output/SPEC_advanced24/regres/train/ANNZ_34/plots_biasCor_after
[13:05:53    INFO]  - Got original [KS-test,N_poiss]: [0.0871611 , 6.35068] , after the bias-correction: [0.045261 , 5.62581] --> will KEEP the correction !

(13:05 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(13:05 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m35[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(13:05 INFO) 
[13:05:55    INFO]  -----------------------------------------------------
[13:05:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[13:05:55    INFO]  -----------------------------------------------------------------------------------------------------------
[13:05:56    INFO]  - starting ANNZ::Init()  ... 
[13:05:57    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_35/saveOpt.txt ...
[13:06:02    INFO]  - starting ANNZ::Train_singleReg() ... 
[13:06:02    INFO] ----------------------------------------------------------------------------------------------------
[13:06:02    INFO]  - will book (ANNZ_35) method(KNN) with options: :nkNN=26:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P
[13:06:02    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[13:06:02    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[13:06:02    INFO]      cuts (train):        ,
[13:06:02    INFO]      cuts (valid):       
[13:06:02    INFO]    - weights:            1
[13:06:02    INFO] ----------------------------------------------------------------------------------------------------
[13:06:02    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[13:06:06    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_35/ANNZ_35_weights/saveTrainOpt_ANNZ_35.txt ...
[13:06:06    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_35 ... 
[13:06:06    INFO]  - Will gen. input-parameter errors ...
[13:06:07    INFO]  - starting ANNZ::loadReaders() ... 
[13:06:11    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[13:11:01    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:11:01    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[13:11:01    INFO]  -----------------------------------------------------------------------------------------------------------
[13:11:01    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[13:12:13    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:12:13    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[13:12:13    INFO]  -----------------------------------------------------------------------------------------------------------
[13:12:14    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_35/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[13:12:14    INFO]  - ending makeTreeRegClsOneMLM() ... 
[13:12:14    INFO]  - will try to derive a bias correction ... 
[13:12:14    INFO]  - will validate that training produced an XML file for later ... 
[13:12:14    INFO]  - starting ANNZ::loadReaders() ... 
[13:12:14    INFO]  - will validate that the training was not a complete failure ... 
[13:12:14    INFO]  - training seems to have been successful! will move on ...
[13:12:14    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[13:12:19    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[13:12:20    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[13:12:20    INFO] ----------------------------------------------------------------------------------------------------
[13:12:20    INFO]  - will book (ANNZ_35_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[13:12:20    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[13:12:20    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[13:12:20    INFO]    - weights:            1
[13:12:20    INFO] ----------------------------------------------------------------------------------------------------
[13:12:21    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[13:12:24    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_35 ... 
[13:12:24    INFO]  - Will gen. input-parameter errors ...
[13:12:25    INFO]  - starting ANNZ::loadReaders() ... 
[13:12:40    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[13:37:18    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:37:18    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[13:37:18    INFO]  -----------------------------------------------------------------------------------------------------------
[13:37:18    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[13:43:29    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:43:29    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[13:43:29    INFO]  -----------------------------------------------------------------------------------------------------------
[13:43:29    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_35/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[13:43:29    INFO]  - ending makeTreeRegClsOneMLM() ... 
[13:43:29    INFO]  - will validate that the bias-correction actually improved the result ...
[13:43:29    INFO]  - starting ANNZ::doMetricPlots() ... 
[13:43:29    INFO]  - Will use (1) MLMs from the input chain: ANNZ_35,
Warning in <Fit>: Fit data is empty 
[13:43:32    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_35/plots/
[13:43:38        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_35/plots output/SPEC_advanced24/regres/train/ANNZ_35/plots_biasCor_before
[13:43:38    INFO]  - starting ANNZ::doMetricPlots() ... 
[13:43:38    INFO]  - Will use (1) MLMs from the input chain: ANNZ_35,
[13:43:41    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_35/plots/
[13:43:47        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_35/plots output/SPEC_advanced24/regres/train/ANNZ_35/plots_biasCor_after
[13:43:47    INFO]  - Got original [KS-test,N_poiss]: [0.63057 , 20.1588] , after the bias-correction: [0.0459532 , 5.89064] --> will KEEP the correction !

(13:43 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(13:43 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m36[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=430:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(13:43 INFO) 
[13:43:49    INFO]  -----------------------------------------------------
[13:43:49    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[13:43:49    INFO]  -----------------------------------------------------------------------------------------------------------
[13:43:50    INFO]  - starting ANNZ::Init()  ... 
[13:43:54    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_36/saveOpt.txt ...
[13:43:59    INFO]  - starting ANNZ::Train_singleReg() ... 
[13:43:59    INFO] ----------------------------------------------------------------------------------------------------
[13:43:59    INFO]  - will book (ANNZ_36) method(BDT) with options: :NTrees=430:BoostType=Bagging:VarTransform=N
[13:43:59    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[13:43:59    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[13:43:59    INFO]      cuts (train):        ,
[13:43:59    INFO]      cuts (valid):       
[13:43:59    INFO]    - weights:            1
[13:43:59    INFO] ----------------------------------------------------------------------------------------------------
[13:43:59    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[13:44:31    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_36/ANNZ_36_weights/saveTrainOpt_ANNZ_36.txt ...
[13:44:33    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_36 ... 
[13:44:33    INFO]  - Will gen. input-parameter errors ...
[13:44:35    INFO]  - starting ANNZ::loadReaders() ... 
[13:44:43    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[13:46:25    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:46:25    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[13:46:25    INFO]  -----------------------------------------------------------------------------------------------------------
[13:46:25    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[13:46:51    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:46:51    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[13:46:51    INFO]  -----------------------------------------------------------------------------------------------------------
[13:46:51    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_36/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[13:46:52    INFO]  - ending makeTreeRegClsOneMLM() ... 
[13:46:52    INFO]  - will try to derive a bias correction ... 
[13:46:52    INFO]  - will validate that training produced an XML file for later ... 
[13:46:52    INFO]  - starting ANNZ::loadReaders() ... 
[13:46:56    INFO]  - will validate that the training was not a complete failure ... 
[13:46:56    INFO]  - training seems to have been successful! will move on ...
[13:46:56    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[13:46:59    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[13:47:00    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[13:47:00    INFO] ----------------------------------------------------------------------------------------------------
[13:47:00    INFO]  - will book (ANNZ_36_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[13:47:00    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[13:47:00    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[13:47:00    INFO]    - weights:            1
[13:47:00    INFO] ----------------------------------------------------------------------------------------------------
[13:47:01    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[13:47:06    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_36 ... 
[13:47:06    INFO]  - Will gen. input-parameter errors ...
[13:47:08    INFO]  - starting ANNZ::loadReaders() ... 
[13:47:15    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[13:48:51    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:48:51    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[13:48:51    INFO]  -----------------------------------------------------------------------------------------------------------
[13:48:51    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[13:49:15    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:49:15    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[13:49:15    INFO]  -----------------------------------------------------------------------------------------------------------
[13:49:15    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_36/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[13:49:17    INFO]  - ending makeTreeRegClsOneMLM() ... 
[13:49:17    INFO]  - will validate that the bias-correction actually improved the result ...
[13:49:17    INFO]  - starting ANNZ::doMetricPlots() ... 
[13:49:17    INFO]  - Will use (1) MLMs from the input chain: ANNZ_36,
[13:49:20    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_36/plots/
[13:49:27        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_36/plots output/SPEC_advanced24/regres/train/ANNZ_36/plots_biasCor_before
[13:49:27    INFO]  - starting ANNZ::doMetricPlots() ... 
[13:49:27    INFO]  - Will use (1) MLMs from the input chain: ANNZ_36,
[13:49:29    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_36/plots/
[13:49:36        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_36/plots output/SPEC_advanced24/regres/train/ANNZ_36/plots_biasCor_after
[13:49:36    INFO]  - Got original [KS-test,N_poiss]: [0.0820076 , 6.86831] , after the bias-correction: [0.0479499 , 5.96151] --> will KEEP the correction !

(13:49 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(13:49 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m37[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=6:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(13:49 INFO) 
[13:49:38    INFO]  -----------------------------------------------------
[13:49:38    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[13:49:38    INFO]  -----------------------------------------------------------------------------------------------------------
[13:49:39    INFO]  - starting ANNZ::Init()  ... 
[13:49:40    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_37/saveOpt.txt ...
[13:49:45    INFO]  - starting ANNZ::Train_singleReg() ... 
[13:49:45    INFO] ----------------------------------------------------------------------------------------------------
[13:49:45    INFO]  - will book (ANNZ_37) method(KNN) with options: :nkNN=14:BalanceDepth=6:Kernel=Gaus
[13:49:45    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[13:49:45    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[13:49:45    INFO]      cuts (train):        ,
[13:49:45    INFO]      cuts (valid):       
[13:49:45    INFO]    - weights:            1
[13:49:45    INFO] ----------------------------------------------------------------------------------------------------
[13:49:45    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[13:49:48    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_37/ANNZ_37_weights/saveTrainOpt_ANNZ_37.txt ...
[13:49:48    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_37 ... 
[13:49:48    INFO]  - Will gen. input-parameter errors ...
[13:49:49    INFO]  - starting ANNZ::loadReaders() ... 
[13:49:52    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[13:52:52    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:52:52    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[13:52:52    INFO]  -----------------------------------------------------------------------------------------------------------
[13:52:52    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[13:53:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[13:53:38    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[13:53:38    INFO]  -----------------------------------------------------------------------------------------------------------
[13:53:38    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_37/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[13:53:38    INFO]  - ending makeTreeRegClsOneMLM() ... 
[13:53:38    INFO]  - will try to derive a bias correction ... 
[13:53:38    INFO]  - will validate that training produced an XML file for later ... 
[13:53:38    INFO]  - starting ANNZ::loadReaders() ... 
[13:53:38    INFO]  - will validate that the training was not a complete failure ... 
[13:53:38    INFO]  - training seems to have been successful! will move on ...
[13:53:38    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[13:53:40    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[13:53:41    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[13:53:41    INFO] ----------------------------------------------------------------------------------------------------
[13:53:41    INFO]  - will book (ANNZ_37_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[13:53:41    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[13:53:41    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[13:53:41    INFO]    - weights:            1
[13:53:41    INFO] ----------------------------------------------------------------------------------------------------
[13:53:42    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[13:53:45    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_37 ... 
[13:53:45    INFO]  - Will gen. input-parameter errors ...
[13:53:46    INFO]  - starting ANNZ::loadReaders() ... 
[13:53:56    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[14:08:50    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:08:50    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[14:08:50    INFO]  -----------------------------------------------------------------------------------------------------------
[14:08:50    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[14:12:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:12:35    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[14:12:35    INFO]  -----------------------------------------------------------------------------------------------------------
[14:12:35    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_37/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[14:12:36    INFO]  - ending makeTreeRegClsOneMLM() ... 
[14:12:36    INFO]  - will validate that the bias-correction actually improved the result ...
[14:12:36    INFO]  - starting ANNZ::doMetricPlots() ... 
[14:12:36    INFO]  - Will use (1) MLMs from the input chain: ANNZ_37,
[14:12:39    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_37/plots/
[14:12:45        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_37/plots output/SPEC_advanced24/regres/train/ANNZ_37/plots_biasCor_before
[14:12:45    INFO]  - starting ANNZ::doMetricPlots() ... 
[14:12:45    INFO]  - Will use (1) MLMs from the input chain: ANNZ_37,
Warning in <Fit>: Fit data is empty 
[14:12:48    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_37/plots/
[14:12:54        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_37/plots output/SPEC_advanced24/regres/train/ANNZ_37/plots_biasCor_after
[14:12:54    INFO]  - Got original [KS-test,N_poiss]: [0.108223 , 6.94703] , after the bias-correction: [0.0434685 , 5.85783] --> will KEEP the correction !

(14:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(14:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m38[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(14:12 INFO) 
[14:12:56    INFO]  -----------------------------------------------------
[14:12:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[14:12:56    INFO]  -----------------------------------------------------------------------------------------------------------
[14:12:56    INFO]  - starting ANNZ::Init()  ... 
[14:12:59    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_38/saveOpt.txt ...
[14:13:05    INFO]  - starting ANNZ::Train_singleReg() ... 
[14:13:05    INFO] ----------------------------------------------------------------------------------------------------
[14:13:05    INFO]  - will book (ANNZ_38) method(BDT) with options: :NTrees=390:BoostType=AdaBoostR2:VarTransform=N
[14:13:05    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[14:13:05    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[14:13:05    INFO]      cuts (train):        ,
[14:13:05    INFO]      cuts (valid):       
[14:13:05    INFO]    - weights:            1
[14:13:05    INFO] ----------------------------------------------------------------------------------------------------
[14:13:05    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[14:13:30    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_38/ANNZ_38_weights/saveTrainOpt_ANNZ_38.txt ...
[14:13:31    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_38 ... 
[14:13:31    INFO]  - Will gen. input-parameter errors ...
[14:13:33    INFO]  - starting ANNZ::loadReaders() ... 
[14:13:40    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[14:18:24    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:18:24    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[14:18:24    INFO]  -----------------------------------------------------------------------------------------------------------
[14:18:24    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[14:19:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:19:35    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[14:19:35    INFO]  -----------------------------------------------------------------------------------------------------------
[14:19:35    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_38/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[14:19:36    INFO]  - ending makeTreeRegClsOneMLM() ... 
[14:19:36    INFO]  - will try to derive a bias correction ... 
[14:19:36    INFO]  - will validate that training produced an XML file for later ... 
[14:19:36    INFO]  - starting ANNZ::loadReaders() ... 
[14:19:38    INFO]  - will validate that the training was not a complete failure ... 
[14:19:38    INFO]  - training seems to have been successful! will move on ...
[14:19:38    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[14:19:44    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[14:19:44    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[14:19:45    INFO] ----------------------------------------------------------------------------------------------------
[14:19:45    INFO]  - will book (ANNZ_38_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[14:19:45    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[14:19:45    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[14:19:45    INFO]    - weights:            1
[14:19:45    INFO] ----------------------------------------------------------------------------------------------------
[14:19:45    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[14:19:50    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_38 ... 
[14:19:50    INFO]  - Will gen. input-parameter errors ...
[14:19:51    INFO]  - starting ANNZ::loadReaders() ... 
[14:19:58    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[14:24:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:24:35    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[14:24:35    INFO]  -----------------------------------------------------------------------------------------------------------
[14:24:35    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[14:25:43    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:25:43    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[14:25:43    INFO]  -----------------------------------------------------------------------------------------------------------
[14:25:44    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_38/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[14:25:44    INFO]  - ending makeTreeRegClsOneMLM() ... 
[14:25:44    INFO]  - will validate that the bias-correction actually improved the result ...
[14:25:44    INFO]  - starting ANNZ::doMetricPlots() ... 
[14:25:44    INFO]  - Will use (1) MLMs from the input chain: ANNZ_38,
[14:25:48    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_38/plots/
[14:25:54        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_38/plots output/SPEC_advanced24/regres/train/ANNZ_38/plots_biasCor_before
[14:25:54    INFO]  - starting ANNZ::doMetricPlots() ... 
[14:25:54    INFO]  - Will use (1) MLMs from the input chain: ANNZ_38,
Warning in <Fit>: Fit data is empty 
[14:25:57    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_38/plots/
[14:26:03        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_38/plots output/SPEC_advanced24/regres/train/ANNZ_38/plots_biasCor_after
[14:26:03    INFO]  - Got original [KS-test,N_poiss]: [0.0662111 , 6.95507] , after the bias-correction: [0.038203 , 5.68277] --> will KEEP the correction !

(14:26 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(14:26 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m39[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(14:26 INFO) 
[14:26:05    INFO]  -----------------------------------------------------
[14:26:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[14:26:05    INFO]  -----------------------------------------------------------------------------------------------------------
[14:26:06    INFO]  - starting ANNZ::Init()  ... 
[14:26:09    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_39/saveOpt.txt ...
[14:26:14    INFO]  - starting ANNZ::Train_singleReg() ... 
[14:26:14    INFO] ----------------------------------------------------------------------------------------------------
[14:26:14    INFO]  - will book (ANNZ_39) method(KNN) with options: :nkNN=22:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P
[14:26:14    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[14:26:14    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[14:26:14    INFO]      cuts (train):        ,
[14:26:14    INFO]      cuts (valid):       
[14:26:14    INFO]    - weights:            1
[14:26:14    INFO] ----------------------------------------------------------------------------------------------------
[14:26:14    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[14:26:18    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_39/ANNZ_39_weights/saveTrainOpt_ANNZ_39.txt ...
[14:26:19    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_39 ... 
[14:26:19    INFO]  - Will gen. input-parameter errors ...
[14:26:20    INFO]  - starting ANNZ::loadReaders() ... 
[14:26:23    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[14:31:13    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:31:13    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[14:31:13    INFO]  -----------------------------------------------------------------------------------------------------------
[14:31:13    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[14:32:25    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:32:25    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[14:32:25    INFO]  -----------------------------------------------------------------------------------------------------------
[14:32:25    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_39/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[14:32:26    INFO]  - ending makeTreeRegClsOneMLM() ... 
[14:32:26    INFO]  - will try to derive a bias correction ... 
[14:32:26    INFO]  - will validate that training produced an XML file for later ... 
[14:32:26    INFO]  - starting ANNZ::loadReaders() ... 
[14:32:26    INFO]  - will validate that the training was not a complete failure ... 
[14:32:26    INFO]  - training seems to have been successful! will move on ...
[14:32:26    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[14:32:30    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[14:32:31    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[14:32:31    INFO] ----------------------------------------------------------------------------------------------------
[14:32:31    INFO]  - will book (ANNZ_39_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[14:32:31    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[14:32:31    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[14:32:31    INFO]    - weights:            1
[14:32:31    INFO] ----------------------------------------------------------------------------------------------------
[14:32:31    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[14:32:34    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_39 ... 
[14:32:34    INFO]  - Will gen. input-parameter errors ...
[14:32:36    INFO]  - starting ANNZ::loadReaders() ... 
[14:32:50    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[14:55:58    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[14:55:58    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[14:55:58    INFO]  -----------------------------------------------------------------------------------------------------------
[14:55:59    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:01:47    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:01:47    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:01:47    INFO]  -----------------------------------------------------------------------------------------------------------
[15:01:47    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_39/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:01:48    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:01:48    INFO]  - will validate that the bias-correction actually improved the result ...
[15:01:48    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:01:48    INFO]  - Will use (1) MLMs from the input chain: ANNZ_39,
Warning in <Fit>: Fit data is empty 
[15:01:51    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_39/plots/
[15:01:57        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_39/plots output/SPEC_advanced24/regres/train/ANNZ_39/plots_biasCor_before
[15:01:57    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:01:57    INFO]  - Will use (1) MLMs from the input chain: ANNZ_39,
[15:02:00    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_39/plots/
[15:02:06        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_39/plots output/SPEC_advanced24/regres/train/ANNZ_39/plots_biasCor_after
[15:02:06    INFO]  - Got original [KS-test,N_poiss]: [0.623705 , 19.5664] , after the bias-correction: [0.0417227 , 5.74051] --> will KEEP the correction !

(15:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m40[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:02 INFO) 
[15:02:08    INFO]  -----------------------------------------------------
[15:02:08    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:02:08    INFO]  -----------------------------------------------------------------------------------------------------------
[15:02:09    INFO]  - starting ANNZ::Init()  ... 
[15:02:12    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_40/saveOpt.txt ...
[15:02:17    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:02:18    INFO] ----------------------------------------------------------------------------------------------------
[15:02:18    INFO]  - will book (ANNZ_40) method(BDT) with options: :NTrees=340:BoostType=Bagging:VarTransform=N,P
[15:02:18    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:02:18    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:02:18    INFO]      cuts (train):        ,
[15:02:18    INFO]      cuts (valid):       
[15:02:18    INFO]    - weights:            1
[15:02:18    INFO] ----------------------------------------------------------------------------------------------------
[15:02:18    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:02:43    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_40/ANNZ_40_weights/saveTrainOpt_ANNZ_40.txt ...
[15:02:45    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_40 ... 
[15:02:45    INFO]  - Will gen. input-parameter errors ...
[15:02:47    INFO]  - starting ANNZ::loadReaders() ... 
[15:02:53    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:04:46    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:04:46    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:04:46    INFO]  -----------------------------------------------------------------------------------------------------------
[15:04:46    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:05:14    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:05:14    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:05:14    INFO]  -----------------------------------------------------------------------------------------------------------
[15:05:14    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_40/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:05:15    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:05:15    INFO]  - will try to derive a bias correction ... 
[15:05:15    INFO]  - will validate that training produced an XML file for later ... 
[15:05:15    INFO]  - starting ANNZ::loadReaders() ... 
[15:05:18    INFO]  - will validate that the training was not a complete failure ... 
[15:05:18    INFO]  - training seems to have been successful! will move on ...
[15:05:18    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[15:05:22    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:05:22    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:05:23    INFO] ----------------------------------------------------------------------------------------------------
[15:05:23    INFO]  - will book (ANNZ_40_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[15:05:23    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:05:23    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[15:05:23    INFO]    - weights:            1
[15:05:23    INFO] ----------------------------------------------------------------------------------------------------
[15:05:23    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:05:28    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_40 ... 
[15:05:28    INFO]  - Will gen. input-parameter errors ...
[15:05:30    INFO]  - starting ANNZ::loadReaders() ... 
[15:05:36    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:07:18    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:07:18    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:07:18    INFO]  -----------------------------------------------------------------------------------------------------------
[15:07:18    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:07:44    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:07:44    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:07:44    INFO]  -----------------------------------------------------------------------------------------------------------
[15:07:44    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_40/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:07:45    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:07:45    INFO]  - will validate that the bias-correction actually improved the result ...
[15:07:45    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:07:45    INFO]  - Will use (1) MLMs from the input chain: ANNZ_40,
[15:07:48    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_40/plots/
[15:07:55        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_40/plots output/SPEC_advanced24/regres/train/ANNZ_40/plots_biasCor_before
[15:07:55    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:07:55    INFO]  - Will use (1) MLMs from the input chain: ANNZ_40,
[15:07:58    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_40/plots/
[15:08:04        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_40/plots output/SPEC_advanced24/regres/train/ANNZ_40/plots_biasCor_after
[15:08:04    INFO]  - Got original [KS-test,N_poiss]: [0.0951154 , 6.81349] , after the bias-correction: [0.0454851 , 5.76756] --> will KEEP the correction !

(15:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m41[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:08 INFO) 
[15:08:07    INFO]  -----------------------------------------------------
[15:08:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:08:07    INFO]  -----------------------------------------------------------------------------------------------------------
[15:08:07    INFO]  - starting ANNZ::Init()  ... 
[15:08:09    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_41/saveOpt.txt ...
[15:08:14    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:08:14    INFO] ----------------------------------------------------------------------------------------------------
[15:08:14    INFO]  - will book (ANNZ_41) method(KNN) with options: :nkNN=10:BalanceDepth=5:Kernel=Gaus:VarTransform=N
[15:08:14    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:08:14    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:08:14    INFO]      cuts (train):        ,
[15:08:14    INFO]      cuts (valid):       
[15:08:14    INFO]    - weights:            1
[15:08:14    INFO] ----------------------------------------------------------------------------------------------------
[15:08:14    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(15:08 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(15:08 CRITICAL) [41;37;1mWill terminate !!!![0m
(15:12 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(15:12 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(15:12 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(15:12 INFO) [40;37;1m - 04/04/19 15:12:11 - starting ANNZ[0m
(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=510:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:11    INFO]  -----------------------------------------------------
[15:12:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:11    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:12    INFO]  - starting ANNZ::Init()  ... 
[15:12:12    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[15:12:12    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:12    INFO]  -----------------------------------------------------
[15:12:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:12    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:13    INFO]  - starting ANNZ::Init()  ... 
[15:12:13    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[15:12:13    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=530:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:13    INFO]  -----------------------------------------------------
[15:12:13    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:13    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:14    INFO]  - starting ANNZ::Init()  ... 
[15:12:14    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[15:12:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:14    INFO]  -----------------------------------------------------
[15:12:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:14    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:15    INFO]  - starting ANNZ::Init()  ... 
[15:12:15    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[15:12:15    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:15    INFO]  -----------------------------------------------------
[15:12:15    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:15    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:16    INFO]  - starting ANNZ::Init()  ... 
[15:12:16    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[15:12:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:16    INFO]  -----------------------------------------------------
[15:12:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:16    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:17    INFO]  - starting ANNZ::Init()  ... 
[15:12:17    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[15:12:17    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=280:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:17    INFO]  -----------------------------------------------------
[15:12:17    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:17    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:18    INFO]  - starting ANNZ::Init()  ... 
[15:12:18    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[15:12:18    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:19    INFO]  -----------------------------------------------------
[15:12:19    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:19    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:19    INFO]  - starting ANNZ::Init()  ... 
[15:12:19    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[15:12:19    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:19    INFO]  -----------------------------------------------------
[15:12:19    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:19    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:20    INFO]  - starting ANNZ::Init()  ... 
[15:12:20    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[15:12:20    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:21    INFO]  -----------------------------------------------------
[15:12:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:21    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:21    INFO]  - starting ANNZ::Init()  ... 
[15:12:21    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[15:12:21    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:21    INFO]  -----------------------------------------------------
[15:12:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:21    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:22    INFO]  - starting ANNZ::Init()  ... 
[15:12:22    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[15:12:22    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:22    INFO]  -----------------------------------------------------
[15:12:22    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:22    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:23    INFO]  - starting ANNZ::Init()  ... 
[15:12:23    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[15:12:23    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1050:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:23    INFO]  -----------------------------------------------------
[15:12:23    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:23    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:24    INFO]  - starting ANNZ::Init()  ... 
[15:12:24    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[15:12:24    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:24    INFO]  -----------------------------------------------------
[15:12:24    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:24    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:25    INFO]  - starting ANNZ::Init()  ... 
[15:12:25    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[15:12:25    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=440:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:25    INFO]  -----------------------------------------------------
[15:12:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:25    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:25    INFO]  - starting ANNZ::Init()  ... 
[15:12:26    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[15:12:26    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:26    INFO]  -----------------------------------------------------
[15:12:26    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:26    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:26    INFO]  - starting ANNZ::Init()  ... 
[15:12:26    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[15:12:26    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=880:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:26    INFO]  -----------------------------------------------------
[15:12:26    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:26    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:27    INFO]  - starting ANNZ::Init()  ... 
[15:12:27    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[15:12:27    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:27    INFO]  -----------------------------------------------------
[15:12:27    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:27    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:28    INFO]  - starting ANNZ::Init()  ... 
[15:12:28    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[15:12:28    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=380:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:28    INFO]  -----------------------------------------------------
[15:12:28    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:28    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:29    INFO]  - starting ANNZ::Init()  ... 
[15:12:29    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[15:12:29    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=8:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:29    INFO]  -----------------------------------------------------
[15:12:29    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:29    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:30    INFO]  - starting ANNZ::Init()  ... 
[15:12:30    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[15:12:30    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=470:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:30    INFO]  -----------------------------------------------------
[15:12:30    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:30    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:31    INFO]  - starting ANNZ::Init()  ... 
[15:12:31    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[15:12:31    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:31    INFO]  -----------------------------------------------------
[15:12:31    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:31    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:32    INFO]  - starting ANNZ::Init()  ... 
[15:12:32    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[15:12:32    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:32    INFO]  -----------------------------------------------------
[15:12:32    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:32    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:33    INFO]  - starting ANNZ::Init()  ... 
[15:12:33    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[15:12:33    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:34    INFO]  -----------------------------------------------------
[15:12:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:34    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:34    INFO]  - starting ANNZ::Init()  ... 
[15:12:34    INFO]  - found trained "ANNZ_23" (./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/randomReg_ANNZ_23.weights.xml)
[15:12:34    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=760:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:34    INFO]  -----------------------------------------------------
[15:12:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:34    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:35    INFO]  - starting ANNZ::Init()  ... 
[15:12:35    INFO]  - found trained "ANNZ_24" (./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/randomReg_ANNZ_24.weights.xml)
[15:12:35    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:35    INFO]  -----------------------------------------------------
[15:12:35    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:35    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:36    INFO]  - starting ANNZ::Init()  ... 
[15:12:36    INFO]  - found trained "ANNZ_25" (./output/SPEC_advanced24/regres/train/ANNZ_25/ANNZ_25_weights/randomReg_ANNZ_25.weights.xml)
[15:12:36    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m26[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=300:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:36    INFO]  -----------------------------------------------------
[15:12:36    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:36    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:36    INFO]  - starting ANNZ::Init()  ... 
[15:12:37    INFO]  - found trained "ANNZ_26" (./output/SPEC_advanced24/regres/train/ANNZ_26/ANNZ_26_weights/randomReg_ANNZ_26.weights.xml)
[15:12:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m27[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:37    INFO]  -----------------------------------------------------
[15:12:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:37    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:37    INFO]  - starting ANNZ::Init()  ... 
[15:12:37    INFO]  - found trained "ANNZ_27" (./output/SPEC_advanced24/regres/train/ANNZ_27/ANNZ_27_weights/randomReg_ANNZ_27.weights.xml)
[15:12:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m28[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:37    INFO]  -----------------------------------------------------
[15:12:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:37    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:38    INFO]  - starting ANNZ::Init()  ... 
[15:12:39    INFO]  - found trained "ANNZ_28" (./output/SPEC_advanced24/regres/train/ANNZ_28/ANNZ_28_weights/randomReg_ANNZ_28.weights.xml)
[15:12:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m29[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=4:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:39    INFO]  -----------------------------------------------------
[15:12:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:39    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:39    INFO]  - starting ANNZ::Init()  ... 
[15:12:39    INFO]  - found trained "ANNZ_29" (./output/SPEC_advanced24/regres/train/ANNZ_29/ANNZ_29_weights/randomReg_ANNZ_29.weights.xml)
[15:12:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m30[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:39    INFO]  -----------------------------------------------------
[15:12:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:39    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:40    INFO]  - starting ANNZ::Init()  ... 
[15:12:40    INFO]  - found trained "ANNZ_30" (./output/SPEC_advanced24/regres/train/ANNZ_30/ANNZ_30_weights/randomReg_ANNZ_30.weights.xml)
[15:12:40    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m31[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:40    INFO]  -----------------------------------------------------
[15:12:40    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:40    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:41    INFO]  - starting ANNZ::Init()  ... 
[15:12:41    INFO]  - found trained "ANNZ_31" (./output/SPEC_advanced24/regres/train/ANNZ_31/ANNZ_31_weights/randomReg_ANNZ_31.weights.xml)
[15:12:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m32[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=730:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:41    INFO]  -----------------------------------------------------
[15:12:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:41    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:42    INFO]  - starting ANNZ::Init()  ... 
[15:12:42    INFO]  - found trained "ANNZ_32" (./output/SPEC_advanced24/regres/train/ANNZ_32/ANNZ_32_weights/randomReg_ANNZ_32.weights.xml)
[15:12:42    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m33[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:42    INFO]  -----------------------------------------------------
[15:12:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:42    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:43    INFO]  - starting ANNZ::Init()  ... 
[15:12:43    INFO]  - found trained "ANNZ_33" (./output/SPEC_advanced24/regres/train/ANNZ_33/ANNZ_33_weights/randomReg_ANNZ_33.weights.xml)
[15:12:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m34[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=330:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:43    INFO]  -----------------------------------------------------
[15:12:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:43    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:43    INFO]  - starting ANNZ::Init()  ... 
[15:12:44    INFO]  - found trained "ANNZ_34" (./output/SPEC_advanced24/regres/train/ANNZ_34/ANNZ_34_weights/randomReg_ANNZ_34.weights.xml)
[15:12:44    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m35[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:44    INFO]  -----------------------------------------------------
[15:12:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:44    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:44    INFO]  - starting ANNZ::Init()  ... 
[15:12:44    INFO]  - found trained "ANNZ_35" (./output/SPEC_advanced24/regres/train/ANNZ_35/ANNZ_35_weights/randomReg_ANNZ_35.weights.xml)
[15:12:44    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m36[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=790:BoostType=Bagging[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:44    INFO]  -----------------------------------------------------
[15:12:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:44    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:45    INFO]  - starting ANNZ::Init()  ... 
[15:12:46    INFO]  - found trained "ANNZ_36" (./output/SPEC_advanced24/regres/train/ANNZ_36/ANNZ_36_weights/randomReg_ANNZ_36.weights.xml)
[15:12:46    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m37[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:46    INFO]  -----------------------------------------------------
[15:12:46    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:46    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:46    INFO]  - starting ANNZ::Init()  ... 
[15:12:46    INFO]  - found trained "ANNZ_37" (./output/SPEC_advanced24/regres/train/ANNZ_37/ANNZ_37_weights/randomReg_ANNZ_37.weights.xml)
[15:12:46    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m38[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=440:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:46    INFO]  -----------------------------------------------------
[15:12:46    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:46    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:47    INFO]  - starting ANNZ::Init()  ... 
[15:12:47    INFO]  - found trained "ANNZ_38" (./output/SPEC_advanced24/regres/train/ANNZ_38/ANNZ_38_weights/randomReg_ANNZ_38.weights.xml)
[15:12:47    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m39[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:47    INFO]  -----------------------------------------------------
[15:12:47    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:47    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:48    INFO]  - starting ANNZ::Init()  ... 
[15:12:48    INFO]  - found trained "ANNZ_39" (./output/SPEC_advanced24/regres/train/ANNZ_39/ANNZ_39_weights/randomReg_ANNZ_39.weights.xml)
[15:12:48    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m40[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=380:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:48    INFO]  -----------------------------------------------------
[15:12:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:48    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:49    INFO]  - starting ANNZ::Init()  ... 
[15:12:49    INFO]  - found trained "ANNZ_40" (./output/SPEC_advanced24/regres/train/ANNZ_40/ANNZ_40_weights/randomReg_ANNZ_40.weights.xml)
[15:12:49    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:12 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:12 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m41[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:12 INFO) 
[15:12:49    INFO]  -----------------------------------------------------
[15:12:49    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:12:49    INFO]  -----------------------------------------------------------------------------------------------------------
[15:12:50    INFO]  - starting ANNZ::Init()  ... 
[15:12:51    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_41/saveOpt.txt ...
[15:12:56    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:12:56    INFO] ----------------------------------------------------------------------------------------------------
[15:12:56    INFO]  - will book (ANNZ_41) method(KNN) with options: :nkNN=21:BalanceDepth=8:Kernel=Gaus:VarTransform=N
[15:12:56    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:12:56    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:12:56    INFO]      cuts (train):        ,
[15:12:56    INFO]      cuts (valid):       
[15:12:56    INFO]    - weights:            1
[15:12:56    INFO] ----------------------------------------------------------------------------------------------------
[15:12:56    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(15:12 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(15:12 CRITICAL) [41;37;1mWill terminate !!!![0m
(15:15 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(15:15 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(15:15 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(15:15 INFO) [40;37;1m - 04/04/19 15:15:30 - starting ANNZ[0m
(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=430:BoostType=AdaBoost:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:30    INFO]  -----------------------------------------------------
[15:15:30    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:30    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:30    INFO]  - starting ANNZ::Init()  ... 
[15:15:31    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[15:15:31    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:31    INFO]  -----------------------------------------------------
[15:15:31    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:31    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:32    INFO]  - starting ANNZ::Init()  ... 
[15:15:32    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[15:15:32    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:32    INFO]  -----------------------------------------------------
[15:15:32    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:32    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:32    INFO]  - starting ANNZ::Init()  ... 
[15:15:32    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[15:15:32    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:32    INFO]  -----------------------------------------------------
[15:15:32    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:32    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:33    INFO]  - starting ANNZ::Init()  ... 
[15:15:33    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[15:15:33    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=540:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:33    INFO]  -----------------------------------------------------
[15:15:33    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:33    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:34    INFO]  - starting ANNZ::Init()  ... 
[15:15:34    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[15:15:34    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:34    INFO]  -----------------------------------------------------
[15:15:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:34    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:35    INFO]  - starting ANNZ::Init()  ... 
[15:15:35    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[15:15:35    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=360:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:35    INFO]  -----------------------------------------------------
[15:15:35    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:35    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:36    INFO]  - starting ANNZ::Init()  ... 
[15:15:36    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[15:15:36    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:36    INFO]  -----------------------------------------------------
[15:15:36    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:36    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:37    INFO]  - starting ANNZ::Init()  ... 
[15:15:37    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[15:15:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:37    INFO]  -----------------------------------------------------
[15:15:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:37    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:38    INFO]  - starting ANNZ::Init()  ... 
[15:15:38    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[15:15:38    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:38    INFO]  -----------------------------------------------------
[15:15:38    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:38    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:39    INFO]  - starting ANNZ::Init()  ... 
[15:15:39    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[15:15:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:39    INFO]  -----------------------------------------------------
[15:15:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:39    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:40    INFO]  - starting ANNZ::Init()  ... 
[15:15:40    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[15:15:40    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:40    INFO]  -----------------------------------------------------
[15:15:40    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:40    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:41    INFO]  - starting ANNZ::Init()  ... 
[15:15:41    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[15:15:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=370:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:41    INFO]  -----------------------------------------------------
[15:15:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:41    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:41    INFO]  - starting ANNZ::Init()  ... 
[15:15:41    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[15:15:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:41    INFO]  -----------------------------------------------------
[15:15:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:41    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:42    INFO]  - starting ANNZ::Init()  ... 
[15:15:42    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[15:15:42    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=440:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:42    INFO]  -----------------------------------------------------
[15:15:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:42    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:43    INFO]  - starting ANNZ::Init()  ... 
[15:15:43    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[15:15:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:43    INFO]  -----------------------------------------------------
[15:15:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:43    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:44    INFO]  - starting ANNZ::Init()  ... 
[15:15:44    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[15:15:44    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=320:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:44    INFO]  -----------------------------------------------------
[15:15:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:44    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:44    INFO]  - starting ANNZ::Init()  ... 
[15:15:45    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[15:15:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:45    INFO]  -----------------------------------------------------
[15:15:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:45    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:45    INFO]  - starting ANNZ::Init()  ... 
[15:15:45    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[15:15:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=280:BoostType=Bagging[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:45    INFO]  -----------------------------------------------------
[15:15:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:45    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:46    INFO]  - starting ANNZ::Init()  ... 
[15:15:46    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[15:15:46    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:46    INFO]  -----------------------------------------------------
[15:15:46    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:46    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:47    INFO]  - starting ANNZ::Init()  ... 
[15:15:47    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[15:15:47    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=250:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:47    INFO]  -----------------------------------------------------
[15:15:47    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:47    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:48    INFO]  - starting ANNZ::Init()  ... 
[15:15:48    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[15:15:48    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:48    INFO]  -----------------------------------------------------
[15:15:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:48    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:49    INFO]  - starting ANNZ::Init()  ... 
[15:15:49    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[15:15:49    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:49    INFO]  -----------------------------------------------------
[15:15:49    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:49    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:50    INFO]  - starting ANNZ::Init()  ... 
[15:15:50    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[15:15:50    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:50    INFO]  -----------------------------------------------------
[15:15:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:50    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:51    INFO]  - starting ANNZ::Init()  ... 
[15:15:51    INFO]  - found trained "ANNZ_23" (./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/randomReg_ANNZ_23.weights.xml)
[15:15:51    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=370:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:51    INFO]  -----------------------------------------------------
[15:15:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:51    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:52    INFO]  - starting ANNZ::Init()  ... 
[15:15:52    INFO]  - found trained "ANNZ_24" (./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/randomReg_ANNZ_24.weights.xml)
[15:15:52    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:52    INFO]  -----------------------------------------------------
[15:15:52    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:52    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:53    INFO]  - starting ANNZ::Init()  ... 
[15:15:53    INFO]  - found trained "ANNZ_25" (./output/SPEC_advanced24/regres/train/ANNZ_25/ANNZ_25_weights/randomReg_ANNZ_25.weights.xml)
[15:15:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m26[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=Bagging:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:53    INFO]  -----------------------------------------------------
[15:15:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:53    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:53    INFO]  - starting ANNZ::Init()  ... 
[15:15:54    INFO]  - found trained "ANNZ_26" (./output/SPEC_advanced24/regres/train/ANNZ_26/ANNZ_26_weights/randomReg_ANNZ_26.weights.xml)
[15:15:54    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m27[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:54    INFO]  -----------------------------------------------------
[15:15:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:54    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:54    INFO]  - starting ANNZ::Init()  ... 
[15:15:54    INFO]  - found trained "ANNZ_27" (./output/SPEC_advanced24/regres/train/ANNZ_27/ANNZ_27_weights/randomReg_ANNZ_27.weights.xml)
[15:15:54    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m28[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=440:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:54    INFO]  -----------------------------------------------------
[15:15:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:54    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:55    INFO]  - starting ANNZ::Init()  ... 
[15:15:55    INFO]  - found trained "ANNZ_28" (./output/SPEC_advanced24/regres/train/ANNZ_28/ANNZ_28_weights/randomReg_ANNZ_28.weights.xml)
[15:15:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m29[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:56    INFO]  -----------------------------------------------------
[15:15:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:56    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:56    INFO]  - starting ANNZ::Init()  ... 
[15:15:56    INFO]  - found trained "ANNZ_29" (./output/SPEC_advanced24/regres/train/ANNZ_29/ANNZ_29_weights/randomReg_ANNZ_29.weights.xml)
[15:15:56    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m30[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:56    INFO]  -----------------------------------------------------
[15:15:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:56    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:57    INFO]  - starting ANNZ::Init()  ... 
[15:15:57    INFO]  - found trained "ANNZ_30" (./output/SPEC_advanced24/regres/train/ANNZ_30/ANNZ_30_weights/randomReg_ANNZ_30.weights.xml)
[15:15:57    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m31[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:57    INFO]  -----------------------------------------------------
[15:15:57    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:57    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:58    INFO]  - starting ANNZ::Init()  ... 
[15:15:58    INFO]  - found trained "ANNZ_31" (./output/SPEC_advanced24/regres/train/ANNZ_31/ANNZ_31_weights/randomReg_ANNZ_31.weights.xml)
[15:15:58    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m32[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:58    INFO]  -----------------------------------------------------
[15:15:58    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:58    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:58    INFO]  - starting ANNZ::Init()  ... 
[15:15:59    INFO]  - found trained "ANNZ_32" (./output/SPEC_advanced24/regres/train/ANNZ_32/ANNZ_32_weights/randomReg_ANNZ_32.weights.xml)
[15:15:59    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m33[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:15:59    INFO]  -----------------------------------------------------
[15:15:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:15:59    INFO]  -----------------------------------------------------------------------------------------------------------
[15:15:59    INFO]  - starting ANNZ::Init()  ... 
[15:15:59    INFO]  - found trained "ANNZ_33" (./output/SPEC_advanced24/regres/train/ANNZ_33/ANNZ_33_weights/randomReg_ANNZ_33.weights.xml)
[15:15:59    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:15 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:15 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m34[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:15 INFO) 
[15:16:00    INFO]  -----------------------------------------------------
[15:16:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:16:00    INFO]  -----------------------------------------------------------------------------------------------------------
[15:16:00    INFO]  - starting ANNZ::Init()  ... 
[15:16:00    INFO]  - found trained "ANNZ_34" (./output/SPEC_advanced24/regres/train/ANNZ_34/ANNZ_34_weights/randomReg_ANNZ_34.weights.xml)
[15:16:00    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:16 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:16 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m35[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:16 INFO) 
[15:16:01    INFO]  -----------------------------------------------------
[15:16:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:16:01    INFO]  -----------------------------------------------------------------------------------------------------------
[15:16:01    INFO]  - starting ANNZ::Init()  ... 
[15:16:01    INFO]  - found trained "ANNZ_35" (./output/SPEC_advanced24/regres/train/ANNZ_35/ANNZ_35_weights/randomReg_ANNZ_35.weights.xml)
[15:16:01    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:16 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:16 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m36[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=410:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:16 INFO) 
[15:16:01    INFO]  -----------------------------------------------------
[15:16:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:16:01    INFO]  -----------------------------------------------------------------------------------------------------------
[15:16:02    INFO]  - starting ANNZ::Init()  ... 
[15:16:02    INFO]  - found trained "ANNZ_36" (./output/SPEC_advanced24/regres/train/ANNZ_36/ANNZ_36_weights/randomReg_ANNZ_36.weights.xml)
[15:16:02    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:16 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:16 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m37[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:16 INFO) 
[15:16:03    INFO]  -----------------------------------------------------
[15:16:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:16:03    INFO]  -----------------------------------------------------------------------------------------------------------
[15:16:03    INFO]  - starting ANNZ::Init()  ... 
[15:16:03    INFO]  - found trained "ANNZ_37" (./output/SPEC_advanced24/regres/train/ANNZ_37/ANNZ_37_weights/randomReg_ANNZ_37.weights.xml)
[15:16:03    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:16 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:16 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m38[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=320:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:16 INFO) 
[15:16:03    INFO]  -----------------------------------------------------
[15:16:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:16:03    INFO]  -----------------------------------------------------------------------------------------------------------
[15:16:04    INFO]  - starting ANNZ::Init()  ... 
[15:16:04    INFO]  - found trained "ANNZ_38" (./output/SPEC_advanced24/regres/train/ANNZ_38/ANNZ_38_weights/randomReg_ANNZ_38.weights.xml)
[15:16:04    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:16 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:16 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m39[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:16 INFO) 
[15:16:04    INFO]  -----------------------------------------------------
[15:16:04    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:16:04    INFO]  -----------------------------------------------------------------------------------------------------------
[15:16:05    INFO]  - starting ANNZ::Init()  ... 
[15:16:05    INFO]  - found trained "ANNZ_39" (./output/SPEC_advanced24/regres/train/ANNZ_39/ANNZ_39_weights/randomReg_ANNZ_39.weights.xml)
[15:16:05    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:16 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:16 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m40[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=360:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:16 INFO) 
[15:16:05    INFO]  -----------------------------------------------------
[15:16:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:16:05    INFO]  -----------------------------------------------------------------------------------------------------------
[15:16:05    INFO]  - starting ANNZ::Init()  ... 
[15:16:06    INFO]  - found trained "ANNZ_40" (./output/SPEC_advanced24/regres/train/ANNZ_40/ANNZ_40_weights/randomReg_ANNZ_40.weights.xml)
[15:16:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(15:16 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:16 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m41[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:16 INFO) 
[15:16:06    INFO]  -----------------------------------------------------
[15:16:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:16:06    INFO]  -----------------------------------------------------------------------------------------------------------
[15:16:07    INFO]  - starting ANNZ::Init()  ... 
[15:16:08    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_41/saveOpt.txt ...
[15:16:13    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:16:13    INFO] ----------------------------------------------------------------------------------------------------
[15:16:13    INFO]  - will book (ANNZ_41) method(KNN) with options: :nkNN=19:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P
[15:16:13    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:16:13    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:16:13    INFO]      cuts (train):        ,
[15:16:13    INFO]      cuts (valid):       
[15:16:13    INFO]    - weights:            1
[15:16:13    INFO] ----------------------------------------------------------------------------------------------------
[15:16:13    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:16:17    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_41/ANNZ_41_weights/saveTrainOpt_ANNZ_41.txt ...
[15:16:17    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_41 ... 
[15:16:17    INFO]  - Will gen. input-parameter errors ...
[15:16:18    INFO]  - starting ANNZ::loadReaders() ... 
[15:16:22    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:21:11    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:21:11    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:21:11    INFO]  -----------------------------------------------------------------------------------------------------------
[15:21:11    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:22:24    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:22:24    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:22:24    INFO]  -----------------------------------------------------------------------------------------------------------
[15:22:24    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_41/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:22:24    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:22:24    INFO]  - will try to derive a bias correction ... 
[15:22:24    INFO]  - will validate that training produced an XML file for later ... 
[15:22:24    INFO]  - starting ANNZ::loadReaders() ... 
[15:22:24    INFO]  - will validate that the training was not a complete failure ... 
[15:22:24    INFO]  - training seems to have been successful! will move on ...
[15:22:24    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[15:22:29    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:22:29    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:22:30    INFO] ----------------------------------------------------------------------------------------------------
[15:22:30    INFO]  - will book (ANNZ_41_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[15:22:30    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:22:30    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[15:22:30    INFO]    - weights:            1
[15:22:30    INFO] ----------------------------------------------------------------------------------------------------
[15:22:30    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:22:33    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_41 ... 
[15:22:33    INFO]  - Will gen. input-parameter errors ...
[15:22:34    INFO]  - starting ANNZ::loadReaders() ... 
[15:22:48    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:45:52    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:45:52    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:45:52    INFO]  -----------------------------------------------------------------------------------------------------------
[15:45:52    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:51:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:51:38    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:51:38    INFO]  -----------------------------------------------------------------------------------------------------------
[15:51:38    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_41/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:51:38    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:51:38    INFO]  - will validate that the bias-correction actually improved the result ...
[15:51:38    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:51:38    INFO]  - Will use (1) MLMs from the input chain: ANNZ_41,
Warning in <Fit>: Fit data is empty 
[15:51:41    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_41/plots/
[15:51:47        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_41/plots output/SPEC_advanced24/regres/train/ANNZ_41/plots_biasCor_before
[15:51:47    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:51:47    INFO]  - Will use (1) MLMs from the input chain: ANNZ_41,
[15:51:50    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_41/plots/
[15:51:56        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_41/plots output/SPEC_advanced24/regres/train/ANNZ_41/plots_biasCor_after
[15:51:56    INFO]  - Got original [KS-test,N_poiss]: [0.612886 , 19.338] , after the bias-correction: [0.0416263 , 5.89534] --> will KEEP the correction !

(15:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m42[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:51 INFO) 
[15:51:58    INFO]  -----------------------------------------------------
[15:51:58    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:51:58    INFO]  -----------------------------------------------------------------------------------------------------------
[15:51:59    INFO]  - starting ANNZ::Init()  ... 
[15:52:03    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_42/saveOpt.txt ...
[15:52:08    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:52:08    INFO] ----------------------------------------------------------------------------------------------------
[15:52:08    INFO]  - will book (ANNZ_42) method(BDT) with options: :NTrees=500:BoostType=AdaBoost:VarTransform=N
[15:52:08    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:52:08    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:52:08    INFO]      cuts (train):        ,
[15:52:08    INFO]      cuts (valid):       
[15:52:08    INFO]    - weights:            1
[15:52:08    INFO] ----------------------------------------------------------------------------------------------------
[15:52:08    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:52:30    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_42/ANNZ_42_weights/saveTrainOpt_ANNZ_42.txt ...
[15:52:32    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_42 ... 
[15:52:32    INFO]  - Will gen. input-parameter errors ...
[15:52:34    INFO]  - starting ANNZ::loadReaders() ... 
[15:52:38    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:53:55    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:53:55    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:53:55    INFO]  -----------------------------------------------------------------------------------------------------------
[15:53:55    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:54:15    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:54:15    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:54:15    INFO]  -----------------------------------------------------------------------------------------------------------
[15:54:15    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_42/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:54:15    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:54:15    INFO]  - will try to derive a bias correction ... 
[15:54:15    INFO]  - will validate that training produced an XML file for later ... 
[15:54:15    INFO]  - starting ANNZ::loadReaders() ... 
[15:54:17    INFO]  - will validate that the training was not a complete failure ... 
[15:54:17    INFO]  - training seems to have been successful! will move on ...
[15:54:17    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[15:54:20    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:54:21    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[15:54:21    INFO] ----------------------------------------------------------------------------------------------------
[15:54:21    INFO]  - will book (ANNZ_42_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[15:54:21    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:54:21    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[15:54:21    INFO]    - weights:            1
[15:54:21    INFO] ----------------------------------------------------------------------------------------------------
[15:54:21    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[15:54:26    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_42 ... 
[15:54:26    INFO]  - Will gen. input-parameter errors ...
[15:54:28    INFO]  - starting ANNZ::loadReaders() ... 
[15:54:31    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[15:55:47    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:55:47    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[15:55:47    INFO]  -----------------------------------------------------------------------------------------------------------
[15:55:47    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[15:56:06    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[15:56:06    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[15:56:06    INFO]  -----------------------------------------------------------------------------------------------------------
[15:56:06    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_42/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[15:56:07    INFO]  - ending makeTreeRegClsOneMLM() ... 
[15:56:07    INFO]  - will validate that the bias-correction actually improved the result ...
[15:56:07    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:56:07    INFO]  - Will use (1) MLMs from the input chain: ANNZ_42,
Warning in <Fit>: Fit data is empty 
[15:56:10    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_42/plots/
[15:56:16        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_42/plots output/SPEC_advanced24/regres/train/ANNZ_42/plots_biasCor_before
[15:56:16    INFO]  - starting ANNZ::doMetricPlots() ... 
[15:56:16    INFO]  - Will use (1) MLMs from the input chain: ANNZ_42,
Warning in <Fit>: Fit data is empty 
[15:56:19    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_42/plots/
[15:56:25        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_42/plots output/SPEC_advanced24/regres/train/ANNZ_42/plots_biasCor_after
[15:56:25    INFO]  - Got original [KS-test,N_poiss]: [0.0829039 , 6.33868] , after the bias-correction: [0.0490701 , 5.86221] --> will KEEP the correction !

(15:56 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:56 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m43[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:56 INFO) 
[15:56:27    INFO]  -----------------------------------------------------
[15:56:27    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[15:56:27    INFO]  -----------------------------------------------------------------------------------------------------------
[15:56:28    INFO]  - starting ANNZ::Init()  ... 
[15:56:29    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_43/saveOpt.txt ...
[15:56:34    INFO]  - starting ANNZ::Train_singleReg() ... 
[15:56:34    INFO] ----------------------------------------------------------------------------------------------------
[15:56:34    INFO]  - will book (ANNZ_43) method(KNN) with options: :nkNN=10:BalanceDepth=8:Kernel=Gaus:VarTransform=N
[15:56:34    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[15:56:34    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[15:56:34    INFO]      cuts (train):        ,
[15:56:34    INFO]      cuts (valid):       
[15:56:34    INFO]    - weights:            1
[15:56:34    INFO] ----------------------------------------------------------------------------------------------------
[15:56:34    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(15:56 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(15:56 CRITICAL) [41;37;1mWill terminate !!!![0m
(16:02 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(16:02 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(16:02 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(16:02 INFO) [40;37;1m - 04/04/19 16:02:05 - starting ANNZ[0m
(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=300:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:05    INFO]  -----------------------------------------------------
[16:02:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:05    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:06    INFO]  - starting ANNZ::Init()  ... 
[16:02:07    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[16:02:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:07    INFO]  -----------------------------------------------------
[16:02:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:07    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:07    INFO]  - starting ANNZ::Init()  ... 
[16:02:07    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[16:02:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:08    INFO]  -----------------------------------------------------
[16:02:08    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:08    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:08    INFO]  - starting ANNZ::Init()  ... 
[16:02:08    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[16:02:08    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=28:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:08    INFO]  -----------------------------------------------------
[16:02:08    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:08    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:09    INFO]  - starting ANNZ::Init()  ... 
[16:02:09    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[16:02:09    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=320:BoostType=AdaBoostR2:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:09    INFO]  -----------------------------------------------------
[16:02:09    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:09    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:10    INFO]  - starting ANNZ::Init()  ... 
[16:02:10    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[16:02:10    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:10    INFO]  -----------------------------------------------------
[16:02:10    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:10    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:11    INFO]  - starting ANNZ::Init()  ... 
[16:02:11    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[16:02:11    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=250:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:11    INFO]  -----------------------------------------------------
[16:02:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:11    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:12    INFO]  - starting ANNZ::Init()  ... 
[16:02:12    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[16:02:12    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:12    INFO]  -----------------------------------------------------
[16:02:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:12    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:13    INFO]  - starting ANNZ::Init()  ... 
[16:02:13    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[16:02:13    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:13    INFO]  -----------------------------------------------------
[16:02:13    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:13    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:14    INFO]  - starting ANNZ::Init()  ... 
[16:02:14    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[16:02:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:14    INFO]  -----------------------------------------------------
[16:02:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:14    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:15    INFO]  - starting ANNZ::Init()  ... 
[16:02:15    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[16:02:15    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:15    INFO]  -----------------------------------------------------
[16:02:15    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:15    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:15    INFO]  - starting ANNZ::Init()  ... 
[16:02:16    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[16:02:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:16    INFO]  -----------------------------------------------------
[16:02:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:16    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:16    INFO]  - starting ANNZ::Init()  ... 
[16:02:16    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[16:02:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:17    INFO]  -----------------------------------------------------
[16:02:17    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:17    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:17    INFO]  - starting ANNZ::Init()  ... 
[16:02:17    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[16:02:17    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:17    INFO]  -----------------------------------------------------
[16:02:17    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:17    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:18    INFO]  - starting ANNZ::Init()  ... 
[16:02:18    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[16:02:18    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:18    INFO]  -----------------------------------------------------
[16:02:18    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:18    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:19    INFO]  - starting ANNZ::Init()  ... 
[16:02:19    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[16:02:19    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:19    INFO]  -----------------------------------------------------
[16:02:19    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:19    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:20    INFO]  - starting ANNZ::Init()  ... 
[16:02:20    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[16:02:20    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:20    INFO]  -----------------------------------------------------
[16:02:20    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:20    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:20    INFO]  - starting ANNZ::Init()  ... 
[16:02:21    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[16:02:21    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=20:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:21    INFO]  -----------------------------------------------------
[16:02:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:21    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:21    INFO]  - starting ANNZ::Init()  ... 
[16:02:21    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[16:02:21    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=470:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:21    INFO]  -----------------------------------------------------
[16:02:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:21    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:22    INFO]  - starting ANNZ::Init()  ... 
[16:02:22    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[16:02:22    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:23    INFO]  -----------------------------------------------------
[16:02:23    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:23    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:23    INFO]  - starting ANNZ::Init()  ... 
[16:02:23    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[16:02:23    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:23    INFO]  -----------------------------------------------------
[16:02:23    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:23    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:24    INFO]  - starting ANNZ::Init()  ... 
[16:02:24    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[16:02:24    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=20:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:25    INFO]  -----------------------------------------------------
[16:02:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:25    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:25    INFO]  - starting ANNZ::Init()  ... 
[16:02:25    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[16:02:25    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:25    INFO]  -----------------------------------------------------
[16:02:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:25    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:26    INFO]  - starting ANNZ::Init()  ... 
[16:02:26    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[16:02:26    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:27    INFO]  -----------------------------------------------------
[16:02:27    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:27    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:27    INFO]  - starting ANNZ::Init()  ... 
[16:02:27    INFO]  - found trained "ANNZ_23" (./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/randomReg_ANNZ_23.weights.xml)
[16:02:27    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1000:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:27    INFO]  -----------------------------------------------------
[16:02:27    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:27    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:28    INFO]  - starting ANNZ::Init()  ... 
[16:02:28    INFO]  - found trained "ANNZ_24" (./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/randomReg_ANNZ_24.weights.xml)
[16:02:28    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=8:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:28    INFO]  -----------------------------------------------------
[16:02:28    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:28    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:29    INFO]  - starting ANNZ::Init()  ... 
[16:02:29    INFO]  - found trained "ANNZ_25" (./output/SPEC_advanced24/regres/train/ANNZ_25/ANNZ_25_weights/randomReg_ANNZ_25.weights.xml)
[16:02:29    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m26[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:29    INFO]  -----------------------------------------------------
[16:02:29    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:29    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:29    INFO]  - starting ANNZ::Init()  ... 
[16:02:30    INFO]  - found trained "ANNZ_26" (./output/SPEC_advanced24/regres/train/ANNZ_26/ANNZ_26_weights/randomReg_ANNZ_26.weights.xml)
[16:02:30    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m27[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=15:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:30    INFO]  -----------------------------------------------------
[16:02:30    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:30    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:30    INFO]  - starting ANNZ::Init()  ... 
[16:02:30    INFO]  - found trained "ANNZ_27" (./output/SPEC_advanced24/regres/train/ANNZ_27/ANNZ_27_weights/randomReg_ANNZ_27.weights.xml)
[16:02:30    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m28[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:31    INFO]  -----------------------------------------------------
[16:02:31    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:31    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:31    INFO]  - starting ANNZ::Init()  ... 
[16:02:32    INFO]  - found trained "ANNZ_28" (./output/SPEC_advanced24/regres/train/ANNZ_28/ANNZ_28_weights/randomReg_ANNZ_28.weights.xml)
[16:02:32    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m29[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:32    INFO]  -----------------------------------------------------
[16:02:32    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:32    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:32    INFO]  - starting ANNZ::Init()  ... 
[16:02:32    INFO]  - found trained "ANNZ_29" (./output/SPEC_advanced24/regres/train/ANNZ_29/ANNZ_29_weights/randomReg_ANNZ_29.weights.xml)
[16:02:32    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m30[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:32    INFO]  -----------------------------------------------------
[16:02:32    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:32    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:33    INFO]  - starting ANNZ::Init()  ... 
[16:02:33    INFO]  - found trained "ANNZ_30" (./output/SPEC_advanced24/regres/train/ANNZ_30/ANNZ_30_weights/randomReg_ANNZ_30.weights.xml)
[16:02:33    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m31[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:33    INFO]  -----------------------------------------------------
[16:02:33    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:33    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:34    INFO]  - starting ANNZ::Init()  ... 
[16:02:34    INFO]  - found trained "ANNZ_31" (./output/SPEC_advanced24/regres/train/ANNZ_31/ANNZ_31_weights/randomReg_ANNZ_31.weights.xml)
[16:02:34    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m32[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=280:BoostType=AdaBoost:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:34    INFO]  -----------------------------------------------------
[16:02:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:34    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:35    INFO]  - starting ANNZ::Init()  ... 
[16:02:35    INFO]  - found trained "ANNZ_32" (./output/SPEC_advanced24/regres/train/ANNZ_32/ANNZ_32_weights/randomReg_ANNZ_32.weights.xml)
[16:02:35    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m33[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:35    INFO]  -----------------------------------------------------
[16:02:35    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:35    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:36    INFO]  - starting ANNZ::Init()  ... 
[16:02:36    INFO]  - found trained "ANNZ_33" (./output/SPEC_advanced24/regres/train/ANNZ_33/ANNZ_33_weights/randomReg_ANNZ_33.weights.xml)
[16:02:36    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m34[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=420:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:36    INFO]  -----------------------------------------------------
[16:02:36    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:36    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:36    INFO]  - starting ANNZ::Init()  ... 
[16:02:37    INFO]  - found trained "ANNZ_34" (./output/SPEC_advanced24/regres/train/ANNZ_34/ANNZ_34_weights/randomReg_ANNZ_34.weights.xml)
[16:02:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m35[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:37    INFO]  -----------------------------------------------------
[16:02:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:37    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:37    INFO]  - starting ANNZ::Init()  ... 
[16:02:37    INFO]  - found trained "ANNZ_35" (./output/SPEC_advanced24/regres/train/ANNZ_35/ANNZ_35_weights/randomReg_ANNZ_35.weights.xml)
[16:02:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m36[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=420:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:38    INFO]  -----------------------------------------------------
[16:02:38    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:38    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:38    INFO]  - starting ANNZ::Init()  ... 
[16:02:39    INFO]  - found trained "ANNZ_36" (./output/SPEC_advanced24/regres/train/ANNZ_36/ANNZ_36_weights/randomReg_ANNZ_36.weights.xml)
[16:02:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m37[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:39    INFO]  -----------------------------------------------------
[16:02:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:39    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:39    INFO]  - starting ANNZ::Init()  ... 
[16:02:39    INFO]  - found trained "ANNZ_37" (./output/SPEC_advanced24/regres/train/ANNZ_37/ANNZ_37_weights/randomReg_ANNZ_37.weights.xml)
[16:02:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m38[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=AdaBoostR2[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:40    INFO]  -----------------------------------------------------
[16:02:40    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:40    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:40    INFO]  - starting ANNZ::Init()  ... 
[16:02:40    INFO]  - found trained "ANNZ_38" (./output/SPEC_advanced24/regres/train/ANNZ_38/ANNZ_38_weights/randomReg_ANNZ_38.weights.xml)
[16:02:40    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m39[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:41    INFO]  -----------------------------------------------------
[16:02:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:41    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:41    INFO]  - starting ANNZ::Init()  ... 
[16:02:41    INFO]  - found trained "ANNZ_39" (./output/SPEC_advanced24/regres/train/ANNZ_39/ANNZ_39_weights/randomReg_ANNZ_39.weights.xml)
[16:02:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m40[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=370:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:41    INFO]  -----------------------------------------------------
[16:02:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:41    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:42    INFO]  - starting ANNZ::Init()  ... 
[16:02:42    INFO]  - found trained "ANNZ_40" (./output/SPEC_advanced24/regres/train/ANNZ_40/ANNZ_40_weights/randomReg_ANNZ_40.weights.xml)
[16:02:42    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m41[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:42    INFO]  -----------------------------------------------------
[16:02:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:42    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:43    INFO]  - starting ANNZ::Init()  ... 
[16:02:43    INFO]  - found trained "ANNZ_41" (./output/SPEC_advanced24/regres/train/ANNZ_41/ANNZ_41_weights/randomReg_ANNZ_41.weights.xml)
[16:02:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m42[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:43    INFO]  -----------------------------------------------------
[16:02:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:43    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:44    INFO]  - starting ANNZ::Init()  ... 
[16:02:44    INFO]  - found trained "ANNZ_42" (./output/SPEC_advanced24/regres/train/ANNZ_42/ANNZ_42_weights/randomReg_ANNZ_42.weights.xml)
[16:02:44    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m43[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:02 INFO) 
[16:02:44    INFO]  -----------------------------------------------------
[16:02:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:02:44    INFO]  -----------------------------------------------------------------------------------------------------------
[16:02:44    INFO]  - starting ANNZ::Init()  ... 
[16:02:48    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_43/saveOpt.txt ...
[16:02:53    INFO]  - starting ANNZ::Train_singleReg() ... 
[16:02:53    INFO] ----------------------------------------------------------------------------------------------------
[16:02:53    INFO]  - will book (ANNZ_43) method(KNN) with options: :nkNN=13:BalanceDepth=4:Kernel=Gaus:VarTransform=N
[16:02:53    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:02:53    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[16:02:53    INFO]      cuts (train):        ,
[16:02:53    INFO]      cuts (valid):       
[16:02:53    INFO]    - weights:            1
[16:02:53    INFO] ----------------------------------------------------------------------------------------------------
[16:02:53    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(16:02 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(16:02 CRITICAL) [41;37;1mWill terminate !!!![0m
(16:06 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(16:06 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(16:06 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(16:06 INFO) [40;37;1m - 04/04/19 16:06:50 - starting ANNZ[0m
(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1050:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:50    INFO]  -----------------------------------------------------
[16:06:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:50    INFO]  -----------------------------------------------------------------------------------------------------------
[16:06:50    INFO]  - starting ANNZ::Init()  ... 
[16:06:51    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[16:06:51    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:51    INFO]  -----------------------------------------------------
[16:06:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:51    INFO]  -----------------------------------------------------------------------------------------------------------
[16:06:52    INFO]  - starting ANNZ::Init()  ... 
[16:06:52    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[16:06:52    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=790:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:52    INFO]  -----------------------------------------------------
[16:06:52    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:52    INFO]  -----------------------------------------------------------------------------------------------------------
[16:06:52    INFO]  - starting ANNZ::Init()  ... 
[16:06:52    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[16:06:52    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:53    INFO]  -----------------------------------------------------
[16:06:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:53    INFO]  -----------------------------------------------------------------------------------------------------------
[16:06:53    INFO]  - starting ANNZ::Init()  ... 
[16:06:53    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[16:06:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=580:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:53    INFO]  -----------------------------------------------------
[16:06:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:53    INFO]  -----------------------------------------------------------------------------------------------------------
[16:06:54    INFO]  - starting ANNZ::Init()  ... 
[16:06:54    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[16:06:54    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:54    INFO]  -----------------------------------------------------
[16:06:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:54    INFO]  -----------------------------------------------------------------------------------------------------------
[16:06:55    INFO]  - starting ANNZ::Init()  ... 
[16:06:55    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[16:06:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=350:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:55    INFO]  -----------------------------------------------------
[16:06:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:55    INFO]  -----------------------------------------------------------------------------------------------------------
[16:06:56    INFO]  - starting ANNZ::Init()  ... 
[16:06:56    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[16:06:56    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:56    INFO]  -----------------------------------------------------
[16:06:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:56    INFO]  -----------------------------------------------------------------------------------------------------------
[16:06:57    INFO]  - starting ANNZ::Init()  ... 
[16:06:57    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[16:06:57    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=440:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:57    INFO]  -----------------------------------------------------
[16:06:57    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:57    INFO]  -----------------------------------------------------------------------------------------------------------
[16:06:58    INFO]  - starting ANNZ::Init()  ... 
[16:06:58    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[16:06:58    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:58    INFO]  -----------------------------------------------------
[16:06:58    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:58    INFO]  -----------------------------------------------------------------------------------------------------------
[16:06:59    INFO]  - starting ANNZ::Init()  ... 
[16:06:59    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[16:06:59    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=540:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:59    INFO]  -----------------------------------------------------
[16:06:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:06:59    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:00    INFO]  - starting ANNZ::Init()  ... 
[16:07:00    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[16:07:00    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=4:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:00    INFO]  -----------------------------------------------------
[16:07:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:00    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:01    INFO]  - starting ANNZ::Init()  ... 
[16:07:01    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[16:07:01    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=440:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:01    INFO]  -----------------------------------------------------
[16:07:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:01    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:01    INFO]  - starting ANNZ::Init()  ... 
[16:07:01    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[16:07:01    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:02    INFO]  -----------------------------------------------------
[16:07:02    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:02    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:02    INFO]  - starting ANNZ::Init()  ... 
[16:07:02    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[16:07:02    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=430:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:02    INFO]  -----------------------------------------------------
[16:07:02    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:02    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:03    INFO]  - starting ANNZ::Init()  ... 
[16:07:03    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[16:07:03    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:03    INFO]  -----------------------------------------------------
[16:07:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:03    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:04    INFO]  - starting ANNZ::Init()  ... 
[16:07:04    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[16:07:04    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=410:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:04    INFO]  -----------------------------------------------------
[16:07:04    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:04    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:04    INFO]  - starting ANNZ::Init()  ... 
[16:07:05    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[16:07:05    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=5:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:05    INFO]  -----------------------------------------------------
[16:07:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:05    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:05    INFO]  - starting ANNZ::Init()  ... 
[16:07:05    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[16:07:05    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=350:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:05    INFO]  -----------------------------------------------------
[16:07:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:05    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:06    INFO]  - starting ANNZ::Init()  ... 
[16:07:06    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[16:07:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:07    INFO]  -----------------------------------------------------
[16:07:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:07    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:07    INFO]  - starting ANNZ::Init()  ... 
[16:07:07    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[16:07:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1050:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:07    INFO]  -----------------------------------------------------
[16:07:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:07    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:08    INFO]  - starting ANNZ::Init()  ... 
[16:07:08    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[16:07:08    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:09    INFO]  -----------------------------------------------------
[16:07:09    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:09    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:09    INFO]  - starting ANNZ::Init()  ... 
[16:07:09    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[16:07:09    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:09    INFO]  -----------------------------------------------------
[16:07:09    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:09    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:10    INFO]  - starting ANNZ::Init()  ... 
[16:07:11    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[16:07:11    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:11    INFO]  -----------------------------------------------------
[16:07:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:11    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:11    INFO]  - starting ANNZ::Init()  ... 
[16:07:11    INFO]  - found trained "ANNZ_23" (./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/randomReg_ANNZ_23.weights.xml)
[16:07:11    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=470:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:11    INFO]  -----------------------------------------------------
[16:07:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:11    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:12    INFO]  - starting ANNZ::Init()  ... 
[16:07:12    INFO]  - found trained "ANNZ_24" (./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/randomReg_ANNZ_24.weights.xml)
[16:07:12    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:12    INFO]  -----------------------------------------------------
[16:07:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:12    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:13    INFO]  - starting ANNZ::Init()  ... 
[16:07:13    INFO]  - found trained "ANNZ_25" (./output/SPEC_advanced24/regres/train/ANNZ_25/ANNZ_25_weights/randomReg_ANNZ_25.weights.xml)
[16:07:13    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m26[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:13    INFO]  -----------------------------------------------------
[16:07:13    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:13    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:13    INFO]  - starting ANNZ::Init()  ... 
[16:07:14    INFO]  - found trained "ANNZ_26" (./output/SPEC_advanced24/regres/train/ANNZ_26/ANNZ_26_weights/randomReg_ANNZ_26.weights.xml)
[16:07:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m27[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:14    INFO]  -----------------------------------------------------
[16:07:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:14    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:14    INFO]  - starting ANNZ::Init()  ... 
[16:07:14    INFO]  - found trained "ANNZ_27" (./output/SPEC_advanced24/regres/train/ANNZ_27/ANNZ_27_weights/randomReg_ANNZ_27.weights.xml)
[16:07:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m28[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:15    INFO]  -----------------------------------------------------
[16:07:15    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:15    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:15    INFO]  - starting ANNZ::Init()  ... 
[16:07:16    INFO]  - found trained "ANNZ_28" (./output/SPEC_advanced24/regres/train/ANNZ_28/ANNZ_28_weights/randomReg_ANNZ_28.weights.xml)
[16:07:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m29[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:16    INFO]  -----------------------------------------------------
[16:07:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:16    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:16    INFO]  - starting ANNZ::Init()  ... 
[16:07:16    INFO]  - found trained "ANNZ_29" (./output/SPEC_advanced24/regres/train/ANNZ_29/ANNZ_29_weights/randomReg_ANNZ_29.weights.xml)
[16:07:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m30[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:16    INFO]  -----------------------------------------------------
[16:07:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:16    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:17    INFO]  - starting ANNZ::Init()  ... 
[16:07:17    INFO]  - found trained "ANNZ_30" (./output/SPEC_advanced24/regres/train/ANNZ_30/ANNZ_30_weights/randomReg_ANNZ_30.weights.xml)
[16:07:17    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m31[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:17    INFO]  -----------------------------------------------------
[16:07:17    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:17    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:18    INFO]  - starting ANNZ::Init()  ... 
[16:07:18    INFO]  - found trained "ANNZ_31" (./output/SPEC_advanced24/regres/train/ANNZ_31/ANNZ_31_weights/randomReg_ANNZ_31.weights.xml)
[16:07:18    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m32[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:18    INFO]  -----------------------------------------------------
[16:07:18    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:18    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:19    INFO]  - starting ANNZ::Init()  ... 
[16:07:19    INFO]  - found trained "ANNZ_32" (./output/SPEC_advanced24/regres/train/ANNZ_32/ANNZ_32_weights/randomReg_ANNZ_32.weights.xml)
[16:07:19    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m33[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=20:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:19    INFO]  -----------------------------------------------------
[16:07:19    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:19    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:20    INFO]  - starting ANNZ::Init()  ... 
[16:07:20    INFO]  - found trained "ANNZ_33" (./output/SPEC_advanced24/regres/train/ANNZ_33/ANNZ_33_weights/randomReg_ANNZ_33.weights.xml)
[16:07:20    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m34[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=420:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:20    INFO]  -----------------------------------------------------
[16:07:20    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:20    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:20    INFO]  - starting ANNZ::Init()  ... 
[16:07:21    INFO]  - found trained "ANNZ_34" (./output/SPEC_advanced24/regres/train/ANNZ_34/ANNZ_34_weights/randomReg_ANNZ_34.weights.xml)
[16:07:21    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m35[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:21    INFO]  -----------------------------------------------------
[16:07:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:21    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:21    INFO]  - starting ANNZ::Init()  ... 
[16:07:22    INFO]  - found trained "ANNZ_35" (./output/SPEC_advanced24/regres/train/ANNZ_35/ANNZ_35_weights/randomReg_ANNZ_35.weights.xml)
[16:07:22    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m36[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=470:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:22    INFO]  -----------------------------------------------------
[16:07:22    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:22    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:22    INFO]  - starting ANNZ::Init()  ... 
[16:07:23    INFO]  - found trained "ANNZ_36" (./output/SPEC_advanced24/regres/train/ANNZ_36/ANNZ_36_weights/randomReg_ANNZ_36.weights.xml)
[16:07:23    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m37[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:23    INFO]  -----------------------------------------------------
[16:07:23    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:23    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:23    INFO]  - starting ANNZ::Init()  ... 
[16:07:24    INFO]  - found trained "ANNZ_37" (./output/SPEC_advanced24/regres/train/ANNZ_37/ANNZ_37_weights/randomReg_ANNZ_37.weights.xml)
[16:07:24    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m38[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=410:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:24    INFO]  -----------------------------------------------------
[16:07:24    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:24    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:24    INFO]  - starting ANNZ::Init()  ... 
[16:07:25    INFO]  - found trained "ANNZ_38" (./output/SPEC_advanced24/regres/train/ANNZ_38/ANNZ_38_weights/randomReg_ANNZ_38.weights.xml)
[16:07:25    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m39[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=20:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:25    INFO]  -----------------------------------------------------
[16:07:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:25    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:25    INFO]  - starting ANNZ::Init()  ... 
[16:07:25    INFO]  - found trained "ANNZ_39" (./output/SPEC_advanced24/regres/train/ANNZ_39/ANNZ_39_weights/randomReg_ANNZ_39.weights.xml)
[16:07:25    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m40[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:25    INFO]  -----------------------------------------------------
[16:07:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:25    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:26    INFO]  - starting ANNZ::Init()  ... 
[16:07:26    INFO]  - found trained "ANNZ_40" (./output/SPEC_advanced24/regres/train/ANNZ_40/ANNZ_40_weights/randomReg_ANNZ_40.weights.xml)
[16:07:26    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m41[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:27    INFO]  -----------------------------------------------------
[16:07:27    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:27    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:27    INFO]  - starting ANNZ::Init()  ... 
[16:07:27    INFO]  - found trained "ANNZ_41" (./output/SPEC_advanced24/regres/train/ANNZ_41/ANNZ_41_weights/randomReg_ANNZ_41.weights.xml)
[16:07:27    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m42[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:27    INFO]  -----------------------------------------------------
[16:07:27    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:27    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:28    INFO]  - starting ANNZ::Init()  ... 
[16:07:28    INFO]  - found trained "ANNZ_42" (./output/SPEC_advanced24/regres/train/ANNZ_42/ANNZ_42_weights/randomReg_ANNZ_42.weights.xml)
[16:07:28    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m43[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:07 INFO) 
[16:07:28    INFO]  -----------------------------------------------------
[16:07:28    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:07:28    INFO]  -----------------------------------------------------------------------------------------------------------
[16:07:29    INFO]  - starting ANNZ::Init()  ... 
[16:07:30    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_43/saveOpt.txt ...
[16:07:35    INFO]  - starting ANNZ::Train_singleReg() ... 
[16:07:35    INFO] ----------------------------------------------------------------------------------------------------
[16:07:35    INFO]  - will book (ANNZ_43) method(KNN) with options: :nkNN=17:BalanceDepth=8:Kernel=Gaus:VarTransform=N
[16:07:35    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:07:35    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[16:07:35    INFO]      cuts (train):        ,
[16:07:35    INFO]      cuts (valid):       
[16:07:35    INFO]    - weights:            1
[16:07:35    INFO] ----------------------------------------------------------------------------------------------------
[16:07:35    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(16:07 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(16:07 CRITICAL) [41;37;1mWill terminate !!!![0m
(16:10 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(16:10 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(16:10 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(16:10 INFO) [40;37;1m - 04/04/19 16:10:51 - starting ANNZ[0m
(16:10 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:10 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=970:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:10 INFO) 
[16:10:51    INFO]  -----------------------------------------------------
[16:10:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:10:51    INFO]  -----------------------------------------------------------------------------------------------------------
[16:10:52    INFO]  - starting ANNZ::Init()  ... 
[16:10:53    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[16:10:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:10 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:10 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:10 INFO) 
[16:10:53    INFO]  -----------------------------------------------------
[16:10:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:10:53    INFO]  -----------------------------------------------------------------------------------------------------------
[16:10:53    INFO]  - starting ANNZ::Init()  ... 
[16:10:53    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[16:10:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:10 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:10 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=420:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:10 INFO) 
[16:10:54    INFO]  -----------------------------------------------------
[16:10:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:10:54    INFO]  -----------------------------------------------------------------------------------------------------------
[16:10:54    INFO]  - starting ANNZ::Init()  ... 
[16:10:54    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[16:10:54    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:10 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:10 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:10 INFO) 
[16:10:54    INFO]  -----------------------------------------------------
[16:10:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:10:54    INFO]  -----------------------------------------------------------------------------------------------------------
[16:10:55    INFO]  - starting ANNZ::Init()  ... 
[16:10:55    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[16:10:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:10 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:10 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1030:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:10 INFO) 
[16:10:55    INFO]  -----------------------------------------------------
[16:10:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:10:55    INFO]  -----------------------------------------------------------------------------------------------------------
[16:10:56    INFO]  - starting ANNZ::Init()  ... 
[16:10:56    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[16:10:56    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:10 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:10 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:10 INFO) 
[16:10:56    INFO]  -----------------------------------------------------
[16:10:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:10:56    INFO]  -----------------------------------------------------------------------------------------------------------
[16:10:57    INFO]  - starting ANNZ::Init()  ... 
[16:10:57    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[16:10:57    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:10 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:10 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:10 INFO) 
[16:10:57    INFO]  -----------------------------------------------------
[16:10:57    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:10:57    INFO]  -----------------------------------------------------------------------------------------------------------
[16:10:58    INFO]  - starting ANNZ::Init()  ... 
[16:10:58    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[16:10:58    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:10 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:10 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=15:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:10 INFO) 
[16:10:58    INFO]  -----------------------------------------------------
[16:10:58    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:10:58    INFO]  -----------------------------------------------------------------------------------------------------------
[16:10:59    INFO]  - starting ANNZ::Init()  ... 
[16:10:59    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[16:10:59    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:10 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:10 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:10 INFO) 
[16:10:59    INFO]  -----------------------------------------------------
[16:10:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:10:59    INFO]  -----------------------------------------------------------------------------------------------------------
[16:10:59    INFO]  - starting ANNZ::Init()  ... 
[16:11:00    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[16:11:00    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:00    INFO]  -----------------------------------------------------
[16:11:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:00    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:01    INFO]  - starting ANNZ::Init()  ... 
[16:11:01    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[16:11:01    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=350:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:01    INFO]  -----------------------------------------------------
[16:11:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:01    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:01    INFO]  - starting ANNZ::Init()  ... 
[16:11:02    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[16:11:02    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:02    INFO]  -----------------------------------------------------
[16:11:02    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:02    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:02    INFO]  - starting ANNZ::Init()  ... 
[16:11:02    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[16:11:02    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=250:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:02    INFO]  -----------------------------------------------------
[16:11:02    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:02    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:03    INFO]  - starting ANNZ::Init()  ... 
[16:11:03    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[16:11:03    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:03    INFO]  -----------------------------------------------------
[16:11:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:03    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:04    INFO]  - starting ANNZ::Init()  ... 
[16:11:04    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[16:11:04    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=300:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:04    INFO]  -----------------------------------------------------
[16:11:04    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:04    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:05    INFO]  - starting ANNZ::Init()  ... 
[16:11:05    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[16:11:05    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=3:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:05    INFO]  -----------------------------------------------------
[16:11:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:05    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:05    INFO]  - starting ANNZ::Init()  ... 
[16:11:06    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[16:11:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:06    INFO]  -----------------------------------------------------
[16:11:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:06    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:06    INFO]  - starting ANNZ::Init()  ... 
[16:11:06    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[16:11:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:06    INFO]  -----------------------------------------------------
[16:11:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:06    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:07    INFO]  - starting ANNZ::Init()  ... 
[16:11:07    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[16:11:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:07    INFO]  -----------------------------------------------------
[16:11:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:07    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:08    INFO]  - starting ANNZ::Init()  ... 
[16:11:08    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[16:11:08    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=5:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:08    INFO]  -----------------------------------------------------
[16:11:08    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:08    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:09    INFO]  - starting ANNZ::Init()  ... 
[16:11:09    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[16:11:09    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=360:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:09    INFO]  -----------------------------------------------------
[16:11:09    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:09    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:10    INFO]  - starting ANNZ::Init()  ... 
[16:11:10    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[16:11:10    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=6:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:10    INFO]  -----------------------------------------------------
[16:11:10    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:10    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:11    INFO]  - starting ANNZ::Init()  ... 
[16:11:11    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[16:11:11    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=300:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:11    INFO]  -----------------------------------------------------
[16:11:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:11    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:12    INFO]  - starting ANNZ::Init()  ... 
[16:11:12    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[16:11:12    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=7:Kernel=Gaus[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:12    INFO]  -----------------------------------------------------
[16:11:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:12    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:13    INFO]  - starting ANNZ::Init()  ... 
[16:11:13    INFO]  - found trained "ANNZ_23" (./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/randomReg_ANNZ_23.weights.xml)
[16:11:13    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:13    INFO]  -----------------------------------------------------
[16:11:13    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:13    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:14    INFO]  - starting ANNZ::Init()  ... 
[16:11:14    INFO]  - found trained "ANNZ_24" (./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/randomReg_ANNZ_24.weights.xml)
[16:11:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:14    INFO]  -----------------------------------------------------
[16:11:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:14    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:15    INFO]  - starting ANNZ::Init()  ... 
[16:11:15    INFO]  - found trained "ANNZ_25" (./output/SPEC_advanced24/regres/train/ANNZ_25/ANNZ_25_weights/randomReg_ANNZ_25.weights.xml)
[16:11:15    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m26[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:15    INFO]  -----------------------------------------------------
[16:11:15    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:15    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:15    INFO]  - starting ANNZ::Init()  ... 
[16:11:16    INFO]  - found trained "ANNZ_26" (./output/SPEC_advanced24/regres/train/ANNZ_26/ANNZ_26_weights/randomReg_ANNZ_26.weights.xml)
[16:11:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m27[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:16    INFO]  -----------------------------------------------------
[16:11:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:16    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:16    INFO]  - starting ANNZ::Init()  ... 
[16:11:16    INFO]  - found trained "ANNZ_27" (./output/SPEC_advanced24/regres/train/ANNZ_27/ANNZ_27_weights/randomReg_ANNZ_27.weights.xml)
[16:11:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m28[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=360:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:16    INFO]  -----------------------------------------------------
[16:11:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:16    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:17    INFO]  - starting ANNZ::Init()  ... 
[16:11:18    INFO]  - found trained "ANNZ_28" (./output/SPEC_advanced24/regres/train/ANNZ_28/ANNZ_28_weights/randomReg_ANNZ_28.weights.xml)
[16:11:18    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m29[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=20:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:18    INFO]  -----------------------------------------------------
[16:11:18    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:18    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:18    INFO]  - starting ANNZ::Init()  ... 
[16:11:18    INFO]  - found trained "ANNZ_29" (./output/SPEC_advanced24/regres/train/ANNZ_29/ANNZ_29_weights/randomReg_ANNZ_29.weights.xml)
[16:11:18    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m30[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1050:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:18    INFO]  -----------------------------------------------------
[16:11:18    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:18    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:19    INFO]  - starting ANNZ::Init()  ... 
[16:11:19    INFO]  - found trained "ANNZ_30" (./output/SPEC_advanced24/regres/train/ANNZ_30/ANNZ_30_weights/randomReg_ANNZ_30.weights.xml)
[16:11:19    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m31[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:19    INFO]  -----------------------------------------------------
[16:11:19    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:19    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:20    INFO]  - starting ANNZ::Init()  ... 
[16:11:20    INFO]  - found trained "ANNZ_31" (./output/SPEC_advanced24/regres/train/ANNZ_31/ANNZ_31_weights/randomReg_ANNZ_31.weights.xml)
[16:11:20    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m32[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:20    INFO]  -----------------------------------------------------
[16:11:20    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:20    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:20    INFO]  - starting ANNZ::Init()  ... 
[16:11:21    INFO]  - found trained "ANNZ_32" (./output/SPEC_advanced24/regres/train/ANNZ_32/ANNZ_32_weights/randomReg_ANNZ_32.weights.xml)
[16:11:21    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m33[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:21    INFO]  -----------------------------------------------------
[16:11:21    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:21    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:22    INFO]  - starting ANNZ::Init()  ... 
[16:11:22    INFO]  - found trained "ANNZ_33" (./output/SPEC_advanced24/regres/train/ANNZ_33/ANNZ_33_weights/randomReg_ANNZ_33.weights.xml)
[16:11:22    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m34[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:22    INFO]  -----------------------------------------------------
[16:11:22    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:22    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:22    INFO]  - starting ANNZ::Init()  ... 
[16:11:23    INFO]  - found trained "ANNZ_34" (./output/SPEC_advanced24/regres/train/ANNZ_34/ANNZ_34_weights/randomReg_ANNZ_34.weights.xml)
[16:11:23    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m35[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:23    INFO]  -----------------------------------------------------
[16:11:23    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:23    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:23    INFO]  - starting ANNZ::Init()  ... 
[16:11:23    INFO]  - found trained "ANNZ_35" (./output/SPEC_advanced24/regres/train/ANNZ_35/ANNZ_35_weights/randomReg_ANNZ_35.weights.xml)
[16:11:23    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m36[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=580:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:23    INFO]  -----------------------------------------------------
[16:11:23    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:23    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:24    INFO]  - starting ANNZ::Init()  ... 
[16:11:25    INFO]  - found trained "ANNZ_36" (./output/SPEC_advanced24/regres/train/ANNZ_36/ANNZ_36_weights/randomReg_ANNZ_36.weights.xml)
[16:11:25    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m37[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=6:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:25    INFO]  -----------------------------------------------------
[16:11:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:25    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:25    INFO]  - starting ANNZ::Init()  ... 
[16:11:25    INFO]  - found trained "ANNZ_37" (./output/SPEC_advanced24/regres/train/ANNZ_37/ANNZ_37_weights/randomReg_ANNZ_37.weights.xml)
[16:11:25    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m38[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=700:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:25    INFO]  -----------------------------------------------------
[16:11:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:25    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:26    INFO]  - starting ANNZ::Init()  ... 
[16:11:26    INFO]  - found trained "ANNZ_38" (./output/SPEC_advanced24/regres/train/ANNZ_38/ANNZ_38_weights/randomReg_ANNZ_38.weights.xml)
[16:11:26    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m39[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=6:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:26    INFO]  -----------------------------------------------------
[16:11:26    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:26    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:27    INFO]  - starting ANNZ::Init()  ... 
[16:11:27    INFO]  - found trained "ANNZ_39" (./output/SPEC_advanced24/regres/train/ANNZ_39/ANNZ_39_weights/randomReg_ANNZ_39.weights.xml)
[16:11:27    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m40[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=410:BoostType=Bagging:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:27    INFO]  -----------------------------------------------------
[16:11:27    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:27    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:28    INFO]  - starting ANNZ::Init()  ... 
[16:11:28    INFO]  - found trained "ANNZ_40" (./output/SPEC_advanced24/regres/train/ANNZ_40/ANNZ_40_weights/randomReg_ANNZ_40.weights.xml)
[16:11:28    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m41[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:28    INFO]  -----------------------------------------------------
[16:11:28    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:28    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:29    INFO]  - starting ANNZ::Init()  ... 
[16:11:29    INFO]  - found trained "ANNZ_41" (./output/SPEC_advanced24/regres/train/ANNZ_41/ANNZ_41_weights/randomReg_ANNZ_41.weights.xml)
[16:11:29    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m42[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:29    INFO]  -----------------------------------------------------
[16:11:29    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:29    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:30    INFO]  - starting ANNZ::Init()  ... 
[16:11:30    INFO]  - found trained "ANNZ_42" (./output/SPEC_advanced24/regres/train/ANNZ_42/ANNZ_42_weights/randomReg_ANNZ_42.weights.xml)
[16:11:30    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(16:11 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:11 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m43[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:11 INFO) 
[16:11:30    INFO]  -----------------------------------------------------
[16:11:30    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:11:30    INFO]  -----------------------------------------------------------------------------------------------------------
[16:11:31    INFO]  - starting ANNZ::Init()  ... 
[16:11:32    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_43/saveOpt.txt ...
[16:11:37    INFO]  - starting ANNZ::Train_singleReg() ... 
[16:11:37    INFO] ----------------------------------------------------------------------------------------------------
[16:11:37    INFO]  - will book (ANNZ_43) method(KNN) with options: :nkNN=24:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P
[16:11:37    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:11:37    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[16:11:37    INFO]      cuts (train):        ,
[16:11:37    INFO]      cuts (valid):       
[16:11:37    INFO]    - weights:            1
[16:11:37    INFO] ----------------------------------------------------------------------------------------------------
[16:11:37    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[16:11:41    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_43/ANNZ_43_weights/saveTrainOpt_ANNZ_43.txt ...
[16:11:41    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_43 ... 
[16:11:41    INFO]  - Will gen. input-parameter errors ...
[16:11:42    INFO]  - starting ANNZ::loadReaders() ... 
[16:11:46    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[16:16:39    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:16:39    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[16:16:39    INFO]  -----------------------------------------------------------------------------------------------------------
[16:16:39    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[16:17:53    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:17:53    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[16:17:53    INFO]  -----------------------------------------------------------------------------------------------------------
[16:17:53    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_43/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[16:17:53    INFO]  - ending makeTreeRegClsOneMLM() ... 
[16:17:53    INFO]  - will try to derive a bias correction ... 
[16:17:53    INFO]  - will validate that training produced an XML file for later ... 
[16:17:53    INFO]  - starting ANNZ::loadReaders() ... 
[16:17:53    INFO]  - will validate that the training was not a complete failure ... 
[16:17:53    INFO]  - training seems to have been successful! will move on ...
[16:17:53    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[16:17:58    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[16:17:58    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[16:17:59    INFO] ----------------------------------------------------------------------------------------------------
[16:17:59    INFO]  - will book (ANNZ_43_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[16:17:59    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:17:59    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[16:17:59    INFO]    - weights:            1
[16:17:59    INFO] ----------------------------------------------------------------------------------------------------
[16:17:59    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[16:18:02    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_43 ... 
[16:18:02    INFO]  - Will gen. input-parameter errors ...
[16:18:03    INFO]  - starting ANNZ::loadReaders() ... 
[16:18:18    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[16:42:21    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:42:21    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[16:42:21    INFO]  -----------------------------------------------------------------------------------------------------------
[16:42:21    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[16:48:21    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:48:21    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[16:48:21    INFO]  -----------------------------------------------------------------------------------------------------------
[16:48:21    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_43/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[16:48:21    INFO]  - ending makeTreeRegClsOneMLM() ... 
[16:48:21    INFO]  - will validate that the bias-correction actually improved the result ...
[16:48:21    INFO]  - starting ANNZ::doMetricPlots() ... 
[16:48:21    INFO]  - Will use (1) MLMs from the input chain: ANNZ_43,
Warning in <Fit>: Fit data is empty 
[16:48:24    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_43/plots/
[16:48:31        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_43/plots output/SPEC_advanced24/regres/train/ANNZ_43/plots_biasCor_before
[16:48:31    INFO]  - starting ANNZ::doMetricPlots() ... 
[16:48:31    INFO]  - Will use (1) MLMs from the input chain: ANNZ_43,
[16:48:33    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_43/plots/
[16:48:40        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_43/plots output/SPEC_advanced24/regres/train/ANNZ_43/plots_biasCor_after
[16:48:40    INFO]  - Got original [KS-test,N_poiss]: [0.626244 , 20.3091] , after the bias-correction: [0.0448971 , 5.923] --> will KEEP the correction !

(16:48 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:48 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m44[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=370:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:48 INFO) 
[16:48:42    INFO]  -----------------------------------------------------
[16:48:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:48:42    INFO]  -----------------------------------------------------------------------------------------------------------
[16:48:42    INFO]  - starting ANNZ::Init()  ... 
[16:48:46    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_44/saveOpt.txt ...
[16:48:51    INFO]  - starting ANNZ::Train_singleReg() ... 
[16:48:52    INFO] ----------------------------------------------------------------------------------------------------
[16:48:52    INFO]  - will book (ANNZ_44) method(BDT) with options: :NTrees=370:BoostType=AdaBoostR2:VarTransform=N,P
[16:48:52    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:48:52    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[16:48:52    INFO]      cuts (train):        ,
[16:48:52    INFO]      cuts (valid):       
[16:48:52    INFO]    - weights:            1
[16:48:52    INFO] ----------------------------------------------------------------------------------------------------
[16:48:52    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[16:49:18    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_44/ANNZ_44_weights/saveTrainOpt_ANNZ_44.txt ...
[16:49:20    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_44 ... 
[16:49:20    INFO]  - Will gen. input-parameter errors ...
[16:49:21    INFO]  - starting ANNZ::loadReaders() ... 
[16:49:28    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[16:54:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:54:19    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[16:54:19    INFO]  -----------------------------------------------------------------------------------------------------------
[16:54:19    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[16:55:32    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:55:32    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[16:55:32    INFO]  -----------------------------------------------------------------------------------------------------------
[16:55:32    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_44/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[16:55:33    INFO]  - ending makeTreeRegClsOneMLM() ... 
[16:55:33    INFO]  - will try to derive a bias correction ... 
[16:55:33    INFO]  - will validate that training produced an XML file for later ... 
[16:55:33    INFO]  - starting ANNZ::loadReaders() ... 
[16:55:35    INFO]  - will validate that the training was not a complete failure ... 
[16:55:35    INFO]  - training seems to have been successful! will move on ...
[16:55:35    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[16:55:40    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[16:55:41    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[16:55:41    INFO] ----------------------------------------------------------------------------------------------------
[16:55:41    INFO]  - will book (ANNZ_44_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[16:55:41    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:55:41    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[16:55:41    INFO]    - weights:            1
[16:55:41    INFO] ----------------------------------------------------------------------------------------------------
[16:55:41    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[16:55:46    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_44 ... 
[16:55:46    INFO]  - Will gen. input-parameter errors ...
[16:55:47    INFO]  - starting ANNZ::loadReaders() ... 
[16:55:54    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[17:00:31    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:00:31    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:00:31    INFO]  -----------------------------------------------------------------------------------------------------------
[17:00:31    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[17:01:40    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:01:40    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:01:40    INFO]  -----------------------------------------------------------------------------------------------------------
[17:01:40    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_44/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:01:41    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:01:41    INFO]  - will validate that the bias-correction actually improved the result ...
[17:01:41    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:01:41    INFO]  - Will use (1) MLMs from the input chain: ANNZ_44,
[17:01:44    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_44/plots/
[17:01:51        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_44/plots output/SPEC_advanced24/regres/train/ANNZ_44/plots_biasCor_before
[17:01:51    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:01:51    INFO]  - Will use (1) MLMs from the input chain: ANNZ_44,
[17:01:54    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_44/plots/
[17:02:00        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_44/plots output/SPEC_advanced24/regres/train/ANNZ_44/plots_biasCor_after
[17:02:00    INFO]  - Got original [KS-test,N_poiss]: [0.0758458 , 6.92163] , after the bias-correction: [0.034506 , 5.68968] --> will KEEP the correction !

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m45[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:03    INFO]  -----------------------------------------------------
[17:02:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:03    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:03    INFO]  - starting ANNZ::Init()  ... 
[17:02:06    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_45/saveOpt.txt ...
[17:02:11    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:02:11    INFO] ----------------------------------------------------------------------------------------------------
[17:02:11    INFO]  - will book (ANNZ_45) method(KNN) with options: :nkNN=19:BalanceDepth=5:Kernel=Gaus:VarTransform=N
[17:02:11    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:02:11    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:02:11    INFO]      cuts (train):        ,
[17:02:11    INFO]      cuts (valid):       
[17:02:11    INFO]    - weights:            1
[17:02:11    INFO] ----------------------------------------------------------------------------------------------------
[17:02:11    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(17:02 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(17:02 CRITICAL) [41;37;1mWill terminate !!!![0m
(17:02 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(17:02 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(17:02 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(17:02 INFO) [40;37;1m - 04/04/19 17:02:34 - starting ANNZ[0m
(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=730:BoostType=Bagging:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:34    INFO]  -----------------------------------------------------
[17:02:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:34    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:34    INFO]  - starting ANNZ::Init()  ... 
[17:02:35    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[17:02:35    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=20:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:35    INFO]  -----------------------------------------------------
[17:02:35    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:35    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:36    INFO]  - starting ANNZ::Init()  ... 
[17:02:36    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[17:02:36    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:36    INFO]  -----------------------------------------------------
[17:02:36    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:36    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:36    INFO]  - starting ANNZ::Init()  ... 
[17:02:37    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[17:02:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:37    INFO]  -----------------------------------------------------
[17:02:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:37    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:37    INFO]  - starting ANNZ::Init()  ... 
[17:02:37    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[17:02:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=410:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:37    INFO]  -----------------------------------------------------
[17:02:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:37    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:38    INFO]  - starting ANNZ::Init()  ... 
[17:02:38    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[17:02:38    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:39    INFO]  -----------------------------------------------------
[17:02:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:39    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:39    INFO]  - starting ANNZ::Init()  ... 
[17:02:39    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[17:02:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:39    INFO]  -----------------------------------------------------
[17:02:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:39    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:40    INFO]  - starting ANNZ::Init()  ... 
[17:02:40    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[17:02:40    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:40    INFO]  -----------------------------------------------------
[17:02:40    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:40    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:41    INFO]  - starting ANNZ::Init()  ... 
[17:02:41    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[17:02:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=430:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:41    INFO]  -----------------------------------------------------
[17:02:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:41    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:42    INFO]  - starting ANNZ::Init()  ... 
[17:02:42    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[17:02:42    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:42    INFO]  -----------------------------------------------------
[17:02:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:42    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:43    INFO]  - starting ANNZ::Init()  ... 
[17:02:43    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[17:02:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:43    INFO]  -----------------------------------------------------
[17:02:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:43    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:44    INFO]  - starting ANNZ::Init()  ... 
[17:02:44    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[17:02:44    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:44    INFO]  -----------------------------------------------------
[17:02:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:44    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:45    INFO]  - starting ANNZ::Init()  ... 
[17:02:45    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[17:02:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=380:BoostType=Bagging[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:45    INFO]  -----------------------------------------------------
[17:02:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:45    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:45    INFO]  - starting ANNZ::Init()  ... 
[17:02:45    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[17:02:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:46    INFO]  -----------------------------------------------------
[17:02:46    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:46    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:46    INFO]  - starting ANNZ::Init()  ... 
[17:02:46    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[17:02:46    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=410:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:46    INFO]  -----------------------------------------------------
[17:02:46    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:46    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:47    INFO]  - starting ANNZ::Init()  ... 
[17:02:47    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[17:02:47    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:47    INFO]  -----------------------------------------------------
[17:02:47    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:47    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:48    INFO]  - starting ANNZ::Init()  ... 
[17:02:48    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[17:02:48    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=530:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:48    INFO]  -----------------------------------------------------
[17:02:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:48    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:48    INFO]  - starting ANNZ::Init()  ... 
[17:02:49    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[17:02:49    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:49    INFO]  -----------------------------------------------------
[17:02:49    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:49    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:49    INFO]  - starting ANNZ::Init()  ... 
[17:02:49    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[17:02:49    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:49    INFO]  -----------------------------------------------------
[17:02:49    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:49    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:50    INFO]  - starting ANNZ::Init()  ... 
[17:02:51    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[17:02:51    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:51    INFO]  -----------------------------------------------------
[17:02:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:51    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:51    INFO]  - starting ANNZ::Init()  ... 
[17:02:51    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[17:02:51    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=470:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:51    INFO]  -----------------------------------------------------
[17:02:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:51    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:52    INFO]  - starting ANNZ::Init()  ... 
[17:02:53    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[17:02:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:53    INFO]  -----------------------------------------------------
[17:02:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:53    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:53    INFO]  - starting ANNZ::Init()  ... 
[17:02:53    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[17:02:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:53    INFO]  -----------------------------------------------------
[17:02:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:53    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:54    INFO]  - starting ANNZ::Init()  ... 
[17:02:55    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[17:02:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:55    INFO]  -----------------------------------------------------
[17:02:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:55    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:55    INFO]  - starting ANNZ::Init()  ... 
[17:02:55    INFO]  - found trained "ANNZ_23" (./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/randomReg_ANNZ_23.weights.xml)
[17:02:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=420:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:55    INFO]  -----------------------------------------------------
[17:02:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:55    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:56    INFO]  - starting ANNZ::Init()  ... 
[17:02:56    INFO]  - found trained "ANNZ_24" (./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/randomReg_ANNZ_24.weights.xml)
[17:02:56    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=28:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:56    INFO]  -----------------------------------------------------
[17:02:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:56    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:57    INFO]  - starting ANNZ::Init()  ... 
[17:02:57    INFO]  - found trained "ANNZ_25" (./output/SPEC_advanced24/regres/train/ANNZ_25/ANNZ_25_weights/randomReg_ANNZ_25.weights.xml)
[17:02:57    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m26[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=370:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:57    INFO]  -----------------------------------------------------
[17:02:57    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:57    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:58    INFO]  - starting ANNZ::Init()  ... 
[17:02:58    INFO]  - found trained "ANNZ_26" (./output/SPEC_advanced24/regres/train/ANNZ_26/ANNZ_26_weights/randomReg_ANNZ_26.weights.xml)
[17:02:58    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m27[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=28:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:58    INFO]  -----------------------------------------------------
[17:02:58    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:58    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:58    INFO]  - starting ANNZ::Init()  ... 
[17:02:58    INFO]  - found trained "ANNZ_27" (./output/SPEC_advanced24/regres/train/ANNZ_27/ANNZ_27_weights/randomReg_ANNZ_27.weights.xml)
[17:02:58    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:02 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:02 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m28[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:02 INFO) 
[17:02:59    INFO]  -----------------------------------------------------
[17:02:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:02:59    INFO]  -----------------------------------------------------------------------------------------------------------
[17:02:59    INFO]  - starting ANNZ::Init()  ... 
[17:03:00    INFO]  - found trained "ANNZ_28" (./output/SPEC_advanced24/regres/train/ANNZ_28/ANNZ_28_weights/randomReg_ANNZ_28.weights.xml)
[17:03:00    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m29[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=24:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:00    INFO]  -----------------------------------------------------
[17:03:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:00    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:00    INFO]  - starting ANNZ::Init()  ... 
[17:03:00    INFO]  - found trained "ANNZ_29" (./output/SPEC_advanced24/regres/train/ANNZ_29/ANNZ_29_weights/randomReg_ANNZ_29.weights.xml)
[17:03:00    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m30[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:00    INFO]  -----------------------------------------------------
[17:03:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:00    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:01    INFO]  - starting ANNZ::Init()  ... 
[17:03:01    INFO]  - found trained "ANNZ_30" (./output/SPEC_advanced24/regres/train/ANNZ_30/ANNZ_30_weights/randomReg_ANNZ_30.weights.xml)
[17:03:01    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m31[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:01    INFO]  -----------------------------------------------------
[17:03:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:01    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:02    INFO]  - starting ANNZ::Init()  ... 
[17:03:02    INFO]  - found trained "ANNZ_31" (./output/SPEC_advanced24/regres/train/ANNZ_31/ANNZ_31_weights/randomReg_ANNZ_31.weights.xml)
[17:03:02    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m32[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=430:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:02    INFO]  -----------------------------------------------------
[17:03:02    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:02    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:03    INFO]  - starting ANNZ::Init()  ... 
[17:03:03    INFO]  - found trained "ANNZ_32" (./output/SPEC_advanced24/regres/train/ANNZ_32/ANNZ_32_weights/randomReg_ANNZ_32.weights.xml)
[17:03:03    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m33[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:03    INFO]  -----------------------------------------------------
[17:03:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:03    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:04    INFO]  - starting ANNZ::Init()  ... 
[17:03:04    INFO]  - found trained "ANNZ_33" (./output/SPEC_advanced24/regres/train/ANNZ_33/ANNZ_33_weights/randomReg_ANNZ_33.weights.xml)
[17:03:04    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m34[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:04    INFO]  -----------------------------------------------------
[17:03:04    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:04    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:04    INFO]  - starting ANNZ::Init()  ... 
[17:03:05    INFO]  - found trained "ANNZ_34" (./output/SPEC_advanced24/regres/train/ANNZ_34/ANNZ_34_weights/randomReg_ANNZ_34.weights.xml)
[17:03:05    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m35[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=15:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:05    INFO]  -----------------------------------------------------
[17:03:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:05    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:06    INFO]  - starting ANNZ::Init()  ... 
[17:03:06    INFO]  - found trained "ANNZ_35" (./output/SPEC_advanced24/regres/train/ANNZ_35/ANNZ_35_weights/randomReg_ANNZ_35.weights.xml)
[17:03:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m36[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=250:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:06    INFO]  -----------------------------------------------------
[17:03:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:06    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:06    INFO]  - starting ANNZ::Init()  ... 
[17:03:07    INFO]  - found trained "ANNZ_36" (./output/SPEC_advanced24/regres/train/ANNZ_36/ANNZ_36_weights/randomReg_ANNZ_36.weights.xml)
[17:03:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m37[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=6:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:07    INFO]  -----------------------------------------------------
[17:03:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:07    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:08    INFO]  - starting ANNZ::Init()  ... 
[17:03:08    INFO]  - found trained "ANNZ_37" (./output/SPEC_advanced24/regres/train/ANNZ_37/ANNZ_37_weights/randomReg_ANNZ_37.weights.xml)
[17:03:08    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m38[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=550:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:08    INFO]  -----------------------------------------------------
[17:03:08    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:08    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:08    INFO]  - starting ANNZ::Init()  ... 
[17:03:09    INFO]  - found trained "ANNZ_38" (./output/SPEC_advanced24/regres/train/ANNZ_38/ANNZ_38_weights/randomReg_ANNZ_38.weights.xml)
[17:03:09    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m39[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:09    INFO]  -----------------------------------------------------
[17:03:09    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:09    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:09    INFO]  - starting ANNZ::Init()  ... 
[17:03:09    INFO]  - found trained "ANNZ_39" (./output/SPEC_advanced24/regres/train/ANNZ_39/ANNZ_39_weights/randomReg_ANNZ_39.weights.xml)
[17:03:09    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m40[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=520:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:09    INFO]  -----------------------------------------------------
[17:03:09    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:09    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:10    INFO]  - starting ANNZ::Init()  ... 
[17:03:10    INFO]  - found trained "ANNZ_40" (./output/SPEC_advanced24/regres/train/ANNZ_40/ANNZ_40_weights/randomReg_ANNZ_40.weights.xml)
[17:03:10    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m41[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:11    INFO]  -----------------------------------------------------
[17:03:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:11    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:11    INFO]  - starting ANNZ::Init()  ... 
[17:03:11    INFO]  - found trained "ANNZ_41" (./output/SPEC_advanced24/regres/train/ANNZ_41/ANNZ_41_weights/randomReg_ANNZ_41.weights.xml)
[17:03:11    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m42[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:11    INFO]  -----------------------------------------------------
[17:03:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:11    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:12    INFO]  - starting ANNZ::Init()  ... 
[17:03:12    INFO]  - found trained "ANNZ_42" (./output/SPEC_advanced24/regres/train/ANNZ_42/ANNZ_42_weights/randomReg_ANNZ_42.weights.xml)
[17:03:12    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m43[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:12    INFO]  -----------------------------------------------------
[17:03:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:12    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:13    INFO]  - starting ANNZ::Init()  ... 
[17:03:13    INFO]  - found trained "ANNZ_43" (./output/SPEC_advanced24/regres/train/ANNZ_43/ANNZ_43_weights/randomReg_ANNZ_43.weights.xml)
[17:03:13    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m44[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:13    INFO]  -----------------------------------------------------
[17:03:13    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:13    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:13    INFO]  - starting ANNZ::Init()  ... 
[17:03:14    INFO]  - found trained "ANNZ_44" (./output/SPEC_advanced24/regres/train/ANNZ_44/ANNZ_44_weights/randomReg_ANNZ_44.weights.xml)
[17:03:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m45[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:03 INFO) 
[17:03:14    INFO]  -----------------------------------------------------
[17:03:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:03:14    INFO]  -----------------------------------------------------------------------------------------------------------
[17:03:14    INFO]  - starting ANNZ::Init()  ... 
[17:03:16    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_45/saveOpt.txt ...
[17:03:21    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:03:21    INFO] ----------------------------------------------------------------------------------------------------
[17:03:21    INFO]  - will book (ANNZ_45) method(KNN) with options: :nkNN=21:BalanceDepth=6:Kernel=Gaus:VarTransform=N
[17:03:21    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:03:21    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:03:21    INFO]      cuts (train):        ,
[17:03:21    INFO]      cuts (valid):       
[17:03:21    INFO]    - weights:            1
[17:03:21    INFO] ----------------------------------------------------------------------------------------------------
[17:03:21    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(17:03 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(17:03 CRITICAL) [41;37;1mWill terminate !!!![0m
(17:06 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(17:06 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(17:06 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(17:06 INFO) [40;37;1m - 04/04/19 17:06:28 - starting ANNZ[0m
(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=530:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:28    INFO]  -----------------------------------------------------
[17:06:28    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:28    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:29    INFO]  - starting ANNZ::Init()  ... 
[17:06:29    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[17:06:29    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:29    INFO]  -----------------------------------------------------
[17:06:29    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:29    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:30    INFO]  - starting ANNZ::Init()  ... 
[17:06:30    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[17:06:30    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=460:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:30    INFO]  -----------------------------------------------------
[17:06:30    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:30    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:31    INFO]  - starting ANNZ::Init()  ... 
[17:06:31    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[17:06:31    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:31    INFO]  -----------------------------------------------------
[17:06:31    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:31    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:32    INFO]  - starting ANNZ::Init()  ... 
[17:06:32    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[17:06:32    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=940:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:32    INFO]  -----------------------------------------------------
[17:06:32    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:32    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:32    INFO]  - starting ANNZ::Init()  ... 
[17:06:33    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[17:06:33    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:33    INFO]  -----------------------------------------------------
[17:06:33    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:33    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:33    INFO]  - starting ANNZ::Init()  ... 
[17:06:34    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[17:06:34    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=300:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:34    INFO]  -----------------------------------------------------
[17:06:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:34    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:34    INFO]  - starting ANNZ::Init()  ... 
[17:06:35    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[17:06:35    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:35    INFO]  -----------------------------------------------------
[17:06:35    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:35    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:35    INFO]  - starting ANNZ::Init()  ... 
[17:06:35    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[17:06:35    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=330:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:35    INFO]  -----------------------------------------------------
[17:06:35    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:35    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:36    INFO]  - starting ANNZ::Init()  ... 
[17:06:37    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[17:06:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:37    INFO]  -----------------------------------------------------
[17:06:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:37    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:37    INFO]  - starting ANNZ::Init()  ... 
[17:06:37    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[17:06:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:37    INFO]  -----------------------------------------------------
[17:06:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:37    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:38    INFO]  - starting ANNZ::Init()  ... 
[17:06:38    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[17:06:38    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:38    INFO]  -----------------------------------------------------
[17:06:38    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:38    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:39    INFO]  - starting ANNZ::Init()  ... 
[17:06:39    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[17:06:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:39    INFO]  -----------------------------------------------------
[17:06:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:39    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:40    INFO]  - starting ANNZ::Init()  ... 
[17:06:40    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[17:06:40    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:40    INFO]  -----------------------------------------------------
[17:06:40    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:40    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:41    INFO]  - starting ANNZ::Init()  ... 
[17:06:41    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[17:06:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=510:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:41    INFO]  -----------------------------------------------------
[17:06:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:41    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:41    INFO]  - starting ANNZ::Init()  ... 
[17:06:41    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[17:06:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:42    INFO]  -----------------------------------------------------
[17:06:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:42    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:42    INFO]  - starting ANNZ::Init()  ... 
[17:06:42    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[17:06:42    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=270:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:42    INFO]  -----------------------------------------------------
[17:06:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:42    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:43    INFO]  - starting ANNZ::Init()  ... 
[17:06:43    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[17:06:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:43    INFO]  -----------------------------------------------------
[17:06:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:43    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:44    INFO]  - starting ANNZ::Init()  ... 
[17:06:44    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[17:06:44    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:44    INFO]  -----------------------------------------------------
[17:06:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:44    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:44    INFO]  - starting ANNZ::Init()  ... 
[17:06:45    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[17:06:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:45    INFO]  -----------------------------------------------------
[17:06:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:45    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:46    INFO]  - starting ANNZ::Init()  ... 
[17:06:46    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[17:06:46    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:46    INFO]  -----------------------------------------------------
[17:06:46    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:46    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:46    INFO]  - starting ANNZ::Init()  ... 
[17:06:47    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[17:06:47    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=3:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:47    INFO]  -----------------------------------------------------
[17:06:47    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:47    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:48    INFO]  - starting ANNZ::Init()  ... 
[17:06:48    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[17:06:48    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:48    INFO]  -----------------------------------------------------
[17:06:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:48    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:48    INFO]  - starting ANNZ::Init()  ... 
[17:06:49    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[17:06:49    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=10:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:49    INFO]  -----------------------------------------------------
[17:06:49    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:49    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:50    INFO]  - starting ANNZ::Init()  ... 
[17:06:50    INFO]  - found trained "ANNZ_23" (./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/randomReg_ANNZ_23.weights.xml)
[17:06:50    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=820:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:50    INFO]  -----------------------------------------------------
[17:06:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:50    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:50    INFO]  - starting ANNZ::Init()  ... 
[17:06:51    INFO]  - found trained "ANNZ_24" (./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/randomReg_ANNZ_24.weights.xml)
[17:06:51    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=28:BalanceDepth=7:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:51    INFO]  -----------------------------------------------------
[17:06:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:51    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:51    INFO]  - starting ANNZ::Init()  ... 
[17:06:51    INFO]  - found trained "ANNZ_25" (./output/SPEC_advanced24/regres/train/ANNZ_25/ANNZ_25_weights/randomReg_ANNZ_25.weights.xml)
[17:06:51    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m26[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=510:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:51    INFO]  -----------------------------------------------------
[17:06:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:51    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:52    INFO]  - starting ANNZ::Init()  ... 
[17:06:52    INFO]  - found trained "ANNZ_26" (./output/SPEC_advanced24/regres/train/ANNZ_26/ANNZ_26_weights/randomReg_ANNZ_26.weights.xml)
[17:06:52    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m27[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:52    INFO]  -----------------------------------------------------
[17:06:52    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:52    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:53    INFO]  - starting ANNZ::Init()  ... 
[17:06:53    INFO]  - found trained "ANNZ_27" (./output/SPEC_advanced24/regres/train/ANNZ_27/ANNZ_27_weights/randomReg_ANNZ_27.weights.xml)
[17:06:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m28[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=490:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:53    INFO]  -----------------------------------------------------
[17:06:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:53    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:53    INFO]  - starting ANNZ::Init()  ... 
[17:06:54    INFO]  - found trained "ANNZ_28" (./output/SPEC_advanced24/regres/train/ANNZ_28/ANNZ_28_weights/randomReg_ANNZ_28.weights.xml)
[17:06:54    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m29[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:54    INFO]  -----------------------------------------------------
[17:06:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:54    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:55    INFO]  - starting ANNZ::Init()  ... 
[17:06:55    INFO]  - found trained "ANNZ_29" (./output/SPEC_advanced24/regres/train/ANNZ_29/ANNZ_29_weights/randomReg_ANNZ_29.weights.xml)
[17:06:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m30[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:55    INFO]  -----------------------------------------------------
[17:06:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:55    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:55    INFO]  - starting ANNZ::Init()  ... 
[17:06:56    INFO]  - found trained "ANNZ_30" (./output/SPEC_advanced24/regres/train/ANNZ_30/ANNZ_30_weights/randomReg_ANNZ_30.weights.xml)
[17:06:56    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m31[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:56    INFO]  -----------------------------------------------------
[17:06:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:56    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:56    INFO]  - starting ANNZ::Init()  ... 
[17:06:56    INFO]  - found trained "ANNZ_31" (./output/SPEC_advanced24/regres/train/ANNZ_31/ANNZ_31_weights/randomReg_ANNZ_31.weights.xml)
[17:06:56    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m32[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=540:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:56    INFO]  -----------------------------------------------------
[17:06:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:56    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:57    INFO]  - starting ANNZ::Init()  ... 
[17:06:57    INFO]  - found trained "ANNZ_32" (./output/SPEC_advanced24/regres/train/ANNZ_32/ANNZ_32_weights/randomReg_ANNZ_32.weights.xml)
[17:06:57    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m33[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:57    INFO]  -----------------------------------------------------
[17:06:57    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:57    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:58    INFO]  - starting ANNZ::Init()  ... 
[17:06:58    INFO]  - found trained "ANNZ_33" (./output/SPEC_advanced24/regres/train/ANNZ_33/ANNZ_33_weights/randomReg_ANNZ_33.weights.xml)
[17:06:58    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m34[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=460:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:58    INFO]  -----------------------------------------------------
[17:06:58    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:58    INFO]  -----------------------------------------------------------------------------------------------------------
[17:06:59    INFO]  - starting ANNZ::Init()  ... 
[17:06:59    INFO]  - found trained "ANNZ_34" (./output/SPEC_advanced24/regres/train/ANNZ_34/ANNZ_34_weights/randomReg_ANNZ_34.weights.xml)
[17:06:59    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m35[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=19:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:06 INFO) 
[17:06:59    INFO]  -----------------------------------------------------
[17:06:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:06:59    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:00    INFO]  - starting ANNZ::Init()  ... 
[17:07:00    INFO]  - found trained "ANNZ_35" (./output/SPEC_advanced24/regres/train/ANNZ_35/ANNZ_35_weights/randomReg_ANNZ_35.weights.xml)
[17:07:00    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m36[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:00    INFO]  -----------------------------------------------------
[17:07:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:00    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:00    INFO]  - starting ANNZ::Init()  ... 
[17:07:01    INFO]  - found trained "ANNZ_36" (./output/SPEC_advanced24/regres/train/ANNZ_36/ANNZ_36_weights/randomReg_ANNZ_36.weights.xml)
[17:07:01    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m37[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:01    INFO]  -----------------------------------------------------
[17:07:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:01    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:02    INFO]  - starting ANNZ::Init()  ... 
[17:07:02    INFO]  - found trained "ANNZ_37" (./output/SPEC_advanced24/regres/train/ANNZ_37/ANNZ_37_weights/randomReg_ANNZ_37.weights.xml)
[17:07:02    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m38[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=880:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:02    INFO]  -----------------------------------------------------
[17:07:02    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:02    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:02    INFO]  - starting ANNZ::Init()  ... 
[17:07:03    INFO]  - found trained "ANNZ_38" (./output/SPEC_advanced24/regres/train/ANNZ_38/ANNZ_38_weights/randomReg_ANNZ_38.weights.xml)
[17:07:03    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m39[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=28:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:03    INFO]  -----------------------------------------------------
[17:07:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:03    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:03    INFO]  - starting ANNZ::Init()  ... 
[17:07:03    INFO]  - found trained "ANNZ_39" (./output/SPEC_advanced24/regres/train/ANNZ_39/ANNZ_39_weights/randomReg_ANNZ_39.weights.xml)
[17:07:03    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m40[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=300:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:03    INFO]  -----------------------------------------------------
[17:07:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:03    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:04    INFO]  - starting ANNZ::Init()  ... 
[17:07:05    INFO]  - found trained "ANNZ_40" (./output/SPEC_advanced24/regres/train/ANNZ_40/ANNZ_40_weights/randomReg_ANNZ_40.weights.xml)
[17:07:05    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m41[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:05    INFO]  -----------------------------------------------------
[17:07:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:05    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:05    INFO]  - starting ANNZ::Init()  ... 
[17:07:05    INFO]  - found trained "ANNZ_41" (./output/SPEC_advanced24/regres/train/ANNZ_41/ANNZ_41_weights/randomReg_ANNZ_41.weights.xml)
[17:07:05    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m42[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=250:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:05    INFO]  -----------------------------------------------------
[17:07:05    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:05    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:06    INFO]  - starting ANNZ::Init()  ... 
[17:07:06    INFO]  - found trained "ANNZ_42" (./output/SPEC_advanced24/regres/train/ANNZ_42/ANNZ_42_weights/randomReg_ANNZ_42.weights.xml)
[17:07:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m43[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=21:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:06    INFO]  -----------------------------------------------------
[17:07:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:06    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:07    INFO]  - starting ANNZ::Init()  ... 
[17:07:07    INFO]  - found trained "ANNZ_43" (./output/SPEC_advanced24/regres/train/ANNZ_43/ANNZ_43_weights/randomReg_ANNZ_43.weights.xml)
[17:07:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m44[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=430:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:07    INFO]  -----------------------------------------------------
[17:07:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:07    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:08    INFO]  - starting ANNZ::Init()  ... 
[17:07:08    INFO]  - found trained "ANNZ_44" (./output/SPEC_advanced24/regres/train/ANNZ_44/ANNZ_44_weights/randomReg_ANNZ_44.weights.xml)
[17:07:08    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m45[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:08    INFO]  -----------------------------------------------------
[17:07:08    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:08    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:09    INFO]  - starting ANNZ::Init()  ... 
[17:07:10    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_45/saveOpt.txt ...
[17:07:15    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:07:15    INFO] ----------------------------------------------------------------------------------------------------
[17:07:15    INFO]  - will book (ANNZ_45) method(KNN) with options: :nkNN=17:BalanceDepth=6:Kernel=Gaus:VarTransform=N
[17:07:15    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:07:15    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:07:15    INFO]      cuts (train):        ,
[17:07:15    INFO]      cuts (valid):       
[17:07:15    INFO]    - weights:            1
[17:07:15    INFO] ----------------------------------------------------------------------------------------------------
[17:07:15    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
<FATAL>                          : ModulekNN::ComputeMetric() - min value is greater than max value
***> abort program execution
terminate called after throwing an instance of 'std::runtime_error'
  what():  FATAL error
Aborted (core dumped)
(17:07 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(17:07 CRITICAL) [41;37;1mWill terminate !!!![0m
(17:07 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(17:07 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(17:07 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(17:07 INFO) [40;37;1m - 04/04/19 17:07:36 - starting ANNZ[0m
(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=460:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:36    INFO]  -----------------------------------------------------
[17:07:36    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:36    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:37    INFO]  - starting ANNZ::Init()  ... 
[17:07:37    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced24/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[17:07:37    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=11:BalanceDepth=7:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:37    INFO]  -----------------------------------------------------
[17:07:37    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:37    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:38    INFO]  - starting ANNZ::Init()  ... 
[17:07:38    INFO]  - found trained "ANNZ_1" (./output/SPEC_advanced24/regres/train/ANNZ_1/ANNZ_1_weights/randomReg_ANNZ_1.weights.xml)
[17:07:38    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:38    INFO]  -----------------------------------------------------
[17:07:38    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:38    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:39    INFO]  - starting ANNZ::Init()  ... 
[17:07:39    INFO]  - found trained "ANNZ_2" (./output/SPEC_advanced24/regres/train/ANNZ_2/ANNZ_2_weights/randomReg_ANNZ_2.weights.xml)
[17:07:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:39    INFO]  -----------------------------------------------------
[17:07:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:39    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:40    INFO]  - starting ANNZ::Init()  ... 
[17:07:40    INFO]  - found trained "ANNZ_3" (./output/SPEC_advanced24/regres/train/ANNZ_3/ANNZ_3_weights/randomReg_ANNZ_3.weights.xml)
[17:07:40    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=610:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:40    INFO]  -----------------------------------------------------
[17:07:40    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:40    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:40    INFO]  - starting ANNZ::Init()  ... 
[17:07:41    INFO]  - found trained "ANNZ_4" (./output/SPEC_advanced24/regres/train/ANNZ_4/ANNZ_4_weights/randomReg_ANNZ_4.weights.xml)
[17:07:41    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:41    INFO]  -----------------------------------------------------
[17:07:41    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:41    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:41    INFO]  - starting ANNZ::Init()  ... 
[17:07:42    INFO]  - found trained "ANNZ_5" (./output/SPEC_advanced24/regres/train/ANNZ_5/ANNZ_5_weights/randomReg_ANNZ_5.weights.xml)
[17:07:42    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=310:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:42    INFO]  -----------------------------------------------------
[17:07:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:42    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:42    INFO]  - starting ANNZ::Init()  ... 
[17:07:43    INFO]  - found trained "ANNZ_6" (./output/SPEC_advanced24/regres/train/ANNZ_6/ANNZ_6_weights/randomReg_ANNZ_6.weights.xml)
[17:07:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:43    INFO]  -----------------------------------------------------
[17:07:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:43    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:43    INFO]  - starting ANNZ::Init()  ... 
[17:07:43    INFO]  - found trained "ANNZ_7" (./output/SPEC_advanced24/regres/train/ANNZ_7/ANNZ_7_weights/randomReg_ANNZ_7.weights.xml)
[17:07:43    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:43    INFO]  -----------------------------------------------------
[17:07:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:43    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:44    INFO]  - starting ANNZ::Init()  ... 
[17:07:45    INFO]  - found trained "ANNZ_8" (./output/SPEC_advanced24/regres/train/ANNZ_8/ANNZ_8_weights/randomReg_ANNZ_8.weights.xml)
[17:07:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:45    INFO]  -----------------------------------------------------
[17:07:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:45    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:45    INFO]  - starting ANNZ::Init()  ... 
[17:07:45    INFO]  - found trained "ANNZ_9" (./output/SPEC_advanced24/regres/train/ANNZ_9/ANNZ_9_weights/randomReg_ANNZ_9.weights.xml)
[17:07:45    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m10[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=410:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:45    INFO]  -----------------------------------------------------
[17:07:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:45    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:46    INFO]  - starting ANNZ::Init()  ... 
[17:07:46    INFO]  - found trained "ANNZ_10" (./output/SPEC_advanced24/regres/train/ANNZ_10/ANNZ_10_weights/randomReg_ANNZ_10.weights.xml)
[17:07:46    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m11[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=18:BalanceDepth=4:Kernel=Gaus:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:46    INFO]  -----------------------------------------------------
[17:07:46    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:46    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:47    INFO]  - starting ANNZ::Init()  ... 
[17:07:47    INFO]  - found trained "ANNZ_11" (./output/SPEC_advanced24/regres/train/ANNZ_11/ANNZ_11_weights/randomReg_ANNZ_11.weights.xml)
[17:07:47    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m12[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=500:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:47    INFO]  -----------------------------------------------------
[17:07:47    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:47    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:48    INFO]  - starting ANNZ::Init()  ... 
[17:07:48    INFO]  - found trained "ANNZ_12" (./output/SPEC_advanced24/regres/train/ANNZ_12/ANNZ_12_weights/randomReg_ANNZ_12.weights.xml)
[17:07:48    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m13[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:48    INFO]  -----------------------------------------------------
[17:07:48    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:48    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:49    INFO]  - starting ANNZ::Init()  ... 
[17:07:49    INFO]  - found trained "ANNZ_13" (./output/SPEC_advanced24/regres/train/ANNZ_13/ANNZ_13_weights/randomReg_ANNZ_13.weights.xml)
[17:07:49    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m14[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=460:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:49    INFO]  -----------------------------------------------------
[17:07:49    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:49    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:49    INFO]  - starting ANNZ::Init()  ... 
[17:07:50    INFO]  - found trained "ANNZ_14" (./output/SPEC_advanced24/regres/train/ANNZ_14/ANNZ_14_weights/randomReg_ANNZ_14.weights.xml)
[17:07:50    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m15[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:50    INFO]  -----------------------------------------------------
[17:07:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:50    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:50    INFO]  - starting ANNZ::Init()  ... 
[17:07:50    INFO]  - found trained "ANNZ_15" (./output/SPEC_advanced24/regres/train/ANNZ_15/ANNZ_15_weights/randomReg_ANNZ_15.weights.xml)
[17:07:50    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m16[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:50    INFO]  -----------------------------------------------------
[17:07:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:50    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:51    INFO]  - starting ANNZ::Init()  ... 
[17:07:51    INFO]  - found trained "ANNZ_16" (./output/SPEC_advanced24/regres/train/ANNZ_16/ANNZ_16_weights/randomReg_ANNZ_16.weights.xml)
[17:07:51    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m17[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=26:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:51    INFO]  -----------------------------------------------------
[17:07:51    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:51    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:52    INFO]  - starting ANNZ::Init()  ... 
[17:07:52    INFO]  - found trained "ANNZ_17" (./output/SPEC_advanced24/regres/train/ANNZ_17/ANNZ_17_weights/randomReg_ANNZ_17.weights.xml)
[17:07:52    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m18[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=820:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:52    INFO]  -----------------------------------------------------
[17:07:52    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:52    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:52    INFO]  - starting ANNZ::Init()  ... 
[17:07:53    INFO]  - found trained "ANNZ_18" (./output/SPEC_advanced24/regres/train/ANNZ_18/ANNZ_18_weights/randomReg_ANNZ_18.weights.xml)
[17:07:53    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m19[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=28:BalanceDepth=5:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:53    INFO]  -----------------------------------------------------
[17:07:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:53    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:54    INFO]  - starting ANNZ::Init()  ... 
[17:07:54    INFO]  - found trained "ANNZ_19" (./output/SPEC_advanced24/regres/train/ANNZ_19/ANNZ_19_weights/randomReg_ANNZ_19.weights.xml)
[17:07:54    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m20[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=320:BoostType=Bagging:VarTransform=P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:54    INFO]  -----------------------------------------------------
[17:07:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:54    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:54    INFO]  - starting ANNZ::Init()  ... 
[17:07:55    INFO]  - found trained "ANNZ_20" (./output/SPEC_advanced24/regres/train/ANNZ_20/ANNZ_20_weights/randomReg_ANNZ_20.weights.xml)
[17:07:55    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m21[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=16:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:55    INFO]  -----------------------------------------------------
[17:07:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:55    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:56    INFO]  - starting ANNZ::Init()  ... 
[17:07:56    INFO]  - found trained "ANNZ_21" (./output/SPEC_advanced24/regres/train/ANNZ_21/ANNZ_21_weights/randomReg_ANNZ_21.weights.xml)
[17:07:56    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m22[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=270:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:56    INFO]  -----------------------------------------------------
[17:07:56    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:56    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:56    INFO]  - starting ANNZ::Init()  ... 
[17:07:57    INFO]  - found trained "ANNZ_22" (./output/SPEC_advanced24/regres/train/ANNZ_22/ANNZ_22_weights/randomReg_ANNZ_22.weights.xml)
[17:07:57    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m23[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=29:BalanceDepth=4:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:57    INFO]  -----------------------------------------------------
[17:07:57    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:57    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:58    INFO]  - starting ANNZ::Init()  ... 
[17:07:58    INFO]  - found trained "ANNZ_23" (./output/SPEC_advanced24/regres/train/ANNZ_23/ANNZ_23_weights/randomReg_ANNZ_23.weights.xml)
[17:07:58    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m24[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=300:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:58    INFO]  -----------------------------------------------------
[17:07:58    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:58    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:58    INFO]  - starting ANNZ::Init()  ... 
[17:07:59    INFO]  - found trained "ANNZ_24" (./output/SPEC_advanced24/regres/train/ANNZ_24/ANNZ_24_weights/randomReg_ANNZ_24.weights.xml)
[17:07:59    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m25[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:59    INFO]  -----------------------------------------------------
[17:07:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:59    INFO]  -----------------------------------------------------------------------------------------------------------
[17:07:59    INFO]  - starting ANNZ::Init()  ... 
[17:07:59    INFO]  - found trained "ANNZ_25" (./output/SPEC_advanced24/regres/train/ANNZ_25/ANNZ_25_weights/randomReg_ANNZ_25.weights.xml)
[17:07:59    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m26[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=370:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:07 INFO) 
[17:07:59    INFO]  -----------------------------------------------------
[17:07:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:07:59    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:00    INFO]  - starting ANNZ::Init()  ... 
[17:08:00    INFO]  - found trained "ANNZ_26" (./output/SPEC_advanced24/regres/train/ANNZ_26/ANNZ_26_weights/randomReg_ANNZ_26.weights.xml)
[17:08:00    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m27[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:00    INFO]  -----------------------------------------------------
[17:08:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:00    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:01    INFO]  - starting ANNZ::Init()  ... 
[17:08:01    INFO]  - found trained "ANNZ_27" (./output/SPEC_advanced24/regres/train/ANNZ_27/ANNZ_27_weights/randomReg_ANNZ_27.weights.xml)
[17:08:01    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m28[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=380:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:01    INFO]  -----------------------------------------------------
[17:08:01    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:01    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:02    INFO]  - starting ANNZ::Init()  ... 
[17:08:02    INFO]  - found trained "ANNZ_28" (./output/SPEC_advanced24/regres/train/ANNZ_28/ANNZ_28_weights/randomReg_ANNZ_28.weights.xml)
[17:08:02    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m29[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=20:BalanceDepth=6:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:02    INFO]  -----------------------------------------------------
[17:08:02    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:02    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:03    INFO]  - starting ANNZ::Init()  ... 
[17:08:03    INFO]  - found trained "ANNZ_29" (./output/SPEC_advanced24/regres/train/ANNZ_29/ANNZ_29_weights/randomReg_ANNZ_29.weights.xml)
[17:08:03    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m30[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=760:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:03    INFO]  -----------------------------------------------------
[17:08:03    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:03    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:03    INFO]  - starting ANNZ::Init()  ... 
[17:08:04    INFO]  - found trained "ANNZ_30" (./output/SPEC_advanced24/regres/train/ANNZ_30/ANNZ_30_weights/randomReg_ANNZ_30.weights.xml)
[17:08:04    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m31[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=12:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:04    INFO]  -----------------------------------------------------
[17:08:04    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:04    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:04    INFO]  - starting ANNZ::Init()  ... 
[17:08:04    INFO]  - found trained "ANNZ_31" (./output/SPEC_advanced24/regres/train/ANNZ_31/ANNZ_31_weights/randomReg_ANNZ_31.weights.xml)
[17:08:04    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m32[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=360:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:04    INFO]  -----------------------------------------------------
[17:08:04    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:04    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:05    INFO]  - starting ANNZ::Init()  ... 
[17:08:06    INFO]  - found trained "ANNZ_32" (./output/SPEC_advanced24/regres/train/ANNZ_32/ANNZ_32_weights/randomReg_ANNZ_32.weights.xml)
[17:08:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m33[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=27:BalanceDepth=8:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:06    INFO]  -----------------------------------------------------
[17:08:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:06    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:06    INFO]  - starting ANNZ::Init()  ... 
[17:08:06    INFO]  - found trained "ANNZ_33" (./output/SPEC_advanced24/regres/train/ANNZ_33/ANNZ_33_weights/randomReg_ANNZ_33.weights.xml)
[17:08:06    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m34[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=550:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:06    INFO]  -----------------------------------------------------
[17:08:06    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:06    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:07    INFO]  - starting ANNZ::Init()  ... 
[17:08:07    INFO]  - found trained "ANNZ_34" (./output/SPEC_advanced24/regres/train/ANNZ_34/ANNZ_34_weights/randomReg_ANNZ_34.weights.xml)
[17:08:07    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m35[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=13:BalanceDepth=7:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:07    INFO]  -----------------------------------------------------
[17:08:07    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:07    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:08    INFO]  - starting ANNZ::Init()  ... 
[17:08:08    INFO]  - found trained "ANNZ_35" (./output/SPEC_advanced24/regres/train/ANNZ_35/ANNZ_35_weights/randomReg_ANNZ_35.weights.xml)
[17:08:08    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m36[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=390:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:08    INFO]  -----------------------------------------------------
[17:08:08    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:08    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:09    INFO]  - starting ANNZ::Init()  ... 
[17:08:09    INFO]  - found trained "ANNZ_36" (./output/SPEC_advanced24/regres/train/ANNZ_36/ANNZ_36_weights/randomReg_ANNZ_36.weights.xml)
[17:08:09    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m37[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=22:BalanceDepth=4:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:09    INFO]  -----------------------------------------------------
[17:08:09    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:09    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:10    INFO]  - starting ANNZ::Init()  ... 
[17:08:10    INFO]  - found trained "ANNZ_37" (./output/SPEC_advanced24/regres/train/ANNZ_37/ANNZ_37_weights/randomReg_ANNZ_37.weights.xml)
[17:08:10    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m38[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=360:BoostType=AdaBoostR2:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:10    INFO]  -----------------------------------------------------
[17:08:10    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:10    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:11    INFO]  - starting ANNZ::Init()  ... 
[17:08:11    INFO]  - found trained "ANNZ_38" (./output/SPEC_advanced24/regres/train/ANNZ_38/ANNZ_38_weights/randomReg_ANNZ_38.weights.xml)
[17:08:11    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m39[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=3:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:11    INFO]  -----------------------------------------------------
[17:08:11    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:11    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:12    INFO]  - starting ANNZ::Init()  ... 
[17:08:12    INFO]  - found trained "ANNZ_39" (./output/SPEC_advanced24/regres/train/ANNZ_39/ANNZ_39_weights/randomReg_ANNZ_39.weights.xml)
[17:08:12    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m40[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:12    INFO]  -----------------------------------------------------
[17:08:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:12    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:12    INFO]  - starting ANNZ::Init()  ... 
[17:08:13    INFO]  - found trained "ANNZ_40" (./output/SPEC_advanced24/regres/train/ANNZ_40/ANNZ_40_weights/randomReg_ANNZ_40.weights.xml)
[17:08:13    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m41[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=14:BalanceDepth=8:Kernel=Gaus:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:13    INFO]  -----------------------------------------------------
[17:08:13    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:13    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:13    INFO]  - starting ANNZ::Init()  ... 
[17:08:14    INFO]  - found trained "ANNZ_41" (./output/SPEC_advanced24/regres/train/ANNZ_41/ANNZ_41_weights/randomReg_ANNZ_41.weights.xml)
[17:08:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m42[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=480:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:14    INFO]  -----------------------------------------------------
[17:08:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:14    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:14    INFO]  - starting ANNZ::Init()  ... 
[17:08:14    INFO]  - found trained "ANNZ_42" (./output/SPEC_advanced24/regres/train/ANNZ_42/ANNZ_42_weights/randomReg_ANNZ_42.weights.xml)
[17:08:14    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m43[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=25:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:15    INFO]  -----------------------------------------------------
[17:08:15    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:15    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:15    INFO]  - starting ANNZ::Init()  ... 
[17:08:15    INFO]  - found trained "ANNZ_43" (./output/SPEC_advanced24/regres/train/ANNZ_43/ANNZ_43_weights/randomReg_ANNZ_43.weights.xml)
[17:08:15    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m44[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=330:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:15    INFO]  -----------------------------------------------------
[17:08:15    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:15    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:16    INFO]  - starting ANNZ::Init()  ... 
[17:08:16    INFO]  - found trained "ANNZ_44" (./output/SPEC_advanced24/regres/train/ANNZ_44/ANNZ_44_weights/randomReg_ANNZ_44.weights.xml)
[17:08:16    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:08 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:08 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m45[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=17:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:08 INFO) 
[17:08:16    INFO]  -----------------------------------------------------
[17:08:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:08:16    INFO]  -----------------------------------------------------------------------------------------------------------
[17:08:17    INFO]  - starting ANNZ::Init()  ... 
[17:08:18    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_45/saveOpt.txt ...
[17:08:23    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:08:23    INFO] ----------------------------------------------------------------------------------------------------
[17:08:23    INFO]  - will book (ANNZ_45) method(KNN) with options: :nkNN=17:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P
[17:08:23    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:08:23    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:08:23    INFO]      cuts (train):        ,
[17:08:23    INFO]      cuts (valid):       
[17:08:23    INFO]    - weights:            1
[17:08:23    INFO] ----------------------------------------------------------------------------------------------------
[17:08:23    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:08:27    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_45/ANNZ_45_weights/saveTrainOpt_ANNZ_45.txt ...
[17:08:27    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_45 ... 
[17:08:27    INFO]  - Will gen. input-parameter errors ...
[17:08:29    INFO]  - starting ANNZ::loadReaders() ... 
[17:08:32    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[17:13:22    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:13:22    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:13:22    INFO]  -----------------------------------------------------------------------------------------------------------
[17:13:22    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[17:14:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:14:35    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:14:35    INFO]  -----------------------------------------------------------------------------------------------------------
[17:14:35    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_45/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:14:35    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:14:35    INFO]  - will try to derive a bias correction ... 
[17:14:35    INFO]  - will validate that training produced an XML file for later ... 
[17:14:35    INFO]  - starting ANNZ::loadReaders() ... 
[17:14:35    INFO]  - will validate that the training was not a complete failure ... 
[17:14:35    INFO]  - training seems to have been successful! will move on ...
[17:14:35    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[17:14:39    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:14:40    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:14:40    INFO] ----------------------------------------------------------------------------------------------------
[17:14:40    INFO]  - will book (ANNZ_45_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[17:14:40    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:14:40    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[17:14:40    INFO]    - weights:            1
[17:14:40    INFO] ----------------------------------------------------------------------------------------------------
[17:14:40    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:14:44    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_45 ... 
[17:14:44    INFO]  - Will gen. input-parameter errors ...
[17:14:45    INFO]  - starting ANNZ::loadReaders() ... 
[17:14:59    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[17:38:43    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:38:43    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:38:43    INFO]  -----------------------------------------------------------------------------------------------------------
[17:38:43    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[17:44:39    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:44:39    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:44:39    INFO]  -----------------------------------------------------------------------------------------------------------
[17:44:39    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_45/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:44:39    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:44:39    INFO]  - will validate that the bias-correction actually improved the result ...
[17:44:39    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:44:39    INFO]  - Will use (1) MLMs from the input chain: ANNZ_45,
Warning in <Fit>: Fit data is empty 
[17:44:42    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_45/plots/
[17:44:49        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_45/plots output/SPEC_advanced24/regres/train/ANNZ_45/plots_biasCor_before
[17:44:49    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:44:49    INFO]  - Will use (1) MLMs from the input chain: ANNZ_45,
[17:44:51    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_45/plots/
[17:44:58        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_45/plots output/SPEC_advanced24/regres/train/ANNZ_45/plots_biasCor_after
[17:44:58    INFO]  - Got original [KS-test,N_poiss]: [0.606414 , 18.0432] , after the bias-correction: [0.0379068 , 5.69254] --> will KEEP the correction !

(17:45 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:45 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m46[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=450:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:45 INFO) 
[17:45:00    INFO]  -----------------------------------------------------
[17:45:00    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:45:00    INFO]  -----------------------------------------------------------------------------------------------------------
[17:45:00    INFO]  - starting ANNZ::Init()  ... 
[17:45:03    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_46/saveOpt.txt ...
[17:45:09    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:45:09    INFO] ----------------------------------------------------------------------------------------------------
[17:45:09    INFO]  - will book (ANNZ_46) method(BDT) with options: :NTrees=450:BoostType=AdaBoost:VarTransform=N,P
[17:45:09    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:45:09    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:45:09    INFO]      cuts (train):        ,
[17:45:09    INFO]      cuts (valid):       
[17:45:09    INFO]    - weights:            1
[17:45:09    INFO] ----------------------------------------------------------------------------------------------------
[17:45:09    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:45:26    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_46/ANNZ_46_weights/saveTrainOpt_ANNZ_46.txt ...
[17:45:27    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_46 ... 
[17:45:27    INFO]  - Will gen. input-parameter errors ...
[17:45:29    INFO]  - starting ANNZ::loadReaders() ... 
[17:45:32    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[17:46:54    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:46:54    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:46:54    INFO]  -----------------------------------------------------------------------------------------------------------
[17:46:54    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[17:47:14    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:47:14    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:47:14    INFO]  -----------------------------------------------------------------------------------------------------------
[17:47:14    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_46/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:47:15    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:47:15    INFO]  - will try to derive a bias correction ... 
[17:47:15    INFO]  - will validate that training produced an XML file for later ... 
[17:47:15    INFO]  - starting ANNZ::loadReaders() ... 
[17:47:16    INFO]  - will validate that the training was not a complete failure ... 
[17:47:16    INFO]  - training seems to have been successful! will move on ...
[17:47:16    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[17:47:19    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:47:20    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:47:20    INFO] ----------------------------------------------------------------------------------------------------
[17:47:20    INFO]  - will book (ANNZ_46_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[17:47:20    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:47:20    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[17:47:20    INFO]    - weights:            1
[17:47:20    INFO] ----------------------------------------------------------------------------------------------------
[17:47:20    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:47:25    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_46 ... 
[17:47:25    INFO]  - Will gen. input-parameter errors ...
[17:47:26    INFO]  - starting ANNZ::loadReaders() ... 
[17:47:29    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[17:48:52    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:48:52    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:48:52    INFO]  -----------------------------------------------------------------------------------------------------------
[17:48:52    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[17:49:13    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:49:13    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:49:13    INFO]  -----------------------------------------------------------------------------------------------------------
[17:49:13    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_46/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:49:13    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:49:13    INFO]  - will validate that the bias-correction actually improved the result ...
[17:49:13    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:49:13    INFO]  - Will use (1) MLMs from the input chain: ANNZ_46,
Warning in <Fit>: Fit data is empty 
[17:49:16    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_46/plots/
[17:49:23        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_46/plots output/SPEC_advanced24/regres/train/ANNZ_46/plots_biasCor_before
[17:49:23    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:49:23    INFO]  - Will use (1) MLMs from the input chain: ANNZ_46,
[17:49:26    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_46/plots/
[17:49:32        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_46/plots output/SPEC_advanced24/regres/train/ANNZ_46/plots_biasCor_after
[17:49:32    INFO]  - Got original [KS-test,N_poiss]: [0.086713 , 6.35652] , after the bias-correction: [0.0455971 , 5.87017] --> will KEEP the correction !

(17:49 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:49 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m47[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=23:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:49 INFO) 
[17:49:34    INFO]  -----------------------------------------------------
[17:49:34    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:49:34    INFO]  -----------------------------------------------------------------------------------------------------------
[17:49:35    INFO]  - starting ANNZ::Init()  ... 
[17:49:36    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_47/saveOpt.txt ...
[17:49:41    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:49:41    INFO] ----------------------------------------------------------------------------------------------------
[17:49:41    INFO]  - will book (ANNZ_47) method(KNN) with options: :nkNN=23:BalanceDepth=6:Kernel=Gaus:VarTransform=N,P
[17:49:41    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:49:41    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:49:41    INFO]      cuts (train):        ,
[17:49:41    INFO]      cuts (valid):       
[17:49:41    INFO]    - weights:            1
[17:49:41    INFO] ----------------------------------------------------------------------------------------------------
[17:49:41    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:49:45    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_47/ANNZ_47_weights/saveTrainOpt_ANNZ_47.txt ...
[17:49:45    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_47 ... 
[17:49:45    INFO]  - Will gen. input-parameter errors ...
[17:49:46    INFO]  - starting ANNZ::loadReaders() ... 
[17:49:50    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[17:54:42    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:54:42    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:54:42    INFO]  -----------------------------------------------------------------------------------------------------------
[17:54:42    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[17:55:54    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:55:54    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:55:54    INFO]  -----------------------------------------------------------------------------------------------------------
[17:55:54    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_47/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:55:54    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:55:54    INFO]  - will try to derive a bias correction ... 
[17:55:54    INFO]  - will validate that training produced an XML file for later ... 
[17:55:54    INFO]  - starting ANNZ::loadReaders() ... 
[17:55:55    INFO]  - will validate that the training was not a complete failure ... 
[17:55:55    INFO]  - training seems to have been successful! will move on ...
[17:55:55    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[17:56:00    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:56:00    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:56:01    INFO] ----------------------------------------------------------------------------------------------------
[17:56:01    INFO]  - will book (ANNZ_47_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[17:56:01    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:56:01    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[17:56:01    INFO]    - weights:            1
[17:56:01    INFO] ----------------------------------------------------------------------------------------------------
[17:56:01    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:56:04    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_47 ... 
[17:56:04    INFO]  - Will gen. input-parameter errors ...
[17:56:05    INFO]  - starting ANNZ::loadReaders() ... 
[17:56:20    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[18:20:00    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:20:00    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:20:00    INFO]  -----------------------------------------------------------------------------------------------------------
[18:20:00    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[18:25:56    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:25:56    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:25:56    INFO]  -----------------------------------------------------------------------------------------------------------
[18:25:56    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_47/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:25:56    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:25:56    INFO]  - will validate that the bias-correction actually improved the result ...
[18:25:56    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:25:56    INFO]  - Will use (1) MLMs from the input chain: ANNZ_47,
Warning in <Fit>: Fit data is empty 
[18:25:59    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_47/plots/
[18:26:05        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_47/plots output/SPEC_advanced24/regres/train/ANNZ_47/plots_biasCor_before
[18:26:05    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:26:05    INFO]  - Will use (1) MLMs from the input chain: ANNZ_47,
[18:26:08    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_47/plots/
[18:26:14        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_47/plots output/SPEC_advanced24/regres/train/ANNZ_47/plots_biasCor_after
[18:26:14    INFO]  - Got original [KS-test,N_poiss]: [0.626414 , 20.3179] , after the bias-correction: [0.0427008 , 5.9942] --> will KEEP the correction !

(18:26 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:26 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m48[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1050:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:26 INFO) 
[18:26:16    INFO]  -----------------------------------------------------
[18:26:16    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:26:16    INFO]  -----------------------------------------------------------------------------------------------------------
[18:26:17    INFO]  - starting ANNZ::Init()  ... 
[18:26:21    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_48/saveOpt.txt ...
[18:26:26    INFO]  - starting ANNZ::Train_singleReg() ... 
[18:26:26    INFO] ----------------------------------------------------------------------------------------------------
[18:26:26    INFO]  - will book (ANNZ_48) method(BDT) with options: :NTrees=1050:BoostType=Bagging:VarTransform=N
[18:26:26    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:26:26    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[18:26:26    INFO]      cuts (train):        ,
[18:26:26    INFO]      cuts (valid):       
[18:26:26    INFO]    - weights:            1
[18:26:26    INFO] ----------------------------------------------------------------------------------------------------
[18:26:26    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:27:45    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_48/ANNZ_48_weights/saveTrainOpt_ANNZ_48.txt ...
[18:27:51    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_48 ... 
[18:27:51    INFO]  - Will gen. input-parameter errors ...
[18:27:54    INFO]  - starting ANNZ::loadReaders() ... 
[18:28:14    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[18:36:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:36:35    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:36:35    INFO]  -----------------------------------------------------------------------------------------------------------
[18:36:35    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[18:38:38    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:38:38    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:38:38    INFO]  -----------------------------------------------------------------------------------------------------------
[18:38:39    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_48/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:38:41    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:38:41    INFO]  - will try to derive a bias correction ... 
[18:38:41    INFO]  - will validate that training produced an XML file for later ... 
[18:38:41    INFO]  - starting ANNZ::loadReaders() ... 
[18:38:51    INFO]  - will validate that the training was not a complete failure ... 
[18:38:51    INFO]  - training seems to have been successful! will move on ...
[18:38:51    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[18:38:59    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:39:00    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:39:00    INFO] ----------------------------------------------------------------------------------------------------
[18:39:00    INFO]  - will book (ANNZ_48_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[18:39:00    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:39:00    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[18:39:00    INFO]    - weights:            1
[18:39:00    INFO] ----------------------------------------------------------------------------------------------------
[18:39:00    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:39:08    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_48 ... 
[18:39:08    INFO]  - Will gen. input-parameter errors ...
[18:39:10    INFO]  - starting ANNZ::loadReaders() ... 
[18:39:30    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[18:48:36    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:48:36    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:48:36    INFO]  -----------------------------------------------------------------------------------------------------------
[18:48:36    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[18:50:49    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:50:49    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:50:49    INFO]  -----------------------------------------------------------------------------------------------------------
[18:50:49    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_48/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:50:52    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:50:52    INFO]  - will validate that the bias-correction actually improved the result ...
[18:50:52    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:50:52    INFO]  - Will use (1) MLMs from the input chain: ANNZ_48,
[18:50:55    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_48/plots/
[18:51:02        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_48/plots output/SPEC_advanced24/regres/train/ANNZ_48/plots_biasCor_before
[18:51:02    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:51:02    INFO]  - Will use (1) MLMs from the input chain: ANNZ_48,
[18:51:05    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_48/plots/
[18:51:11        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_48/plots output/SPEC_advanced24/regres/train/ANNZ_48/plots_biasCor_after
[18:51:11    INFO]  - Got original [KS-test,N_poiss]: [0.0823438 , 6.69746] , after the bias-correction: [0.048622 , 5.78387] --> will KEEP the correction !

(18:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band2_flux_error;band4_flux_error;band6_flux_error;band8_flux_error;band10_flux_error;band12_flux_error;band14_flux_error;band16_flux_error;band18_flux_error;band20_flux_error;band22_flux_error;band24_flux_error;band26_flux_error;band28_flux_error;band30_flux_error;band32_flux_error;band34_flux_error;band36_flux_error;band38_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m49[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34mrndOptTypes[0m[31m=[0m'[32mKNN[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band2_flux;band4_flux;band6_flux;band8_flux;band10_flux;band12_flux;band14_flux;band16_flux;band18_flux;band20_flux;band22_flux;band24_flux;band26_flux;band28_flux;band30_flux;band32_flux;band34_flux;band36_flux;band38_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=KNN:nkNN=15:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:51 INFO) 
[18:51:15    INFO]  -----------------------------------------------------
[18:51:15    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:51:15    INFO]  -----------------------------------------------------------------------------------------------------------
[18:51:15    INFO]  - starting ANNZ::Init()  ... 
[18:51:19    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/train/ANNZ_49/saveOpt.txt ...
[18:51:24    INFO]  - starting ANNZ::Train_singleReg() ... 
[18:51:24    INFO] ----------------------------------------------------------------------------------------------------
[18:51:24    INFO]  - will book (ANNZ_49) method(KNN) with options: :nkNN=15:BalanceDepth=5:Kernel=Gaus:VarTransform=N,P
[18:51:24    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:51:24    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[18:51:24    INFO]      cuts (train):        ,
[18:51:24    INFO]      cuts (valid):       
[18:51:24    INFO]    - weights:            1
[18:51:24    INFO] ----------------------------------------------------------------------------------------------------
[18:51:24    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:51:27    INFO]  - Saving MLM information in ./output/SPEC_advanced24/regres/train/ANNZ_49/ANNZ_49_weights/saveTrainOpt_ANNZ_49.txt ...
[18:51:28    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_49 ... 
[18:51:28    INFO]  - Will gen. input-parameter errors ...
[18:51:29    INFO]  - starting ANNZ::loadReaders() ... 
[18:51:32    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[18:56:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:56:19    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:56:19    INFO]  -----------------------------------------------------------------------------------------------------------
[18:56:19    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[18:57:31    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:57:31    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:57:31    INFO]  -----------------------------------------------------------------------------------------------------------
[18:57:31    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_49/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:57:31    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:57:31    INFO]  - will try to derive a bias correction ... 
[18:57:31    INFO]  - will validate that training produced an XML file for later ... 
[18:57:31    INFO]  - starting ANNZ::loadReaders() ... 
[18:57:32    INFO]  - will validate that the training was not a complete failure ... 
[18:57:32    INFO]  - training seems to have been successful! will move on ...
[18:57:32    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[18:57:36    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:57:36    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:57:37    INFO] ----------------------------------------------------------------------------------------------------
[18:57:37    INFO]  - will book (ANNZ_49_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[18:57:37    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:57:37    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[18:57:37    INFO]    - weights:            1
[18:57:37    INFO] ----------------------------------------------------------------------------------------------------
[18:57:37    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:57:40    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_49 ... 
[18:57:40    INFO]  - Will gen. input-parameter errors ...
[18:57:41    INFO]  - starting ANNZ::loadReaders() ... 
[18:57:56    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_train*.root
[19:21:23    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:21:23    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[19:21:23    INFO]  -----------------------------------------------------------------------------------------------------------
[19:21:23    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced24/rootIn/ANNZ_tree_valid*.root
[19:27:23    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:27:23    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[19:27:23    INFO]  -----------------------------------------------------------------------------------------------------------
[19:27:23    INFO]  - Saving file ./output/SPEC_advanced24/regres/train/ANNZ_49/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[19:27:23    INFO]  - ending makeTreeRegClsOneMLM() ... 
[19:27:23    INFO]  - will validate that the bias-correction actually improved the result ...
[19:27:23    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:27:23    INFO]  - Will use (1) MLMs from the input chain: ANNZ_49,
Warning in <Fit>: Fit data is empty 
[19:27:26    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_49/plots/
[19:27:32        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_49/plots output/SPEC_advanced24/regres/train/ANNZ_49/plots_biasCor_before
[19:27:32    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:27:32    INFO]  - Will use (1) MLMs from the input chain: ANNZ_49,
[19:27:35    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/train/ANNZ_49/plots/
[19:27:41        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced24/regres/train/ANNZ_49/plots output/SPEC_advanced24/regres/train/ANNZ_49/plots_biasCor_after
[19:27:41    INFO]  - Got original [KS-test,N_poiss]: [0.600982 , 18.9358] , after the bias-correction: [0.0400221 , 5.8226] --> will KEEP the correction !

(19:27 INFO) [40;37;1m - 04/04/19 19:27:43 - finished running ANNZ ![0m
(19:52 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(19:52 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(19:52 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(19:52 INFO) [40;37;1m - 04/04/19 19:52:43 - starting ANNZ[0m
(19:52 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(19:52 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mTrue[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34maddOutputVars[0m[31m=[0m'[32mref_id;zb;pz_width;odds;qz;production_id;paudm_id;ra;dec;zspec;conf[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mnPDFbins[0m[31m=[0m'[32m120[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mMLMsToStore[0m[31m=[0m'[32m[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , [34mnPDFs[0m[31m=[0m'[32m1[0m' , 
(19:52 INFO) 
[19:52:43    INFO]  -----------------------------------------------------
[19:52:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[19:52:43    INFO]  -----------------------------------------------------------------------------------------------------------
[19:52:44    INFO]  - starting ANNZ::Init()  ... 
[19:52:44    INFO]  - Will generate 1 PDFs ... 
(19:53 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(19:53 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(19:53 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(19:53 INFO) [40;37;1m - 04/04/19 19:53:52 - starting ANNZ[0m
(19:53 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(19:53 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mTrue[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34maddOutputVars[0m[31m=[0m'[32mref_id;zb;pz_width;odds;qz;production_id;paudm_id;ra;dec;zspec;conf[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mnPDFbins[0m[31m=[0m'[32m120[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mMLMsToStore[0m[31m=[0m'[32m[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , [34mnPDFs[0m[31m=[0m'[32m1[0m' , 
(19:53 INFO) 
[19:53:52    INFO]  -----------------------------------------------------
[19:53:52    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[19:53:52    INFO]  -----------------------------------------------------------------------------------------------------------
[19:53:53    INFO]  - starting ANNZ::Init()  ... 
[19:53:53    INFO]  - Will generate 1 PDFs ... 
[19:54:06    INFO] --------------------------------------------------------
[19:54:06    INFO]  - All ACCEPTED MLMs: ANNZ_0,ANNZ_1,ANNZ_2,ANNZ_3,ANNZ_4,ANNZ_5,ANNZ_6,ANNZ_7,ANNZ_8,ANNZ_9,ANNZ_10,ANNZ_11,ANNZ_12,ANNZ_13,ANNZ_14,ANNZ_15,ANNZ_16,ANNZ_17,ANNZ_18,ANNZ_19,ANNZ_20,ANNZ_21,ANNZ_22,ANNZ_23,ANNZ_24,ANNZ_25,ANNZ_26,ANNZ_27,ANNZ_28,ANNZ_29,ANNZ_30,ANNZ_31,ANNZ_32,ANNZ_33,ANNZ_34,ANNZ_35,ANNZ_36,ANNZ_37,ANNZ_38,ANNZ_39,ANNZ_40,ANNZ_41,ANNZ_42,ANNZ_43,ANNZ_44,ANNZ_45,ANNZ_46,ANNZ_47,ANNZ_48,ANNZ_49,
[19:54:06    INFO]  - All REJECTED MLMs: 
[19:54:06    INFO] ----------------------------------------------------------------------------------------------------------------
[19:54:11    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/optim/saveOpt.txt ...
[19:55:05    INFO]  - starting ANNZ::Optim() ... 
[19:55:05    INFO]  - starting ANNZ::makeTreeRegClsAllMLM() ... 
[19:55:05    INFO]  - Did not find requred merged result-trees with the correct number of entries -> Will do merging ...
[19:55:31    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:55:32    INFO]  - starting ANNZ::verifyIndicesMLM(ANNZ_tree_train , ./output/SPEC_advanced24/regres/train/postTrain/ANNZ_tree_train_00000.root) ... 
[19:55:57    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:55:57    INFO]  - starting ANNZ::verifyIndicesMLM(ANNZ_tree_valid , ./output/SPEC_advanced24/regres/train/postTrain/ANNZ_tree_valid_00001.root) ... 
[19:56:22    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:56:23    INFO]  - starting ANNZ::verifyIndicesMLM(ANNZ_tree_errKNN , ./output/SPEC_advanced24/regres/train/postTrain/ANNZ_tree_errKNN_00002.root) ... 
[19:56:23    INFO]  - Saving file ./output/SPEC_advanced24/regres/train//postTrain/savePostTrainOpt.txt to log the creation time of the trees ...
[19:56:24    INFO]  - There was need to regenerate the merged result-trees. Will validate that all is good now ...
[19:56:24    INFO]  - Found all requred post-train root files -> Getting from file ./output/SPEC_advanced24/regres/train//postTrain/savePostTrainOpt.txt the creation time of the merged trees and comparing to the creationg time of source result-trees ...
[19:56:24    INFO]  - No new MLMs found ... no need to regenerate the merged trees.
[19:56:24    INFO]  - ending makeTreeRegClsAllMLM() ... 
[19:56:24    INFO]  - starting ANNZ::optimReg() ... 
[19:56:27    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:56:29    INFO]  - starting ANNZ::verifyIndicesMLM(ANNZ_tree_train , ./output/SPEC_advanced24/regres/optim/train/ANNZ_tree_train_00000.root) ... 
[19:56:29    INFO]  - starting ANNZ::fillColosureV() ... 
[19:56:30    INFO]  ---------------------------------------------------------------------------------- 
[19:56:30    INFO]  - Got the following average properties: 
[19:56:30    INFO]  --------------------------------------- 
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_0 	 0.00865531 	 0.051212 	 0.0435556
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_1 	 0.0117703 	 0.072822 	 0.0796591
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_2 	 0.004367 	 0.0693587 	 0.0902068
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_3 	 0.0170895 	 0.0869819 	 0.076876
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_4 	 0.0110292 	 0.0499732 	 0.0774816
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_5 	 0.0110641 	 0.0718521 	 0.0807087
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_6 	 0.00708353 	 0.0496369 	 0.0453371
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_7 	 0.0189135 	 0.09018 	 0.0776126
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_8 	 0.0118979 	 0.0495126 	 0.0794618
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_9 	 0.0172174 	 0.0858533 	 0.0781886
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_10 	 0.00862618 	 0.051818 	 0.0448463
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_11 	 0.0170895 	 0.0869819 	 0.076876
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_12 	 0.00454065 	 0.0693347 	 0.090582
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_13 	 0.0176261 	 0.0886648 	 0.0779567
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_14 	 0.00879428 	 0.0630299 	 0.0804308
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_15 	 0.0175836 	 0.0855058 	 0.0825247
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_16 	 0.00453045 	 0.0691587 	 0.0916221
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_17 	 0.0172012 	 0.0870086 	 0.0782783
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_18 	 0.010965 	 0.0496373 	 0.0782119
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_19 	 0.0189135 	 0.09018 	 0.0776126
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_20 	 0.0111145 	 0.0495636 	 0.0789843
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_21 	 0.0154831 	 0.0855453 	 0.0776369
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_22 	 0.0102183 	 0.0523355 	 0.0837206
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_23 	 0.0176976 	 0.0870723 	 0.0784028
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_24 	 0.00707323 	 0.0503455 	 0.0443922
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_25 	 0.0173305 	 0.0835876 	 0.0803317
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_26 	 0.00881728 	 0.0628525 	 0.0816994
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_27 	 0.0176976 	 0.0870723 	 0.0784028
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_28 	 0.00708353 	 0.0496369 	 0.0453371
[19:56:30    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_29 	 0.0176976 	 0.0870723 	 0.0784028
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_30 	 0.00450585 	 0.0690798 	 0.0911903
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_31 	 0.0172012 	 0.0870086 	 0.0782783
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_32 	 0.0081338 	 0.0519322 	 0.0445573
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_33 	 0.0168113 	 0.0842886 	 0.0802652
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_34 	 0.00412126 	 0.0690353 	 0.091418
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_35 	 0.0163522 	 0.0836372 	 0.0821967
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_36 	 0.0122612 	 0.0494312 	 0.0799525
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_37 	 0.00621059 	 0.061244 	 0.0754325
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_38 	 0.00823028 	 0.05037 	 0.0477186
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_39 	 0.0154831 	 0.0855453 	 0.0776369
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_40 	 0.00932842 	 0.0529045 	 0.082758
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_41 	 0.017158 	 0.0861511 	 0.075291
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_42 	 0.00891581 	 0.063068 	 0.0808793
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_43 	 0.0155185 	 0.0845883 	 0.0801954
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_44 	 0.00673772 	 0.0504396 	 0.0423421
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_45 	 0.0170426 	 0.0864545 	 0.0775214
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_46 	 0.00454065 	 0.0693347 	 0.090582
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_47 	 0.0159222 	 0.0839895 	 0.0802716
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  BDT/ANNZ_48 	 0.0122852 	 0.0493566 	 0.0801333
[19:56:31    INFO]  - type/name,<bias>,<sig68>,<fracSig68_2,3>:  KNN/ANNZ_49 	 0.0175836 	 0.0855058 	 0.0825247
[19:56:31    INFO]  ------------------------------------------------------------------------------------------------- 
[19:56:31    INFO]  - starting ANNZ::getBestANNZ(optimCondReg="sig68") ... 
[19:56:31    INFO]  - Will optimize based on bias and sig68 only (priority on sig68)
[19:56:31    INFO]  - Now trying to find best methods with a limit of 10% of the [sig68] dist, and 20% of the other(s) - iteration 0 ...
[19:56:31    INFO]  - Now trying to find best methods with a limit of 12.5% of the [sig68] dist, and 22.5% of the other(s) - iteration 1 ...
[19:56:31    INFO]  - Found 2 "best" methods (min-threshold was 1) from the bottom 12.5% of the [sig68] dist.
[19:56:31    INFO]  - The "best" MLM is: ANNZ_6
[19:56:31    INFO]  - starting ANNZ::getRndMethodBestPDF() ... 
[19:56:31    INFO]  - initial PDF weights: ANNZ_44:0.059 ANNZ_28:0.057 ANNZ_6:0.055 ANNZ_24:0.053 ANNZ_38:0.052 ANNZ_37:0.050 ANNZ_32:0.048 ANNZ_34:0.046 ANNZ_0:0.045 ANNZ_2:0.043 ANNZ_10:0.041 ANNZ_30:0.039 ANNZ_16:0.037 ANNZ_12:0.036 ANNZ_46:0.034 ANNZ_40:0.032 ANNZ_22:0.030 ANNZ_26:0.029 ANNZ_14:0.027 ANNZ_42:0.025 ANNZ_18:0.023 ANNZ_4:0.021 ANNZ_20:0.020 ANNZ_8:0.018 ANNZ_36:0.016 ANNZ_48:0.014 ANNZ_5:0.012 ANNZ_1:0.011 ANNZ_43:0.009 ANNZ_39:0.007 ANNZ_47:0.005 ANNZ_35:0.004 ANNZ_33:0.002 
[19:56:31    INFO]  - will loop on the input trees ...
[19:56:32    INFO]  - NEW:  0 - min-param best/prev/now: 1.79769e+308 / 1.79769e+308 / 2.50040e-01
[19:56:32    INFO]  - nTry: 1 - min-param best/prev/now: 2.50040e-01 / 2.50040e-01 / 2.50522e-01
[19:56:32    INFO]  - nTry: 2 - min-param best/prev/now: 2.50040e-01 / 2.50040e-01 / 2.51574e-01
[19:56:32    INFO]  - nTry: 3 - min-param best/prev/now: 2.50040e-01 / 2.50040e-01 / 2.51095e-01
[19:56:32    INFO]  - nTry: 4 - min-param best/prev/now: 2.50040e-01 / 2.51095e-01 / 2.50649e-01
[19:56:32    INFO]  - nTry: 5 - min-param best/prev/now: 2.50040e-01 / 2.50649e-01 / 2.50346e-01
[19:56:33    INFO]  - NEW:  6 - min-param best/prev/now: 2.50040e-01 / 2.50346e-01 / 2.49939e-01
[19:56:33    INFO]  - nTry: 7 - min-param best/prev/now: 2.49939e-01 / 2.49939e-01 / 2.50023e-01
[19:56:33    INFO]  - nTry: 8 - min-param best/prev/now: 2.49939e-01 / 2.49939e-01 / 2.50018e-01
[19:56:33    INFO]  - NEW:  9 - min-param best/prev/now: 2.49939e-01 / 2.49939e-01 / 2.49694e-01
[19:56:33    INFO]  - NEW:  10 - min-param best/prev/now: 2.49694e-01 / 2.49694e-01 / 2.49606e-01
[19:56:35    INFO]  - nTry: 20 - min-param best/prev/now: 2.49412e-01 / 2.49412e-01 / 2.49540e-01
[19:56:36    INFO]  - nTry: 30 - min-param best/prev/now: 2.49346e-01 / 2.49445e-01 / 2.49375e-01
[19:56:38    INFO]  - nTry: 40 - min-param best/prev/now: 2.49139e-01 / 2.49139e-01 / 2.49175e-01
[19:56:39    INFO]  - NEW:  50 - min-param best/prev/now: 2.49139e-01 / 2.49139e-01 / 2.49125e-01
[19:56:41    INFO]  - nTry: 60 - min-param best/prev/now: 2.49125e-01 / 2.49223e-01 / 2.49539e-01
[19:56:42    INFO]  - nTry: 70 - min-param best/prev/now: 2.49125e-01 / 2.49732e-01 / 2.49799e-01
[19:56:44    INFO]  - nTry: 80 - min-param best/prev/now: 2.49125e-01 / 2.49803e-01 / 2.50063e-01
[19:56:46    INFO]  - nTry: 90 - min-param best/prev/now: 2.49125e-01 / 2.50224e-01 / 2.50268e-01
[19:56:47    INFO]  - nTry: 100 - min-param best/prev/now: 2.49125e-01 / 2.50279e-01 / 2.50293e-01
[19:56:50    INFO]  - nTry: 120 - min-param best/prev/now: 2.49125e-01 / 2.50299e-01 / 2.50348e-01
[19:56:54    INFO]  - nTry: 140 - min-param best/prev/now: 2.49125e-01 / 2.50495e-01 / 2.50499e-01
[19:56:55    INFO]  - nTry: 150 - min-param best/prev/now: 2.49125e-01 / 2.50578e-01 / 2.50580e-01
[19:56:57    INFO]  - nTry: 160 - min-param best/prev/now: 2.49125e-01 / 2.50449e-01 / 2.50460e-01
[19:57:00    INFO]  - nTry: 180 - min-param best/prev/now: 2.49125e-01 / 2.50362e-01 / 2.50356e-01
[19:57:03    INFO]  - nTry: 200 - min-param best/prev/now: 2.49125e-01 / 2.50450e-01 / 2.50461e-01
[19:57:06    INFO]  - nTry: 220 - min-param best/prev/now: 2.49125e-01 / 2.50623e-01 / 2.50695e-01
[19:57:09    INFO]  - nTry: 240 - min-param best/prev/now: 2.49125e-01 / 2.50762e-01 / 2.50830e-01
[19:57:11    INFO]  - nTry: 250 - min-param best/prev/now: 2.49125e-01 / 2.50877e-01 / 2.50914e-01
[19:57:12    INFO]  - nTry: 260 - min-param best/prev/now: 2.49125e-01 / 2.50914e-01 / 2.50948e-01
[19:57:15    INFO]  - nTry: 280 - min-param best/prev/now: 2.49125e-01 / 2.51063e-01 / 2.51060e-01
[19:57:18    INFO]  - nTry: 300 - min-param best/prev/now: 2.49125e-01 / 2.51042e-01 / 2.51065e-01
[19:57:18    INFO]  - finished PDF optimization! - final minimization parameter: 2.49125e-01 , PDF weights: ANNZ_44:0.093 ANNZ_43:0.082 ANNZ_36:0.071 ANNZ_38:0.066 ANNZ_39:0.065 ANNZ_47:0.064 ANNZ_40:0.063 ANNZ_0:0.051 ANNZ_46:0.050 ANNZ_1:0.047 ANNZ_42:0.042 ANNZ_37:0.023 ANNZ_12:0.021 ANNZ_34:0.020 ANNZ_35:0.018 ANNZ_8:0.016 ANNZ_33:0.016 ANNZ_22:0.016 ANNZ_48:0.016 ANNZ_20:0.016 ANNZ_10:0.015 ANNZ_24:0.015 ANNZ_14:0.014 ANNZ_16:0.014 ANNZ_18:0.013 ANNZ_26:0.012 ANNZ_2:0.012 ANNZ_6:0.011 ANNZ_5:0.010 ANNZ_32:0.008 ANNZ_30:0.008 ANNZ_4:0.007 ANNZ_28:0.006 
[19:57:18    INFO]  - will derive the bias correction for the pdf ... 
[19:57:20    INFO]  - Derived the following PDF(0) weights: ANNZ_0:0.051082, ANNZ_1:0.046896, ANNZ_2:0.011619, ANNZ_3:0.000000, ANNZ_4:0.006678, ANNZ_5:0.009891, ANNZ_6:0.011096, ANNZ_7:0.000000, ANNZ_8:0.016129, ANNZ_9:0.000000, ANNZ_10:0.015100, ANNZ_11:0.000000, ANNZ_12:0.020550, ANNZ_13:0.000000, ANNZ_14:0.014496, ANNZ_15:0.000000, ANNZ_16:0.013991, ANNZ_17:0.000000, ANNZ_18:0.013444, ANNZ_19:0.000000, ANNZ_20:0.015571, ANNZ_21:0.000000, ANNZ_22:0.016011, ANNZ_23:0.000000, ANNZ_24:0.014863, ANNZ_25:0.000000, ANNZ_26:0.012016, ANNZ_27:0.000000, ANNZ_28:0.005777, ANNZ_29:0.000000, ANNZ_30:0.007575, ANNZ_31:0.000000, ANNZ_32:0.007825, ANNZ_33:0.016077, ANNZ_34:0.019704, ANNZ_35:0.017917, ANNZ_36:0.071315, ANNZ_37:0.022795, ANNZ_38:0.066228, ANNZ_39:0.065141, ANNZ_40:0.062953, ANNZ_41:0.000000, ANNZ_42:0.041533, ANNZ_43:0.082235, ANNZ_44:0.093136, ANNZ_45:0.000000, ANNZ_46:0.050197, ANNZ_47:0.064428, ANNZ_48:0.015734, ANNZ_49:0.000000, 
[19:57:20    INFO]  - Saving optimization results in ./output/SPEC_advanced24/regres/optim/saveOptimOpt.txt ...
[19:57:22    INFO]  - Saving bias-correction results in ./output/SPEC_advanced24/regres/optim/saveOptimObj.root ...
[19:57:25    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:57:26    INFO]  - starting ANNZ::verifyIndicesMLM(ANNZ_tree_valid , ./output/SPEC_advanced24/regres/optim/valid/ANNZ_tree_valid_00000.root) ... 
[19:57:29    INFO]  - starting ANNZ::doEvalReg() ... 
[19:57:29    INFO]  - Will gen. input-parameter errors for: ANNZ_0,ANNZ_1,ANNZ_2,ANNZ_3,ANNZ_4,ANNZ_5,ANNZ_6,ANNZ_7,ANNZ_8,ANNZ_9,ANNZ_10,ANNZ_11,ANNZ_12,ANNZ_13,ANNZ_14,ANNZ_15,ANNZ_16,ANNZ_17,ANNZ_18,ANNZ_19,ANNZ_20,ANNZ_21,ANNZ_22,ANNZ_23,ANNZ_24,ANNZ_25,ANNZ_26,ANNZ_27,ANNZ_28,ANNZ_29,ANNZ_30,ANNZ_31,ANNZ_32,ANNZ_33,ANNZ_34,ANNZ_35,ANNZ_36,ANNZ_37,ANNZ_38,ANNZ_39,ANNZ_40,ANNZ_41,ANNZ_42,ANNZ_43,ANNZ_44,ANNZ_45,ANNZ_46,ANNZ_47,ANNZ_48,ANNZ_49,
[19:57:29    INFO]  - Reading bias-correction results from ./output/SPEC_advanced24/regres/optim/saveOptimObj.root ...
[19:57:29    INFO]  - Getting optimization results from ./output/SPEC_advanced24/regres/optim/saveOptimOpt.txt ...
[19:57:29    INFO]  - creating final MLM and PDFs trees from input MLM trees ...
[19:57:30    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:57:30    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[19:57:30    INFO]  -----------------------------------------------------------------------------------------------------------
[19:57:31    INFO]  - starting storeTreeToAscii() ... 
[19:57:31    INFO]  - will write to file the following branches: ref_id,zb,pz_width,odds,qz,production_id,paudm_id,ra,dec,zspec,conf,ANNZ_best,ANNZ_best_wgt,ANNZ_best_err,ANNZ_MLM_avg_0,ANNZ_MLM_avg_0_err,ANNZ_MLM_avg_0_wgt,ANNZ_PDF_avg_0,ANNZ_PDF_avg_0_err,ANNZ_PDF_avg_0_wgt,ANNZ_PDF_0_0,ANNZ_PDF_0_1,ANNZ_PDF_0_2,ANNZ_PDF_0_3,ANNZ_PDF_0_4,ANNZ_PDF_0_5,ANNZ_PDF_0_6,ANNZ_PDF_0_7,ANNZ_PDF_0_8,ANNZ_PDF_0_9,ANNZ_PDF_0_10,ANNZ_PDF_0_11,ANNZ_PDF_0_12,ANNZ_PDF_0_13,ANNZ_PDF_0_14,ANNZ_PDF_0_15,ANNZ_PDF_0_16,ANNZ_PDF_0_17,ANNZ_PDF_0_18,ANNZ_PDF_0_19,ANNZ_PDF_0_20,ANNZ_PDF_0_21,ANNZ_PDF_0_22,ANNZ_PDF_0_23,ANNZ_PDF_0_24,ANNZ_PDF_0_25,ANNZ_PDF_0_26,ANNZ_PDF_0_27,ANNZ_PDF_0_28,ANNZ_PDF_0_29,ANNZ_PDF_0_30,ANNZ_PDF_0_31,ANNZ_PDF_0_32,ANNZ_PDF_0_33,ANNZ_PDF_0_34,ANNZ_PDF_0_35,ANNZ_PDF_0_36,ANNZ_PDF_0_37,ANNZ_PDF_0_38,ANNZ_PDF_0_39,ANNZ_PDF_0_40,ANNZ_PDF_0_41,ANNZ_PDF_0_42,ANNZ_PDF_0_43,ANNZ_PDF_0_44,ANNZ_PDF_0_45,ANNZ_PDF_0_46,ANNZ_PDF_0_47,ANNZ_PDF_0_48,ANNZ_PDF_0_49,ANNZ_PDF_0_50,ANNZ_PDF_0_51,ANNZ_PDF_0_52,ANNZ_PDF_0_53,ANNZ_PDF_0_54,ANNZ_PDF_0_55,ANNZ_PDF_0_56,ANNZ_PDF_0_57,ANNZ_PDF_0_58,ANNZ_PDF_0_59,ANNZ_PDF_0_60,ANNZ_PDF_0_61,ANNZ_PDF_0_62,ANNZ_PDF_0_63,ANNZ_PDF_0_64,ANNZ_PDF_0_65,ANNZ_PDF_0_66,ANNZ_PDF_0_67,ANNZ_PDF_0_68,ANNZ_PDF_0_69,ANNZ_PDF_0_70,ANNZ_PDF_0_71,ANNZ_PDF_0_72,ANNZ_PDF_0_73,ANNZ_PDF_0_74,ANNZ_PDF_0_75,ANNZ_PDF_0_76,ANNZ_PDF_0_77,ANNZ_PDF_0_78,ANNZ_PDF_0_79,ANNZ_PDF_0_80,ANNZ_PDF_0_81,ANNZ_PDF_0_82,ANNZ_PDF_0_83,ANNZ_PDF_0_84,ANNZ_PDF_0_85,ANNZ_PDF_0_86,ANNZ_PDF_0_87,ANNZ_PDF_0_88,ANNZ_PDF_0_89,ANNZ_PDF_0_90,ANNZ_PDF_0_91,ANNZ_PDF_0_92,ANNZ_PDF_0_93,ANNZ_PDF_0_94,ANNZ_PDF_0_95,ANNZ_PDF_0_96,ANNZ_PDF_0_97,ANNZ_PDF_0_98,ANNZ_PDF_0_99,ANNZ_PDF_0_100,ANNZ_PDF_0_101,ANNZ_PDF_0_102,ANNZ_PDF_0_103,ANNZ_PDF_0_104,ANNZ_PDF_0_105,ANNZ_PDF_0_106,ANNZ_PDF_0_107,ANNZ_PDF_0_108,ANNZ_PDF_0_109,ANNZ_PDF_0_110,ANNZ_PDF_0_111,ANNZ_PDF_0_112,ANNZ_PDF_0_113,ANNZ_PDF_0_114,ANNZ_PDF_0_115,ANNZ_PDF_0_116,ANNZ_PDF_0_117,ANNZ_PDF_0_118,ANNZ_PDF_0_119,
[19:57:31    INFO]  - Will parse  ANNZ_tree_randomReg(2232)... Now in ./output/SPEC_advanced24/regres/optim/eval/ANNZ_randomReg_0000.csv
[19:57:31    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:57:31    INFO]  -- ANNZ_randomReg .................................. 2232  nObj
[19:57:31    INFO]  -----------------------------------------------------------------------------------------------------------
[19:57:31    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:57:31    INFO]  - Will use (1) MLMs from the input chain: ANNZ_best,
[19:57:31    INFO]  - Will use (1) PDFs from the input chain: PDF_0,
[19:57:38    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/optim/eval/plots/

(19:57 INFO) [40;37;1m - 04/04/19 19:57:44 - finished running ANNZ ![0m
(19:57 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(19:57 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(19:57 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(19:57 INFO) [40;37;1m - 04/04/19 19:57:45 - starting ANNZ[0m
(19:57 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(19:57 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m50[0m' , [34minDirName[0m[31m=[0m'[32mPAUS/[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced24[0m' , [34maddOutputVars[0m[31m=[0m'[32mref_id;zb;pz_width;odds;qz;production_id;paudm_id;ra;dec;zspec;conf[0m' , [34mevalDirPostfix[0m[31m=[0m'[32mnFile1[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minAsciiFiles[0m[31m=[0m'[32mANNz_data10c.csv[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34minAsciiVars[0m[31m=[0m'[32mF:ref_id;F:zb;F:pz_width;F:odds;F:qz;F:production_id;F:paudm_id;F:ra;F:dec;F:zspec;F:conf;F:i_auto;F:umag;F:bmag;F:vmag;F:gmag;F:rmag;F:jmag;F:kmag;F:i_auto_err;F:umag_err;F:bmag_err;F:vmag_err;F:gmag_err;F:rmag_err;F:jmag_err;F:kmag_err;F:band0_flux;F:band1_flux;F:band2_flux;F:band3_flux;F:band4_flux;F:band5_flux;F:band6_flux;F:band7_flux;F:band8_flux;F:band9_flux;F:band10_flux;F:band11_flux;F:band12_flux;F:band13_flux;F:band14_flux;F:band15_flux;F:band16_flux;F:band17_flux;F:band18_flux;F:band19_flux;F:band20_flux;F:band21_flux;F:band22_flux;F:band23_flux;F:band24_flux;F:band25_flux;F:band26_flux;F:band27_flux;F:band28_flux;F:band29_flux;F:band30_flux;F:band31_flux;F:band32_flux;F:band33_flux;F:band34_flux;F:band35_flux;F:band36_flux;F:band37_flux;F:band38_flux;F:band39_flux;F:band0_flux_error;F:band1_flux_error;F:band2_flux_error;F:band3_flux_error;F:band4_flux_error;F:band5_flux_error;F:band6_flux_error;F:band7_flux_error;F:band8_flux_error;F:band9_flux_error;F:band10_flux_error;F:band11_flux_error;F:band12_flux_error;F:band13_flux_error;F:band14_flux_error;F:band15_flux_error;F:band16_flux_error;F:band17_flux_error;F:band18_flux_error;F:band19_flux_error;F:band20_flux_error;F:band21_flux_error;F:band22_flux_error;F:band23_flux_error;F:band24_flux_error;F:band25_flux_error;F:band26_flux_error;F:band27_flux_error;F:band28_flux_error;F:band29_flux_error;F:band30_flux_error;F:band31_flux_error;F:band32_flux_error;F:band33_flux_error;F:band34_flux_error;F:band35_flux_error;F:band36_flux_error;F:band37_flux_error;F:band38_flux_error;F:band39_flux_error[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mnPDFbins[0m[31m=[0m'[32m120[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mMLMsToStore[0m[31m=[0m'[32m[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , [34mnPDFs[0m[31m=[0m'[32m1[0m' , 
(19:57 INFO) 
[19:57:45    INFO]  -----------------------------------------------------
[19:57:45    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[19:57:45    INFO]  -----------------------------------------------------------------------------------------------------------
[19:57:45    INFO]  - starting ANNZ::Init()  ... 
[19:57:45    INFO]  - Will generate 1 PDFs ... 
[19:57:59    INFO] --------------------------------------------------------
[19:57:59    INFO]  - All ACCEPTED MLMs: ANNZ_0,ANNZ_1,ANNZ_2,ANNZ_3,ANNZ_4,ANNZ_5,ANNZ_6,ANNZ_7,ANNZ_8,ANNZ_9,ANNZ_10,ANNZ_11,ANNZ_12,ANNZ_13,ANNZ_14,ANNZ_15,ANNZ_16,ANNZ_17,ANNZ_18,ANNZ_19,ANNZ_20,ANNZ_21,ANNZ_22,ANNZ_23,ANNZ_24,ANNZ_25,ANNZ_26,ANNZ_27,ANNZ_28,ANNZ_29,ANNZ_30,ANNZ_31,ANNZ_32,ANNZ_33,ANNZ_34,ANNZ_35,ANNZ_36,ANNZ_37,ANNZ_38,ANNZ_39,ANNZ_40,ANNZ_41,ANNZ_42,ANNZ_43,ANNZ_44,ANNZ_45,ANNZ_46,ANNZ_47,ANNZ_48,ANNZ_49,
[19:57:59    INFO]  - All REJECTED MLMs: 
[19:57:59    INFO] ----------------------------------------------------------------------------------------------------------------
[19:58:01    INFO]  - Saving run information in ./output/SPEC_advanced24/regres/eval_nFile1/saveOpt.txt ...
[19:58:55    INFO]  - starting inputToFullTree(ANNz_data10c.csv) ... 
[19:58:55    INFO]  - Found 2232 lines in file PAUS/ANNz_data10c.csv -> total so far = 2232 ... 
[19:58:55    INFO]  - Now reading-in PAUS/ANNz_data10c.csv ... 
[19:58:55    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:58:55    INFO]  -- ANNZ_tree_eval .................................. 2232  nLine
[19:58:55    INFO]  -- ANNZ_tree_eval .................................. 2232  nObj
[19:58:55    INFO]  -----------------------------------------------------------------------------------------------------------
[19:58:55    INFO]  - starting ANNZ::Eval() ... 
[19:58:55    INFO]  - starting ANNZ::doEvalReg() ... 
[19:58:55    INFO]  - Will gen. input-parameter errors for: ANNZ_0,ANNZ_1,ANNZ_2,ANNZ_3,ANNZ_4,ANNZ_5,ANNZ_6,ANNZ_7,ANNZ_8,ANNZ_9,ANNZ_10,ANNZ_11,ANNZ_12,ANNZ_13,ANNZ_14,ANNZ_15,ANNZ_16,ANNZ_17,ANNZ_18,ANNZ_19,ANNZ_20,ANNZ_21,ANNZ_22,ANNZ_23,ANNZ_24,ANNZ_25,ANNZ_26,ANNZ_27,ANNZ_28,ANNZ_29,ANNZ_30,ANNZ_31,ANNZ_32,ANNZ_33,ANNZ_34,ANNZ_35,ANNZ_36,ANNZ_37,ANNZ_38,ANNZ_39,ANNZ_40,ANNZ_41,ANNZ_42,ANNZ_43,ANNZ_44,ANNZ_45,ANNZ_46,ANNZ_47,ANNZ_48,ANNZ_49,
[19:58:55    INFO]  - Reading bias-correction results from ./output/SPEC_advanced24/regres/optim/saveOptimObj.root ...
[19:58:55    INFO]  - Getting optimization results from ./output/SPEC_advanced24/regres/optim/saveOptimOpt.txt ...
[19:58:55    INFO]  - creating MLM trees from input ...
[19:58:55    INFO]  - nDivLoopNow(1/1) -> will use the following MLMs: ANNZ_0,ANNZ_1,ANNZ_2,ANNZ_4,ANNZ_5,ANNZ_6,ANNZ_8,ANNZ_10,ANNZ_12,ANNZ_14,ANNZ_16,ANNZ_18,ANNZ_20,ANNZ_22,ANNZ_24,ANNZ_26,ANNZ_28,ANNZ_30,ANNZ_32,ANNZ_33,ANNZ_34,ANNZ_35,ANNZ_36,ANNZ_37,ANNZ_38,ANNZ_39,ANNZ_40,ANNZ_42,ANNZ_43,ANNZ_44,ANNZ_46,ANNZ_47,ANNZ_48,
[19:58:55    INFO]  - starting ANNZ::loadReaders() ... 
[20:29:37    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[20:29:37    INFO]  -- ANNZ_tree_eval .................................. 2232  nObj
[20:29:37    INFO]  -----------------------------------------------------------------------------------------------------------
[20:29:38    INFO]  - creating final MLM and PDFs trees from input MLM trees ...
[20:29:39    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[20:29:39    INFO]  -- ANNZ_tree_MLM_nDiv0 ............................. 2232  nObj
[20:29:39    INFO]  -----------------------------------------------------------------------------------------------------------
[20:29:39    INFO]  - starting storeTreeToAscii() ... 
[20:29:39    INFO]  - will write to file the following branches: ref_id,zb,pz_width,odds,qz,production_id,paudm_id,ra,dec,zspec,conf,ANNZ_best,ANNZ_best_wgt,ANNZ_best_err,ANNZ_MLM_avg_0,ANNZ_MLM_avg_0_err,ANNZ_MLM_avg_0_wgt,ANNZ_PDF_avg_0,ANNZ_PDF_avg_0_err,ANNZ_PDF_avg_0_wgt,ANNZ_PDF_0_0,ANNZ_PDF_0_1,ANNZ_PDF_0_2,ANNZ_PDF_0_3,ANNZ_PDF_0_4,ANNZ_PDF_0_5,ANNZ_PDF_0_6,ANNZ_PDF_0_7,ANNZ_PDF_0_8,ANNZ_PDF_0_9,ANNZ_PDF_0_10,ANNZ_PDF_0_11,ANNZ_PDF_0_12,ANNZ_PDF_0_13,ANNZ_PDF_0_14,ANNZ_PDF_0_15,ANNZ_PDF_0_16,ANNZ_PDF_0_17,ANNZ_PDF_0_18,ANNZ_PDF_0_19,ANNZ_PDF_0_20,ANNZ_PDF_0_21,ANNZ_PDF_0_22,ANNZ_PDF_0_23,ANNZ_PDF_0_24,ANNZ_PDF_0_25,ANNZ_PDF_0_26,ANNZ_PDF_0_27,ANNZ_PDF_0_28,ANNZ_PDF_0_29,ANNZ_PDF_0_30,ANNZ_PDF_0_31,ANNZ_PDF_0_32,ANNZ_PDF_0_33,ANNZ_PDF_0_34,ANNZ_PDF_0_35,ANNZ_PDF_0_36,ANNZ_PDF_0_37,ANNZ_PDF_0_38,ANNZ_PDF_0_39,ANNZ_PDF_0_40,ANNZ_PDF_0_41,ANNZ_PDF_0_42,ANNZ_PDF_0_43,ANNZ_PDF_0_44,ANNZ_PDF_0_45,ANNZ_PDF_0_46,ANNZ_PDF_0_47,ANNZ_PDF_0_48,ANNZ_PDF_0_49,ANNZ_PDF_0_50,ANNZ_PDF_0_51,ANNZ_PDF_0_52,ANNZ_PDF_0_53,ANNZ_PDF_0_54,ANNZ_PDF_0_55,ANNZ_PDF_0_56,ANNZ_PDF_0_57,ANNZ_PDF_0_58,ANNZ_PDF_0_59,ANNZ_PDF_0_60,ANNZ_PDF_0_61,ANNZ_PDF_0_62,ANNZ_PDF_0_63,ANNZ_PDF_0_64,ANNZ_PDF_0_65,ANNZ_PDF_0_66,ANNZ_PDF_0_67,ANNZ_PDF_0_68,ANNZ_PDF_0_69,ANNZ_PDF_0_70,ANNZ_PDF_0_71,ANNZ_PDF_0_72,ANNZ_PDF_0_73,ANNZ_PDF_0_74,ANNZ_PDF_0_75,ANNZ_PDF_0_76,ANNZ_PDF_0_77,ANNZ_PDF_0_78,ANNZ_PDF_0_79,ANNZ_PDF_0_80,ANNZ_PDF_0_81,ANNZ_PDF_0_82,ANNZ_PDF_0_83,ANNZ_PDF_0_84,ANNZ_PDF_0_85,ANNZ_PDF_0_86,ANNZ_PDF_0_87,ANNZ_PDF_0_88,ANNZ_PDF_0_89,ANNZ_PDF_0_90,ANNZ_PDF_0_91,ANNZ_PDF_0_92,ANNZ_PDF_0_93,ANNZ_PDF_0_94,ANNZ_PDF_0_95,ANNZ_PDF_0_96,ANNZ_PDF_0_97,ANNZ_PDF_0_98,ANNZ_PDF_0_99,ANNZ_PDF_0_100,ANNZ_PDF_0_101,ANNZ_PDF_0_102,ANNZ_PDF_0_103,ANNZ_PDF_0_104,ANNZ_PDF_0_105,ANNZ_PDF_0_106,ANNZ_PDF_0_107,ANNZ_PDF_0_108,ANNZ_PDF_0_109,ANNZ_PDF_0_110,ANNZ_PDF_0_111,ANNZ_PDF_0_112,ANNZ_PDF_0_113,ANNZ_PDF_0_114,ANNZ_PDF_0_115,ANNZ_PDF_0_116,ANNZ_PDF_0_117,ANNZ_PDF_0_118,ANNZ_PDF_0_119,
[20:29:39    INFO]  - Will parse  ANNZ_tree_randomReg(2232)... Now in ./output/SPEC_advanced24/regres/eval_nFile1/ANNZ_randomReg_0000.csv
[20:29:39    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[20:29:39    INFO]  -- ANNZ_randomReg .................................. 2232  nObj
[20:29:39    INFO]  -----------------------------------------------------------------------------------------------------------
[20:29:41    INFO]  - detected the target,zspec in the evaluated sample - Will create performance plots ...
[20:29:41    INFO]  - starting ANNZ::doMetricPlots() ... 
[20:29:41    INFO]  - Will use (1) MLMs from the input chain: ANNZ_best,
[20:29:41    INFO]  - Will use (1) PDFs from the input chain: PDF_0,
[20:29:47    INFO]  - Writing to plotting directory output/SPEC_advanced24/regres/eval_nFile1/plots/

(20:29 INFO) [40;37;1m - 04/04/19 20:29:53 - finished running ANNZ ![0m
