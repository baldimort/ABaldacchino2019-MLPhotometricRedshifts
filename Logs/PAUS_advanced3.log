(15:51 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(15:51 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(15:51 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(15:51 INFO) [40;37;1m - 21/01/19 15:51:30 - starting ANNZ[0m
(15:51 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(15:51 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34msplitType[0m[31m=[0m'[32mrandom[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34minDirName[0m[31m=[0m'[32mPAUS/[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minAsciiFiles[0m[31m=[0m'[32mANNz_data5a.csv[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34minAsciiVars[0m[31m=[0m'[32mF:band0flux;F:band1flux;F:band2flux;F:band3flux;F:band4flux;F:band5flux;F:band6flux;F:band7flux;F:band8flux;F:band9flux;F:band10flux;F:band11flux;F:band12flux;F:band13flux;F:band14flux;F:band15flux;F:band16flux;F:band17flux;F:band18flux;F:band19flux;F:band20flux;F:band21flux;F:band22flux;F:band23flux;F:band24flux;F:band25flux;F:band26flux;F:band27flux;F:band28flux;F:band29flux;F:band30flux;F:band31flux;F:band32flux;F:band33flux;F:band34flux;F:band35flux;F:band36flux;F:band37flux;F:band38flux;F:band39flux;F:band0fluxerror;F:band1fluxerror;F:band2fluxerror;F:band3fluxerror;F:band4fluxerror;F:band5fluxerror;F:band6fluxerror;F:band7fluxerror;F:band8fluxerror;F:band9fluxerror;F:band10fluxerror;F:band11fluxerror;F:band12fluxerror;F:band13fluxerror;F:band14fluxerror;F:band15fluxerror;F:band16fluxerror;F:band17fluxerror;F:band18fluxerror;F:band19fluxerror;F:band20fluxerror;F:band21fluxerror;F:band22fluxerror;F:band23fluxerror;F:band24fluxerror;F:band25fluxerror;F:band26fluxerror;F:band27fluxerror;F:band28fluxerror;F:band29fluxerror;F:band30fluxerror;F:band31fluxerror;F:band32fluxerror;F:band33fluxerror;F:band34fluxerror;F:band35fluxerror;F:band36fluxerror;F:band37fluxerror;F:band38fluxerror;F:band39fluxerror;F:i_auto;F:umag;F:bmag;F:vmag;F:gmag;F:rmag;F:jmag;F:kmag;F:i_auto_err;F:umag_err;F:bmag_err;F:vmag_err;F:gmag_err;F:rmag_err;F:jmag_err;F:kmag_err;F:Z;F:Zerror[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mTrue[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(15:51 INFO) 
[15:51:30    INFO] [32m -----------------------------------------------------[0m
[15:51:30    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[15:51:30    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[15:51:33    INFO] [40;37;1m[34m - starting inputToSplitTree([31mANNz_data5a.csv[34m) ... [0m
[15:51:33    INFO] [32m - Now reading-in [33mPAUS/ANNz_data5a.csv[32m ... [0m
[15:51:35    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[15:51:35    INFO] [35m -- [34mANNZ_tree [35m...........................[33m 0  [32mindex[0m
[15:51:35    INFO] [35m -- [34mANNZ_tree [35m.......................[33m 26683  [32mnLine[0m
[15:51:35    INFO] [35m -- [34mANNZ_tree [35m.......................[33m 26683  [32mnLineFile[0m
[15:51:35    INFO] [35m -- [34mANNZ_tree [35m.......................[33m 26683  [32mnObj[0m
[15:51:35    INFO] [35m -- [34mANNZ_tree [35m.......................[33m 13352  [32mnTest[0m
[15:51:35    INFO] [35m -- [34mANNZ_tree [35m.......................[33m 13331  [32mnTrain[0m
[15:51:35    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[15:51:36    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/rootIn/plots/[0m
[15:51:37    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/rootIn/plots/[0m

(15:51 INFO) [40;37;1m - 21/01/19 15:51:39 - finished running ANNZ ![0m
(16:06 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(16:06 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(16:06 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(16:06 INFO) [40;37;1m - 21/01/19 16:06:13 - starting ANNZ[0m
(16:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mband0fluxerror;band1fluxerror;band2fluxerror;band3fluxerror;band4fluxerror;band5fluxerror;band6fluxerror;band7fluxerror;band8fluxerror;band9fluxerror;band10fluxerror;band11fluxerror;band12fluxerror;band13fluxerror;band14fluxerror;band15fluxerror;band16fluxerror;band17fluxerror;band18fluxerror;band19fluxerror;band20fluxerror;band21fluxerror;band22fluxerror;band23fluxerror;band24fluxerror;band25fluxerror;band26fluxerror;band27fluxerror;band28fluxerror;band29fluxerror;band30fluxerror;band31fluxerror;band32fluxerror;band33fluxerror;band34fluxerror;band35fluxerror;band36fluxerror;band37fluxerror;band38fluxerror;band39fluxerror;i_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mband0flux;band1flux;band2flux;band3flux;band4flux;band5flux;band6flux;band7flux;band8flux;band9flux;band10flux;band11flux;band12flux;band13flux;band14flux;band15flux;band16flux;band17flux;band18flux;band19flux;band20flux;band21flux;band22flux;band23flux;band24flux;band25flux;band26flux;band27flux;band28flux;band29flux;band30flux;band31flux;band32flux;band33flux;band34flux;band35flux;band36flux;band37flux;band38flux;band39flux;i_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32m[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:06 INFO) 
[16:06:13    INFO] [32m -----------------------------------------------------[0m
[16:06:13    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[16:06:13    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[16:06:14    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[16:06:16    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/train/ANNZ_0/saveOpt.txt[33m ...[0m
[16:06:29    INFO] [40;37;1m[34m - starting ANNZ::Train_singleReg() ... [0m
[16:06:30    INFO] [34m - Found userMLMopts = "" - will generate randomized options... [0m
[16:06:30    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[16:06:30    INFO] [94m - will book ([33mANNZ_0[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=590:BoostType=AdaBoost[0m
[16:06:30    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random::NormMode=NumEvents[0m
[16:06:30    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[94m ,[0m
[16:06:30    INFO] [94m     cuts (train):       [36m[94m ,[0m
[16:06:30    INFO] [94m     cuts (valid):       [36m[0m
[16:06:30    INFO] [94m   - weights:            [36m1[0m
[16:06:30    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[16:06:30    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[16:07:15    INFO] [33m - Saving MLM information in [32m./output/PAUS_advanced3/regres/train/ANNZ_0/ANNZ_0_weights/saveTrainOpt_ANNZ_0.txt[33m ...[0m
[16:07:18    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_0[35m ... [0m
[16:07:18    INFO] [33m - Will gen. input-parameter errors ...[0m
[16:07:20    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[16:07:28    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[16:09:31    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:09:31    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:09:31    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[16:09:31    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:10:12    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:10:12    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:10:12    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[16:10:12    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:10:12    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[16:12:17    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:12:17    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:12:17    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[16:12:17    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:12:58    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:12:58    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:12:58    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[16:12:58    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:12:58    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_0/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[16:12:59    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[16:12:59    INFO] [33m - will try to derive a bias correction ... [0m
[16:12:59    INFO] [34m - will validate that training produced an XML file for later ... [0m
[16:12:59    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[16:13:02    INFO] [34m - will validate that the training was not a complete failure ... [0m
[16:13:02    INFO] [34m - training seems to have been successful! will move on ...[0m
[16:13:02    INFO] [40;37;1m[34m - starting ANNZ::Train_singleRegBiasCor() ... [0m
[16:13:05    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[16:13:06    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[16:13:08    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[16:13:08    INFO] [94m - will book ([33mANNZ_0_bias[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m
[16:13:08    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents[0m
[16:13:08    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[0m
[16:13:08    INFO] [94m   - weights:            [36m1[0m
[16:13:08    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[16:13:08    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[16:13:17    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_0[35m ... [0m
[16:13:17    INFO] [33m - Will gen. input-parameter errors ...[0m
[16:13:19    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[16:13:26    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[16:15:14    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:15:14    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:15:14    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[16:15:14    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:15:50    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:15:50    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:15:50    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[16:15:50    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:15:50    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[16:17:37    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:17:37    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:17:37    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[16:17:37    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:18:13    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:18:13    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:18:13    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[16:18:13    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:18:13    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_0/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[16:18:15    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[16:18:15    INFO] [33m - will validate that the bias-correction actually improved the result ...[0m
[16:18:15    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[16:18:15    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_0[35m,[0m
Warning in <Fit>: Fit data is empty 
[16:18:20    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_0/plots/[0m
[16:18:32        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_0/plots output/PAUS_advanced3/regres/train/ANNZ_0/plots_biasCor_before[0m
[16:18:32    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[16:18:32    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_0[35m,[0m
Warning in <Fit>: Fit data is empty 
[16:18:37    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_0/plots/[0m
[16:18:48        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_0/plots output/PAUS_advanced3/regres/train/ANNZ_0/plots_biasCor_after[0m
[16:18:48    INFO] [32m - Got original [KS-test,N_poiss]: [[35m0.0723453[32m , [35m5.01982[32m] , after the bias-correction: [[35m0.0486288[32m , [35m4.71667[32m[32m] --> will [42;37;1mKEEP[0m[32m the correction ![0m
[35m[0m[35m[0m[35m[0m[35m[0m
(16:18 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:18 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mband0fluxerror;band1fluxerror;band2fluxerror;band3fluxerror;band4fluxerror;band5fluxerror;band6fluxerror;band7fluxerror;band8fluxerror;band9fluxerror;band10fluxerror;band11fluxerror;band12fluxerror;band13fluxerror;band14fluxerror;band15fluxerror;band16fluxerror;band17fluxerror;band18fluxerror;band19fluxerror;band20fluxerror;band21fluxerror;band22fluxerror;band23fluxerror;band24fluxerror;band25fluxerror;band26fluxerror;band27fluxerror;band28fluxerror;band29fluxerror;band30fluxerror;band31fluxerror;band32fluxerror;band33fluxerror;band34fluxerror;band35fluxerror;band36fluxerror;band37fluxerror;band38fluxerror;band39fluxerror;i_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mband0flux;band1flux;band2flux;band3flux;band4flux;band5flux;band6flux;band7flux;band8flux;band9flux;band10flux;band11flux;band12flux;band13flux;band14flux;band15flux;band16flux;band17flux;band18flux;band19flux;band20flux;band21flux;band22flux;band23flux;band24flux;band25flux;band26flux;band27flux;band28flux;band29flux;band30flux;band31flux;band32flux;band33flux;band34flux;band35flux;band36flux;band37flux;band38flux;band39flux;i_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32m[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:18 INFO) 
[16:18:52    INFO] [32m -----------------------------------------------------[0m
[16:18:52    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[16:18:52    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[16:18:54    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[16:18:55    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/train/ANNZ_1/saveOpt.txt[33m ...[0m
[16:19:09    INFO] [40;37;1m[34m - starting ANNZ::Train_singleReg() ... [0m
[16:19:09    INFO] [34m - Found userMLMopts = "" - will generate randomized options... [0m
[16:19:09    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[16:19:09    INFO] [94m - will book ([33mANNZ_1[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=430:BoostType=Bagging[0m
[16:19:09    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random::NormMode=EqualNumEvents[0m
[16:19:09    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[94m ,[0m
[16:19:09    INFO] [94m     cuts (train):       [36m[94m ,[0m
[16:19:09    INFO] [94m     cuts (valid):       [36m[0m
[16:19:09    INFO] [94m   - weights:            [36m1[0m
[16:19:09    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[16:19:09    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[16:19:55    INFO] [33m - Saving MLM information in [32m./output/PAUS_advanced3/regres/train/ANNZ_1/ANNZ_1_weights/saveTrainOpt_ANNZ_1.txt[33m ...[0m
[16:20:00    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_1[35m ... [0m
[16:20:00    INFO] [33m - Will gen. input-parameter errors ...[0m
[16:20:02    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[16:20:12    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[16:22:09    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:22:09    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:22:09    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[16:22:09    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:22:48    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:22:48    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:22:48    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[16:22:48    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:22:48    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[16:24:47    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:24:47    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:24:47    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[16:24:47    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:25:26    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:25:26    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:25:26    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[16:25:26    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:25:26    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_1/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[16:25:28    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[16:25:28    INFO] [33m - will try to derive a bias correction ... [0m
[16:25:28    INFO] [34m - will validate that training produced an XML file for later ... [0m
[16:25:28    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[16:25:33    INFO] [34m - will validate that the training was not a complete failure ... [0m
[16:25:33    INFO] [34m - training seems to have been successful! will move on ...[0m
[16:25:33    INFO] [40;37;1m[34m - starting ANNZ::Train_singleRegBiasCor() ... [0m
[16:25:37    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[16:25:39    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[16:25:40    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[16:25:40    INFO] [94m - will book ([33mANNZ_1_bias[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m
[16:25:40    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents[0m
[16:25:40    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[0m
[16:25:40    INFO] [94m   - weights:            [36m1[0m
[16:25:40    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[16:25:40    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[16:25:52    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_1[35m ... [0m
[16:25:52    INFO] [33m - Will gen. input-parameter errors ...[0m
[16:25:54    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[16:26:05    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[16:28:20    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:28:20    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:28:20    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[16:28:20    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:29:05    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:29:05    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:29:05    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[16:29:05    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:29:05    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[16:31:21    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:31:21    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:31:21    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[16:31:21    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:32:06    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:32:06    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:32:06    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[16:32:06    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:32:08    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_1/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[16:32:11    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[16:32:11    INFO] [33m - will validate that the bias-correction actually improved the result ...[0m
[16:32:11    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[16:32:11    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_1[35m,[0m
[16:32:16    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_1/plots/[0m
[16:32:28        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_1/plots output/PAUS_advanced3/regres/train/ANNZ_1/plots_biasCor_before[0m
[16:32:28    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[16:32:28    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_1[35m,[0m
[16:32:33    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_1/plots/[0m
[16:32:45        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_1/plots output/PAUS_advanced3/regres/train/ANNZ_1/plots_biasCor_after[0m
[16:32:45    INFO] [32m - Got original [KS-test,N_poiss]: [[35m0.0703704[32m , [35m5.83232[32m] , after the bias-correction: [[35m0.0490789[32m , [35m4.66815[32m[32m] --> will [42;37;1mKEEP[0m[32m the correction ![0m
[35m[0m[35m[0m[35m[0m[35m[0m
(16:32 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:32 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mband0fluxerror;band1fluxerror;band2fluxerror;band3fluxerror;band4fluxerror;band5fluxerror;band6fluxerror;band7fluxerror;band8fluxerror;band9fluxerror;band10fluxerror;band11fluxerror;band12fluxerror;band13fluxerror;band14fluxerror;band15fluxerror;band16fluxerror;band17fluxerror;band18fluxerror;band19fluxerror;band20fluxerror;band21fluxerror;band22fluxerror;band23fluxerror;band24fluxerror;band25fluxerror;band26fluxerror;band27fluxerror;band28fluxerror;band29fluxerror;band30fluxerror;band31fluxerror;band32fluxerror;band33fluxerror;band34fluxerror;band35fluxerror;band36fluxerror;band37fluxerror;band38fluxerror;band39fluxerror;i_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mband0flux;band1flux;band2flux;band3flux;band4flux;band5flux;band6flux;band7flux;band8flux;band9flux;band10flux;band11flux;band12flux;band13flux;band14flux;band15flux;band16flux;band17flux;band18flux;band19flux;band20flux;band21flux;band22flux;band23flux;band24flux;band25flux;band26flux;band27flux;band28flux;band29flux;band30flux;band31flux;band32flux;band33flux;band34flux;band35flux;band36flux;band37flux;band38flux;band39flux;i_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32m[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:32 INFO) 
[16:32:49    INFO] [32m -----------------------------------------------------[0m
[16:32:49    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[16:32:49    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[16:32:51    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[16:32:52    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/train/ANNZ_2/saveOpt.txt[33m ...[0m
[16:33:06    INFO] [40;37;1m[34m - starting ANNZ::Train_singleReg() ... [0m
[16:33:07    INFO] [34m - Found userMLMopts = "" - will generate randomized options... [0m
[16:33:07    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[16:33:07    INFO] [94m - will book ([33mANNZ_2[94m) method([33mBDT[94m) with options: [36m:VarTransform=N,P:NTrees=570:BoostType=AdaBoostR2[0m
[16:33:07    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random::NormMode=EqualNumEvents[0m
[16:33:07    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[94m ,[0m
[16:33:07    INFO] [94m     cuts (train):       [36m[94m ,[0m
[16:33:07    INFO] [94m     cuts (valid):       [36m[0m
[16:33:07    INFO] [94m   - weights:            [36m1[0m
[16:33:07    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[16:33:07    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[16:34:02    INFO] [33m - Saving MLM information in [32m./output/PAUS_advanced3/regres/train/ANNZ_2/ANNZ_2_weights/saveTrainOpt_ANNZ_2.txt[33m ...[0m
[16:34:06    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_2[35m ... [0m
[16:34:06    INFO] [33m - Will gen. input-parameter errors ...[0m
[16:34:08    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[16:34:26    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[16:46:40    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:46:40    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:46:40    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[16:46:40    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:50:47    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[16:50:47    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[16:50:47    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[16:50:47    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[16:50:47    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[17:02:58    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[17:02:58    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[17:02:58    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[17:02:58    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[17:07:02    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[17:07:02    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[17:07:02    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[17:07:02    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[17:07:03    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_2/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[17:07:05    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[17:07:05    INFO] [33m - will try to derive a bias correction ... [0m
[17:07:05    INFO] [34m - will validate that training produced an XML file for later ... [0m
[17:07:05    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[17:07:08    INFO] [34m - will validate that the training was not a complete failure ... [0m
[17:07:08    INFO] [34m - training seems to have been successful! will move on ...[0m
[17:07:08    INFO] [40;37;1m[34m - starting ANNZ::Train_singleRegBiasCor() ... [0m
[17:07:12    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[17:07:13    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[17:07:14    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[17:07:14    INFO] [94m - will book ([33mANNZ_2_bias[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m
[17:07:14    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents[0m
[17:07:14    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[0m
[17:07:14    INFO] [94m   - weights:            [36m1[0m
[17:07:14    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[17:07:15    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[17:07:24    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_2[35m ... [0m
[17:07:24    INFO] [33m - Will gen. input-parameter errors ...[0m
[17:07:26    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[17:07:41    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[17:18:12    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[17:18:12    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[17:18:12    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[17:18:12    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[17:21:44    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[17:21:44    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[17:21:44    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[17:21:44    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[17:21:44    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[17:32:15    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[17:32:15    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[17:32:15    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[17:32:15    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[17:35:46    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[17:35:46    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[17:35:46    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[17:35:46    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[17:35:48    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_2/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[17:35:49    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[17:35:49    INFO] [33m - will validate that the bias-correction actually improved the result ...[0m
[17:35:49    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[17:35:49    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_2[35m,[0m
[17:35:55    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_2/plots/[0m
[17:36:06        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_2/plots output/PAUS_advanced3/regres/train/ANNZ_2/plots_biasCor_before[0m
[17:36:06    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[17:36:06    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_2[35m,[0m
[17:36:11    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_2/plots/[0m
[17:36:23        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_2/plots output/PAUS_advanced3/regres/train/ANNZ_2/plots_biasCor_after[0m
[17:36:23    INFO] [32m - Got original [KS-test,N_poiss]: [[35m0.0676796[32m , [35m6.41101[32m] , after the bias-correction: [[35m0.0421751[32m , [35m4.7781[32m[32m] --> will [42;37;1mKEEP[0m[32m the correction ![0m
[35m[0m[35m[0m[35m[0m[35m[0m
(17:36 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:36 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mband0fluxerror;band1fluxerror;band2fluxerror;band3fluxerror;band4fluxerror;band5fluxerror;band6fluxerror;band7fluxerror;band8fluxerror;band9fluxerror;band10fluxerror;band11fluxerror;band12fluxerror;band13fluxerror;band14fluxerror;band15fluxerror;band16fluxerror;band17fluxerror;band18fluxerror;band19fluxerror;band20fluxerror;band21fluxerror;band22fluxerror;band23fluxerror;band24fluxerror;band25fluxerror;band26fluxerror;band27fluxerror;band28fluxerror;band29fluxerror;band30fluxerror;band31fluxerror;band32fluxerror;band33fluxerror;band34fluxerror;band35fluxerror;band36fluxerror;band37fluxerror;band38fluxerror;band39fluxerror;i_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mband0flux;band1flux;band2flux;band3flux;band4flux;band5flux;band6flux;band7flux;band8flux;band9flux;band10flux;band11flux;band12flux;band13flux;band14flux;band15flux;band16flux;band17flux;band18flux;band19flux;band20flux;band21flux;band22flux;band23flux;band24flux;band25flux;band26flux;band27flux;band28flux;band29flux;band30flux;band31flux;band32flux;band33flux;band34flux;band35flux;band36flux;band37flux;band38flux;band39flux;i_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32m[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:36 INFO) 
[17:36:27    INFO] [32m -----------------------------------------------------[0m
[17:36:27    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[17:36:27    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[17:36:28    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[17:36:29    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/train/ANNZ_3/saveOpt.txt[33m ...[0m
[17:36:43    INFO] [40;37;1m[34m - starting ANNZ::Train_singleReg() ... [0m
[17:36:43    INFO] [34m - Found userMLMopts = "" - will generate randomized options... [0m
[17:36:43    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[17:36:43    INFO] [94m - will book ([33mANNZ_3[94m) method([33mBDT[94m) with options: [36m:VarTransform=N,P:NTrees=900:BoostType=Bagging[0m
[17:36:43    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random::NormMode=EqualNumEvents[0m
[17:36:43    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[94m ,[0m
[17:36:43    INFO] [94m     cuts (train):       [36m[94m ,[0m
[17:36:43    INFO] [94m     cuts (valid):       [36m[0m
[17:36:43    INFO] [94m   - weights:            [36m1[0m
[17:36:43    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[17:36:44    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[17:38:25    INFO] [33m - Saving MLM information in [32m./output/PAUS_advanced3/regres/train/ANNZ_3/ANNZ_3_weights/saveTrainOpt_ANNZ_3.txt[33m ...[0m
[17:38:34    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_3[35m ... [0m
[17:38:34    INFO] [33m - Will gen. input-parameter errors ...[0m
[17:38:37    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[17:39:05    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[17:51:00    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[17:51:00    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[17:51:00    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[17:51:00    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[17:54:58    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[17:54:58    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[17:54:58    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[17:54:58    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[17:54:58    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[18:06:52    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:06:52    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:06:52    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[18:06:52    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:10:49    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:10:49    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:10:49    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[18:10:49    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:10:51    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_3/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[18:10:55    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[18:10:55    INFO] [33m - will try to derive a bias correction ... [0m
[18:10:55    INFO] [34m - will validate that training produced an XML file for later ... [0m
[18:10:55    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[18:11:04    INFO] [34m - will validate that the training was not a complete failure ... [0m
[18:11:05    INFO] [34m - training seems to have been successful! will move on ...[0m
[18:11:05    INFO] [40;37;1m[34m - starting ANNZ::Train_singleRegBiasCor() ... [0m
[18:11:12    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[18:11:13    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[18:11:14    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[18:11:14    INFO] [94m - will book ([33mANNZ_3_bias[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m
[18:11:14    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents[0m
[18:11:14    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[0m
[18:11:14    INFO] [94m   - weights:            [36m1[0m
[18:11:14    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[18:11:15    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[18:11:30    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_3[35m ... [0m
[18:11:30    INFO] [33m - Will gen. input-parameter errors ...[0m
[18:11:33    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[18:12:01    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[18:24:49    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:24:49    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:24:49    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[18:24:49    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:29:03    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:29:03    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:29:03    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[18:29:03    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:29:03    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[18:41:48    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:41:48    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:41:48    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[18:41:48    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:46:02    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:46:02    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:46:02    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[18:46:02    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:46:04    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_3/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[18:46:08    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[18:46:08    INFO] [33m - will validate that the bias-correction actually improved the result ...[0m
[18:46:08    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[18:46:08    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_3[35m,[0m
[18:46:14    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_3/plots/[0m
[18:46:26        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_3/plots output/PAUS_advanced3/regres/train/ANNZ_3/plots_biasCor_before[0m
[18:46:26    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[18:46:26    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_3[35m,[0m
[18:46:31    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_3/plots/[0m
[18:46:43        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_3/plots output/PAUS_advanced3/regres/train/ANNZ_3/plots_biasCor_after[0m
[18:46:43    INFO] [32m - Got original [KS-test,N_poiss]: [[35m0.0668448[32m , [35m6.19556[32m] , after the bias-correction: [[35m0.044948[32m , [35m4.63846[32m[32m] --> will [42;37;1mKEEP[0m[32m the correction ![0m
[35m[0m[35m[0m[35m[0m[35m[0m
(18:46 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:46 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mband0fluxerror;band1fluxerror;band2fluxerror;band3fluxerror;band4fluxerror;band5fluxerror;band6fluxerror;band7fluxerror;band8fluxerror;band9fluxerror;band10fluxerror;band11fluxerror;band12fluxerror;band13fluxerror;band14fluxerror;band15fluxerror;band16fluxerror;band17fluxerror;band18fluxerror;band19fluxerror;band20fluxerror;band21fluxerror;band22fluxerror;band23fluxerror;band24fluxerror;band25fluxerror;band26fluxerror;band27fluxerror;band28fluxerror;band29fluxerror;band30fluxerror;band31fluxerror;band32fluxerror;band33fluxerror;band34fluxerror;band35fluxerror;band36fluxerror;band37fluxerror;band38fluxerror;band39fluxerror;i_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mband0flux;band1flux;band2flux;band3flux;band4flux;band5flux;band6flux;band7flux;band8flux;band9flux;band10flux;band11flux;band12flux;band13flux;band14flux;band15flux;band16flux;band17flux;band18flux;band19flux;band20flux;band21flux;band22flux;band23flux;band24flux;band25flux;band26flux;band27flux;band28flux;band29flux;band30flux;band31flux;band32flux;band33flux;band34flux;band35flux;band36flux;band37flux;band38flux;band39flux;i_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32m[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:46 INFO) 
[18:46:51    INFO] [32m -----------------------------------------------------[0m
[18:46:51    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[18:46:51    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[18:46:52    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[18:46:54    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/train/ANNZ_4/saveOpt.txt[33m ...[0m
[18:47:07    INFO] [40;37;1m[34m - starting ANNZ::Train_singleReg() ... [0m
[18:47:07    INFO] [34m - Found userMLMopts = "" - will generate randomized options... [0m
[18:47:08    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[18:47:08    INFO] [94m - will book ([33mANNZ_4[94m) method([33mBDT[94m) with options: [36m:NTrees=300:BoostType=Bagging[0m
[18:47:08    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random::NormMode=EqualNumEvents[0m
[18:47:08    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[94m ,[0m
[18:47:08    INFO] [94m     cuts (train):       [36m[94m ,[0m
[18:47:08    INFO] [94m     cuts (valid):       [36m[0m
[18:47:08    INFO] [94m   - weights:            [36m1[0m
[18:47:08    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[18:47:08    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[18:47:39    INFO] [33m - Saving MLM information in [32m./output/PAUS_advanced3/regres/train/ANNZ_4/ANNZ_4_weights/saveTrainOpt_ANNZ_4.txt[33m ...[0m
[18:47:43    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_4[35m ... [0m
[18:47:43    INFO] [33m - Will gen. input-parameter errors ...[0m
[18:47:45    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[18:47:52    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[18:49:01    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:49:01    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:49:01    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[18:49:01    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:49:25    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:49:25    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:49:25    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[18:49:25    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:49:25    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[18:50:35    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:50:35    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:50:35    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[18:50:35    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:50:59    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:50:59    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:50:59    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[18:50:59    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:50:59    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_4/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[18:51:00    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[18:51:00    INFO] [33m - will try to derive a bias correction ... [0m
[18:51:00    INFO] [34m - will validate that training produced an XML file for later ... [0m
[18:51:00    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[18:51:03    INFO] [34m - will validate that the training was not a complete failure ... [0m
[18:51:04    INFO] [34m - training seems to have been successful! will move on ...[0m
[18:51:04    INFO] [40;37;1m[34m - starting ANNZ::Train_singleRegBiasCor() ... [0m
[18:51:07    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[18:51:09    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[18:51:10    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[18:51:10    INFO] [94m - will book ([33mANNZ_4_bias[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m
[18:51:10    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents[0m
[18:51:10    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[0m
[18:51:10    INFO] [94m   - weights:            [36m1[0m
[18:51:10    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[18:51:10    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[18:51:20    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_4[35m ... [0m
[18:51:20    INFO] [33m - Will gen. input-parameter errors ...[0m
[18:51:22    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[18:51:29    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[18:52:43    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:52:43    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:52:43    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[18:52:43    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:53:08    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:53:08    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:53:08    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[18:53:08    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:53:08    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[18:54:22    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:54:22    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:54:22    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[18:54:22    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:54:47    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[18:54:47    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[18:54:47    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[18:54:47    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[18:54:47    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_4/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[18:54:49    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[18:54:49    INFO] [33m - will validate that the bias-correction actually improved the result ...[0m
[18:54:49    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[18:54:49    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_4[35m,[0m
[18:54:54    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_4/plots/[0m
[18:55:06        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_4/plots output/PAUS_advanced3/regres/train/ANNZ_4/plots_biasCor_before[0m
[18:55:06    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[18:55:06    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_4[35m,[0m
[18:55:10    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_4/plots/[0m
[18:55:21        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_4/plots output/PAUS_advanced3/regres/train/ANNZ_4/plots_biasCor_after[0m
[18:55:21    INFO] [32m - Got original [KS-test,N_poiss]: [[35m0.0703704[32m , [35m5.81394[32m] , after the bias-correction: [[35m0.0526045[32m , [35m4.85277[32m[32m] --> will [42;37;1mKEEP[0m[32m the correction ![0m
[35m[0m[35m[0m[35m[0m[35m[0m
(18:55 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:55 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mband0fluxerror;band1fluxerror;band2fluxerror;band3fluxerror;band4fluxerror;band5fluxerror;band6fluxerror;band7fluxerror;band8fluxerror;band9fluxerror;band10fluxerror;band11fluxerror;band12fluxerror;band13fluxerror;band14fluxerror;band15fluxerror;band16fluxerror;band17fluxerror;band18fluxerror;band19fluxerror;band20fluxerror;band21fluxerror;band22fluxerror;band23fluxerror;band24fluxerror;band25fluxerror;band26fluxerror;band27fluxerror;band28fluxerror;band29fluxerror;band30fluxerror;band31fluxerror;band32fluxerror;band33fluxerror;band34fluxerror;band35fluxerror;band36fluxerror;band37fluxerror;band38fluxerror;band39fluxerror;i_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mband0flux;band1flux;band2flux;band3flux;band4flux;band5flux;band6flux;band7flux;band8flux;band9flux;band10flux;band11flux;band12flux;band13flux;band14flux;band15flux;band16flux;band17flux;band18flux;band19flux;band20flux;band21flux;band22flux;band23flux;band24flux;band25flux;band26flux;band27flux;band28flux;band29flux;band30flux;band31flux;band32flux;band33flux;band34flux;band35flux;band36flux;band37flux;band38flux;band39flux;i_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32m[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:55 INFO) 
[18:55:26    INFO] [32m -----------------------------------------------------[0m
[18:55:26    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[18:55:26    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[18:55:27    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[18:55:28    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/train/ANNZ_5/saveOpt.txt[33m ...[0m
[18:55:42    INFO] [40;37;1m[34m - starting ANNZ::Train_singleReg() ... [0m
[18:55:42    INFO] [34m - Found userMLMopts = "" - will generate randomized options... [0m
[18:55:42    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[18:55:42    INFO] [94m - will book ([33mANNZ_5[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=660:BoostType=AdaBoostR2[0m
[18:55:42    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random::NormMode=NumEvents[0m
[18:55:42    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[94m ,[0m
[18:55:42    INFO] [94m     cuts (train):       [36m[94m ,[0m
[18:55:42    INFO] [94m     cuts (valid):       [36m[0m
[18:55:42    INFO] [94m   - weights:            [36m1[0m
[18:55:42    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[18:55:43    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[18:56:25    INFO] [33m - Saving MLM information in [32m./output/PAUS_advanced3/regres/train/ANNZ_5/ANNZ_5_weights/saveTrainOpt_ANNZ_5.txt[33m ...[0m
[18:56:27    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_5[35m ... [0m
[18:56:27    INFO] [33m - Will gen. input-parameter errors ...[0m
[18:56:29    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[18:56:46    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[19:09:56    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[19:09:56    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[19:09:56    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[19:09:56    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[19:14:21    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[19:14:21    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[19:14:21    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[19:14:21    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[19:14:21    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[19:27:36    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[19:27:36    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[19:27:36    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[19:27:36    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[19:32:02    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[19:32:02    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[19:32:02    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[19:32:02    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[19:32:04    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_5/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[19:32:05    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[19:32:05    INFO] [33m - will try to derive a bias correction ... [0m
[19:32:05    INFO] [34m - will validate that training produced an XML file for later ... [0m
[19:32:05    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[19:32:06    INFO] [34m - will validate that the training was not a complete failure ... [0m
[19:32:06    INFO] [34m - training seems to have been successful! will move on ...[0m
[19:32:06    INFO] [40;37;1m[34m - starting ANNZ::Train_singleRegBiasCor() ... [0m
[19:32:09    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[19:32:10    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[19:32:11    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[19:32:11    INFO] [94m - will book ([33mANNZ_5_bias[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m
[19:32:11    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents[0m
[19:32:11    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[0m
[19:32:11    INFO] [94m   - weights:            [36m1[0m
[19:32:11    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[19:32:12    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[19:32:20    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_5[35m ... [0m
[19:32:20    INFO] [33m - Will gen. input-parameter errors ...[0m
[19:32:21    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[19:32:37    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[19:45:05    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[19:45:05    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[19:45:05    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[19:45:05    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[19:49:15    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[19:49:15    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[19:49:15    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[19:49:15    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[19:49:15    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[20:01:52    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:01:52    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:01:52    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[20:01:52    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:06:05    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:06:05    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:06:05    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[20:06:05    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:06:08    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_5/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[20:06:09    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[20:06:09    INFO] [33m - will validate that the bias-correction actually improved the result ...[0m
[20:06:09    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[20:06:09    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_5[35m,[0m
[20:06:15    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_5/plots/[0m
[20:06:26        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_5/plots output/PAUS_advanced3/regres/train/ANNZ_5/plots_biasCor_before[0m
[20:06:26    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[20:06:26    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_5[35m,[0m
Warning in <Fit>: Fit data is empty 
[20:06:31    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_5/plots/[0m
[20:06:42        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_5/plots output/PAUS_advanced3/regres/train/ANNZ_5/plots_biasCor_after[0m
[20:06:43    INFO] [32m - Got original [KS-test,N_poiss]: [[35m0.0783409[32m , [35m6.2484[32m] , after the bias-correction: [[35m0.0421392[32m , [35m4.41883[32m[32m] --> will [42;37;1mKEEP[0m[32m the correction ![0m
[35m[0m[35m[0m[35m[0m[35m[0m
(20:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mband0fluxerror;band1fluxerror;band2fluxerror;band3fluxerror;band4fluxerror;band5fluxerror;band6fluxerror;band7fluxerror;band8fluxerror;band9fluxerror;band10fluxerror;band11fluxerror;band12fluxerror;band13fluxerror;band14fluxerror;band15fluxerror;band16fluxerror;band17fluxerror;band18fluxerror;band19fluxerror;band20fluxerror;band21fluxerror;band22fluxerror;band23fluxerror;band24fluxerror;band25fluxerror;band26fluxerror;band27fluxerror;band28fluxerror;band29fluxerror;band30fluxerror;band31fluxerror;band32fluxerror;band33fluxerror;band34fluxerror;band35fluxerror;band36fluxerror;band37fluxerror;band38fluxerror;band39fluxerror;i_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mband0flux;band1flux;band2flux;band3flux;band4flux;band5flux;band6flux;band7flux;band8flux;band9flux;band10flux;band11flux;band12flux;band13flux;band14flux;band15flux;band16flux;band17flux;band18flux;band19flux;band20flux;band21flux;band22flux;band23flux;band24flux;band25flux;band26flux;band27flux;band28flux;band29flux;band30flux;band31flux;band32flux;band33flux;band34flux;band35flux;band36flux;band37flux;band38flux;band39flux;i_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32m[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:06 INFO) 
[20:06:46    INFO] [32m -----------------------------------------------------[0m
[20:06:46    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[20:06:46    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[20:06:48    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[20:06:49    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/train/ANNZ_6/saveOpt.txt[33m ...[0m
[20:07:03    INFO] [40;37;1m[34m - starting ANNZ::Train_singleReg() ... [0m
[20:07:03    INFO] [34m - Found userMLMopts = "" - will generate randomized options... [0m
[20:07:03    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[20:07:03    INFO] [94m - will book ([33mANNZ_6[94m) method([33mBDT[94m) with options: [36m:VarTransform=N,P:NTrees=440:BoostType=AdaBoost[0m
[20:07:03    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random::NormMode=EqualNumEvents[0m
[20:07:03    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[94m ,[0m
[20:07:03    INFO] [94m     cuts (train):       [36m[94m ,[0m
[20:07:03    INFO] [94m     cuts (valid):       [36m[0m
[20:07:03    INFO] [94m   - weights:            [36m1[0m
[20:07:03    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[20:07:03    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[20:07:35    INFO] [33m - Saving MLM information in [32m./output/PAUS_advanced3/regres/train/ANNZ_6/ANNZ_6_weights/saveTrainOpt_ANNZ_6.txt[33m ...[0m
[20:07:38    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_6[35m ... [0m
[20:07:38    INFO] [33m - Will gen. input-parameter errors ...[0m
[20:07:39    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[20:07:46    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[20:09:53    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:09:53    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:09:53    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[20:09:53    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:10:36    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:10:36    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:10:36    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[20:10:36    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:10:36    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[20:12:43    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:12:43    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:12:43    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[20:12:43    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:13:27    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:13:27    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:13:27    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[20:13:27    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:13:27    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_6/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[20:13:28    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[20:13:28    INFO] [33m - will try to derive a bias correction ... [0m
[20:13:28    INFO] [34m - will validate that training produced an XML file for later ... [0m
[20:13:28    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[20:13:30    INFO] [34m - will validate that the training was not a complete failure ... [0m
[20:13:30    INFO] [34m - training seems to have been successful! will move on ...[0m
[20:13:30    INFO] [40;37;1m[34m - starting ANNZ::Train_singleRegBiasCor() ... [0m
[20:13:34    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[20:13:35    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[20:13:36    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[20:13:36    INFO] [94m - will book ([33mANNZ_6_bias[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m
[20:13:36    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents[0m
[20:13:36    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[0m
[20:13:36    INFO] [94m   - weights:            [36m1[0m
[20:13:36    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[20:13:36    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[20:13:45    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_6[35m ... [0m
[20:13:45    INFO] [33m - Will gen. input-parameter errors ...[0m
[20:13:47    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[20:13:54    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[20:16:09    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:16:09    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:16:09    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[20:16:09    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:16:54    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:16:54    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:16:54    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[20:16:54    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:16:54    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[20:19:10    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:19:10    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:19:10    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[20:19:10    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:19:57    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:19:57    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:19:57    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[20:19:57    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:19:59    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_6/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[20:20:01    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[20:20:01    INFO] [33m - will validate that the bias-correction actually improved the result ...[0m
[20:20:01    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[20:20:01    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_6[35m,[0m
[20:20:06    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_6/plots/[0m
[20:20:18        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_6/plots output/PAUS_advanced3/regres/train/ANNZ_6/plots_biasCor_before[0m
[20:20:18    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[20:20:18    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_6[35m,[0m
[20:20:22    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_6/plots/[0m
[20:20:34        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_6/plots output/PAUS_advanced3/regres/train/ANNZ_6/plots_biasCor_after[0m
[20:20:34    INFO] [32m - Got original [KS-test,N_poiss]: [[35m0.0824406[32m , [35m5.66862[32m] , after the bias-correction: [[35m0.0478764[32m , [35m4.35489[32m[32m] --> will [42;37;1mKEEP[0m[32m the correction ![0m
[35m[0m[35m[0m[35m[0m[35m[0m
(20:20 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(20:20 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mband0fluxerror;band1fluxerror;band2fluxerror;band3fluxerror;band4fluxerror;band5fluxerror;band6fluxerror;band7fluxerror;band8fluxerror;band9fluxerror;band10fluxerror;band11fluxerror;band12fluxerror;band13fluxerror;band14fluxerror;band15fluxerror;band16fluxerror;band17fluxerror;band18fluxerror;band19fluxerror;band20fluxerror;band21fluxerror;band22fluxerror;band23fluxerror;band24fluxerror;band25fluxerror;band26fluxerror;band27fluxerror;band28fluxerror;band29fluxerror;band30fluxerror;band31fluxerror;band32fluxerror;band33fluxerror;band34fluxerror;band35fluxerror;band36fluxerror;band37fluxerror;band38fluxerror;band39fluxerror;i_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mband0flux;band1flux;band2flux;band3flux;band4flux;band5flux;band6flux;band7flux;band8flux;band9flux;band10flux;band11flux;band12flux;band13flux;band14flux;band15flux;band16flux;band17flux;band18flux;band19flux;band20flux;band21flux;band22flux;band23flux;band24flux;band25flux;band26flux;band27flux;band28flux;band29flux;band30flux;band31flux;band32flux;band33flux;band34flux;band35flux;band36flux;band37flux;band38flux;band39flux;i_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32m[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(20:20 INFO) 
[20:20:38    INFO] [32m -----------------------------------------------------[0m
[20:20:38    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[20:20:38    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[20:20:39    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[20:20:40    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/train/ANNZ_7/saveOpt.txt[33m ...[0m
[20:20:54    INFO] [40;37;1m[34m - starting ANNZ::Train_singleReg() ... [0m
[20:20:54    INFO] [34m - Found userMLMopts = "" - will generate randomized options... [0m
[20:20:54    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[20:20:54    INFO] [94m - will book ([33mANNZ_7[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=900:BoostType=Bagging[0m
[20:20:54    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random::NormMode=EqualNumEvents[0m
[20:20:54    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[94m ,[0m
[20:20:54    INFO] [94m     cuts (train):       [36m[94m ,[0m
[20:20:54    INFO] [94m     cuts (valid):       [36m[0m
[20:20:54    INFO] [94m   - weights:            [36m1[0m
[20:20:54    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[20:20:55    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[20:22:32    INFO] [33m - Saving MLM information in [32m./output/PAUS_advanced3/regres/train/ANNZ_7/ANNZ_7_weights/saveTrainOpt_ANNZ_7.txt[33m ...[0m
[20:22:41    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_7[35m ... [0m
[20:22:41    INFO] [33m - Will gen. input-parameter errors ...[0m
[20:22:44    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[20:23:08    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[20:29:33    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:29:33    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:29:33    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[20:29:33    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:31:43    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:31:43    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:31:43    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[20:31:43    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:31:43    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[20:38:07    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:38:07    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:38:07    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[20:38:07    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:40:15    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:40:15    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:40:15    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[20:40:15    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:40:17    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_7/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[20:40:21    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[20:40:21    INFO] [33m - will try to derive a bias correction ... [0m
[20:40:21    INFO] [34m - will validate that training produced an XML file for later ... [0m
[20:40:21    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[20:40:31    INFO] [34m - will validate that the training was not a complete failure ... [0m
[20:40:31    INFO] [34m - training seems to have been successful! will move on ...[0m
[20:40:31    INFO] [40;37;1m[34m - starting ANNZ::Train_singleRegBiasCor() ... [0m
[20:40:38    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[20:40:39    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[20:40:40    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[20:40:40    INFO] [94m - will book ([33mANNZ_7_bias[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m
[20:40:40    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents[0m
[20:40:40    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[0m
[20:40:40    INFO] [94m   - weights:            [36m1[0m
[20:40:40    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[20:40:40    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[20:40:53    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_7[35m ... [0m
[20:40:53    INFO] [33m - Will gen. input-parameter errors ...[0m
[20:40:57    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[20:41:21    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[20:48:26    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:48:26    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:48:26    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[20:48:26    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:50:49    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:50:49    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:50:49    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[20:50:49    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[20:50:49    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[20:57:52    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[20:57:52    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[20:57:52    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[20:57:52    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:00:14    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:00:14    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:00:14    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[21:00:14    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:00:16    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_7/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[21:00:19    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[21:00:19    INFO] [33m - will validate that the bias-correction actually improved the result ...[0m
[21:00:20    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[21:00:20    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_7[35m,[0m
[21:00:26    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_7/plots/[0m
[21:00:38        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_7/plots output/PAUS_advanced3/regres/train/ANNZ_7/plots_biasCor_before[0m
[21:00:38    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[21:00:38    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_7[35m,[0m
[21:00:43    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_7/plots/[0m
[21:00:54        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_7/plots output/PAUS_advanced3/regres/train/ANNZ_7/plots_biasCor_after[0m
[21:00:54    INFO] [32m - Got original [KS-test,N_poiss]: [[35m0.0711206[32m , [35m5.8164[32m] , after the bias-correction: [[35m0.0504699[32m , [35m4.70548[32m[32m] --> will [42;37;1mKEEP[0m[32m the correction ![0m
[35m[0m[35m[0m[35m[0m[35m[0m
(21:01 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:01 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mband0fluxerror;band1fluxerror;band2fluxerror;band3fluxerror;band4fluxerror;band5fluxerror;band6fluxerror;band7fluxerror;band8fluxerror;band9fluxerror;band10fluxerror;band11fluxerror;band12fluxerror;band13fluxerror;band14fluxerror;band15fluxerror;band16fluxerror;band17fluxerror;band18fluxerror;band19fluxerror;band20fluxerror;band21fluxerror;band22fluxerror;band23fluxerror;band24fluxerror;band25fluxerror;band26fluxerror;band27fluxerror;band28fluxerror;band29fluxerror;band30fluxerror;band31fluxerror;band32fluxerror;band33fluxerror;band34fluxerror;band35fluxerror;band36fluxerror;band37fluxerror;band38fluxerror;band39fluxerror;i_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mband0flux;band1flux;band2flux;band3flux;band4flux;band5flux;band6flux;band7flux;band8flux;band9flux;band10flux;band11flux;band12flux;band13flux;band14flux;band15flux;band16flux;band17flux;band18flux;band19flux;band20flux;band21flux;band22flux;band23flux;band24flux;band25flux;band26flux;band27flux;band28flux;band29flux;band30flux;band31flux;band32flux;band33flux;band34flux;band35flux;band36flux;band37flux;band38flux;band39flux;i_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32m[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:01 INFO) 
[21:01:01    INFO] [32m -----------------------------------------------------[0m
[21:01:01    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[21:01:01    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[21:01:02    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[21:01:03    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/train/ANNZ_8/saveOpt.txt[33m ...[0m
[21:01:17    INFO] [40;37;1m[34m - starting ANNZ::Train_singleReg() ... [0m
[21:01:17    INFO] [34m - Found userMLMopts = "" - will generate randomized options... [0m
[21:01:17    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[21:01:17    INFO] [94m - will book ([33mANNZ_8[94m) method([33mBDT[94m) with options: [36m:VarTransform=N,P:NTrees=370:BoostType=Bagging[0m
[21:01:17    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random::NormMode=NumEvents[0m
[21:01:17    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[94m ,[0m
[21:01:17    INFO] [94m     cuts (train):       [36m[94m ,[0m
[21:01:17    INFO] [94m     cuts (valid):       [36m[0m
[21:01:17    INFO] [94m   - weights:            [36m1[0m
[21:01:17    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[21:01:18    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[21:01:58    INFO] [33m - Saving MLM information in [32m./output/PAUS_advanced3/regres/train/ANNZ_8/ANNZ_8_weights/saveTrainOpt_ANNZ_8.txt[33m ...[0m
[21:02:02    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_8[35m ... [0m
[21:02:02    INFO] [33m - Will gen. input-parameter errors ...[0m
[21:02:04    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[21:02:15    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[21:04:51    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:04:51    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:04:51    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[21:04:51    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:05:43    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:05:43    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:05:43    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[21:05:43    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:05:43    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[21:08:19    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:08:19    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:08:19    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[21:08:19    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:09:10    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:09:10    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:09:10    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[21:09:10    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:09:12    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_8/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[21:09:14    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[21:09:14    INFO] [33m - will try to derive a bias correction ... [0m
[21:09:14    INFO] [34m - will validate that training produced an XML file for later ... [0m
[21:09:14    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[21:09:18    INFO] [34m - will validate that the training was not a complete failure ... [0m
[21:09:18    INFO] [34m - training seems to have been successful! will move on ...[0m
[21:09:18    INFO] [40;37;1m[34m - starting ANNZ::Train_singleRegBiasCor() ... [0m
[21:09:22    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[21:09:23    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[21:09:25    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[21:09:25    INFO] [94m - will book ([33mANNZ_8_bias[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m
[21:09:25    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents[0m
[21:09:25    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[0m
[21:09:25    INFO] [94m   - weights:            [36m1[0m
[21:09:25    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[21:09:25    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[21:09:37    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_8[35m ... [0m
[21:09:37    INFO] [33m - Will gen. input-parameter errors ...[0m
[21:09:39    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[21:09:50    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[21:12:35    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:12:35    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:12:35    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[21:12:35    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:13:30    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:13:30    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:13:30    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[21:13:30    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:13:30    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[21:16:16    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:16:16    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:16:16    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[21:16:16    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:17:11    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:17:11    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:17:11    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[21:17:11    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:17:13    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_8/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[21:17:15    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[21:17:15    INFO] [33m - will validate that the bias-correction actually improved the result ...[0m
[21:17:15    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[21:17:15    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_8[35m,[0m
[21:17:20    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_8/plots/[0m
[21:17:32        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_8/plots output/PAUS_advanced3/regres/train/ANNZ_8/plots_biasCor_before[0m
[21:17:32    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[21:17:32    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_8[35m,[0m
[21:17:36    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_8/plots/[0m
[21:17:48        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_8/plots output/PAUS_advanced3/regres/train/ANNZ_8/plots_biasCor_after[0m
[21:17:48    INFO] [32m - Got original [KS-test,N_poiss]: [[35m0.0662569[32m , [35m6.1376[32m] , after the bias-correction: [[35m0.044723[32m , [35m4.54361[32m[32m] --> will [42;37;1mKEEP[0m[32m the correction ![0m
[35m[0m[35m[0m[35m[0m[35m[0m
(21:17 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(21:17 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mband0fluxerror;band1fluxerror;band2fluxerror;band3fluxerror;band4fluxerror;band5fluxerror;band6fluxerror;band7fluxerror;band8fluxerror;band9fluxerror;band10fluxerror;band11fluxerror;band12fluxerror;band13fluxerror;band14fluxerror;band15fluxerror;band16fluxerror;band17fluxerror;band18fluxerror;band19fluxerror;band20fluxerror;band21fluxerror;band22fluxerror;band23fluxerror;band24fluxerror;band25fluxerror;band26fluxerror;band27fluxerror;band28fluxerror;band29fluxerror;band30fluxerror;band31fluxerror;band32fluxerror;band33fluxerror;band34fluxerror;band35fluxerror;band36fluxerror;band37fluxerror;band38fluxerror;band39fluxerror;i_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mband0flux;band1flux;band2flux;band3flux;band4flux;band5flux;band6flux;band7flux;band8flux;band9flux;band10flux;band11flux;band12flux;band13flux;band14flux;band15flux;band16flux;band17flux;band18flux;band19flux;band20flux;band21flux;band22flux;band23flux;band24flux;band25flux;band26flux;band27flux;band28flux;band29flux;band30flux;band31flux;band32flux;band33flux;band34flux;band35flux;band36flux;band37flux;band38flux;band39flux;i_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32m[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(21:17 INFO) 
[21:17:53    INFO] [32m -----------------------------------------------------[0m
[21:17:53    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[21:17:53    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[21:17:54    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[21:17:55    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/train/ANNZ_9/saveOpt.txt[33m ...[0m
[21:18:09    INFO] [40;37;1m[34m - starting ANNZ::Train_singleReg() ... [0m
[21:18:09    INFO] [34m - Found userMLMopts = "" - will generate randomized options... [0m
[21:18:09    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[21:18:09    INFO] [94m - will book ([33mANNZ_9[94m) method([33mBDT[94m) with options: [36m:VarTransform=N,P:NTrees=430:BoostType=AdaBoost[0m
[21:18:09    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random::NormMode=NumEvents[0m
[21:18:09    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[94m ,[0m
[21:18:09    INFO] [94m     cuts (train):       [36m[94m ,[0m
[21:18:09    INFO] [94m     cuts (valid):       [36m[0m
[21:18:09    INFO] [94m   - weights:            [36m1[0m
[21:18:09    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[21:18:10    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[21:18:41    INFO] [33m - Saving MLM information in [32m./output/PAUS_advanced3/regres/train/ANNZ_9/ANNZ_9_weights/saveTrainOpt_ANNZ_9.txt[33m ...[0m
[21:18:44    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_9[35m ... [0m
[21:18:44    INFO] [33m - Will gen. input-parameter errors ...[0m
[21:18:45    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[21:18:52    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[21:20:58    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:20:58    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:20:58    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[21:20:58    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:21:40    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:21:40    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:21:40    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[21:21:40    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:21:40    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[21:23:45    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:23:45    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:23:45    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[21:23:45    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:24:29    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:24:29    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:24:29    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[21:24:29    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:24:29    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_9/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[21:24:30    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[21:24:30    INFO] [33m - will try to derive a bias correction ... [0m
[21:24:30    INFO] [34m - will validate that training produced an XML file for later ... [0m
[21:24:30    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[21:24:32    INFO] [34m - will validate that the training was not a complete failure ... [0m
[21:24:32    INFO] [34m - training seems to have been successful! will move on ...[0m
[21:24:32    INFO] [40;37;1m[34m - starting ANNZ::Train_singleRegBiasCor() ... [0m
[21:24:35    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[21:24:37    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[21:24:38    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[21:24:38    INFO] [94m - will book ([33mANNZ_9_bias[94m) method([33mBDT[94m) with options: [36m:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m
[21:24:38    INFO] [94m   - factory settings:   [36mnTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents[0m
[21:24:38    INFO] [94m   - cuts (all):         [36m(Z >= 0.000000)&&(Z <= 1.200000)[0m
[21:24:38    INFO] [94m   - weights:            [36m1[0m
[21:24:38    INFO] [36m----------------------------------------------------------------------------------------------------[0m
[21:24:38    INFO] [40;37;1m[35m - starting ANNZ::doFactoryTrain() - [33mThis may take a while ...[0m
[21:24:47    INFO] [40;37;1m[35m - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for [32mANNZ_9[35m ... [0m
[21:24:47    INFO] [33m - Will gen. input-parameter errors ...[0m
[21:24:49    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[21:24:56    INFO] [31m - added chain [32mANNZ_tree_train(13331) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_train*.root[0m
[21:27:11    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:27:11    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 43  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:27:11    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 10000  [32mnObj[0m
[21:27:11    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:27:56    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:27:56    INFO] [35m -- [34mANNZ_tree_train [35m....................[33m 54  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:27:56    INFO] [35m -- [34mANNZ_tree_train [35m.................[33m 13331  [32mnObj[0m
[21:27:56    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:27:56    INFO] [31m - added chain [32mANNZ_tree_valid(13352) from [34m./output/PAUS_advanced3/rootIn/ANNZ_tree_valid*.root[0m
[21:30:11    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:30:11    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 45  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:30:11    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 10000  [32mnObj[0m
[21:30:11    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:30:59    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[21:30:59    INFO] [35m -- [34mANNZ_tree_valid [35m....................[33m 64  [32mfailedCut: _comn [ (Z >= 0.000000)&&(Z <= 1.200000) ][0m
[21:30:59    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[21:30:59    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[21:31:01    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train/ANNZ_9/postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...[0m
[21:31:02    INFO] [40;37;1m[32m - ending makeTreeRegClsOneMLM() ... [0m
[21:31:02    INFO] [33m - will validate that the bias-correction actually improved the result ...[0m
[21:31:02    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[21:31:02    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_9[35m,[0m
[21:31:08    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_9/plots/[0m
[21:31:19        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_9/plots output/PAUS_advanced3/regres/train/ANNZ_9/plots_biasCor_before[0m
[21:31:19    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[21:31:19    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_9[35m,[0m
[21:31:24    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/train/ANNZ_9/plots/[0m
[21:31:35        ] [31m - Sys-comnd (exit=0) : [34mmv output/PAUS_advanced3/regres/train/ANNZ_9/plots output/PAUS_advanced3/regres/train/ANNZ_9/plots_biasCor_after[0m
[21:31:35    INFO] [32m - Got original [KS-test,N_poiss]: [[35m0.0824406[32m , [35m5.67075[32m] , after the bias-correction: [[35m0.0477263[32m , [35m4.34329[32m[32m] --> will [42;37;1mKEEP[0m[32m the correction ![0m
[35m[0m[35m[0m[35m[0m[35m[0m
(21:31 INFO) [40;37;1m - 21/01/19 21:31:39 - finished running ANNZ ![0m
(23:03 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(23:03 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(23:03 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(23:03 INFO) [40;37;1m - 21/01/19 23:03:45 - starting ANNZ[0m
(23:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mTrue[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34maddOutputVars[0m[31m=[0m'[32m[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mnPDFbins[0m[31m=[0m'[32m120[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mMLMsToStore[0m[31m=[0m'[32m[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , [34mnPDFs[0m[31m=[0m'[32m1[0m' , 
(23:03 INFO) 
[23:03:45    INFO] [32m -----------------------------------------------------[0m
[23:03:45    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[23:03:45    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[23:03:49    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[23:03:49    INFO] [34m - Will generate [33m1[34m PDFs ... [0m
[23:03:56    INFO] [35m--------------------------------------------------------[0m
[23:03:56    INFO] [34m - All ACCEPTED MLMs: [32mANNZ_0[33m,[32mANNZ_1[33m,[32mANNZ_2[33m,[32mANNZ_3[33m,[32mANNZ_4[33m,[32mANNZ_5[33m,[32mANNZ_6[33m,[32mANNZ_7[33m,[32mANNZ_8[33m,[32mANNZ_9[33m,[0m
[23:03:56    INFO] [34m - All REJECTED MLMs: [0m
[23:03:56    INFO] [35m----------------------------------------------------------------------------------------------------------------[0m
[23:03:58    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/optim/saveOpt.txt[33m ...[0m
[23:04:35    INFO] [40;37;1m[34m - starting ANNZ::Optim() ... [0m
[23:04:35    INFO] [40;37;1m[33m - starting ANNZ::makeTreeRegClsAllMLM() ... [0m
[23:04:36    INFO] [34m - Did not find requred merged result-trees with the correct number of entries -> Will do merging ...[0m
[23:04:41    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[23:04:42    INFO] [40;37;1m[33m - starting ANNZ::verifyIndicesMLM([32mANNZ_tree_train[33m , [32m./output/PAUS_advanced3/regres/train/postTrain/ANNZ_tree_train_00000.root[33m) ... [0m
[23:04:46    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[23:04:46    INFO] [40;37;1m[33m - starting ANNZ::verifyIndicesMLM([32mANNZ_tree_valid[33m , [32m./output/PAUS_advanced3/regres/train/postTrain/ANNZ_tree_valid_00001.root[33m) ... [0m
[23:04:50    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[23:04:50    INFO] [40;37;1m[33m - starting ANNZ::verifyIndicesMLM([32mANNZ_tree_errKNN[33m , [32m./output/PAUS_advanced3/regres/train/postTrain/ANNZ_tree_errKNN_00002.root[33m) ... [0m
[23:04:50    INFO] [33m - Saving file [32m./output/PAUS_advanced3/regres/train//postTrain/savePostTrainOpt.txt[33m to log the creation time of the trees ...[0m
[23:04:51    INFO] [33m - There was need to regenerate the merged result-trees. Will validate that all is good now ...[0m
[23:04:51    INFO] [34m - Found all requred post-train root files -> Getting from file [33m./output/PAUS_advanced3/regres/train//postTrain/savePostTrainOpt.txt[34m the creation time of the merged trees and comparing to the creationg time of source result-trees ...[0m
[23:04:51    INFO] [32m - No new MLMs found ... no need to regenerate the merged trees.[0m
[23:04:51    INFO] [40;37;1m[32m - ending makeTreeRegClsAllMLM() ... [0m
[23:04:51    INFO] [40;37;1m[36m - starting ANNZ::optimReg() ... [0m
[23:04:53    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[23:04:53    INFO] [40;37;1m[33m - starting ANNZ::verifyIndicesMLM([32mANNZ_tree_train[33m , [32m./output/PAUS_advanced3/regres/optim/train/ANNZ_tree_train_00000.root[33m) ... [0m
[23:04:54    INFO] [40;37;1m[35m - starting ANNZ::fillColosureV() ... [0m
[23:04:54    INFO] [36m ---------------------------------------------------------------------------------- [0m
[23:04:54    INFO] [34m - Got the following average properties: [0m
[23:04:54    INFO] [36m --------------------------------------- [0m
[23:04:54    INFO] [36m - type/name,<bias>,<sig68>,<fracSig68_2,3>:  [33mBDT[36m/[33mANNZ_0 	 [35m0.00544921 	 [32m0.0658753[34m 	 0.0662288[0m
[23:04:54    INFO] [36m - type/name,<bias>,<sig68>,<fracSig68_2,3>:  [33mBDT[36m/[33mANNZ_1 	 [35m0.00851827 	 [32m0.0481212[34m 	 0.0665516[0m
[23:04:54    INFO] [36m - type/name,<bias>,<sig68>,<fracSig68_2,3>:  [33mBDT[36m/[33mANNZ_2 	 [35m0.00990032 	 [32m0.0507169[34m 	 0.0369389[0m
[23:04:54    INFO] [36m - type/name,<bias>,<sig68>,<fracSig68_2,3>:  [33mBDT[36m/[33mANNZ_3 	 [35m0.00782305 	 [32m0.0444735[34m 	 0.0742685[0m
[23:04:54    INFO] [36m - type/name,<bias>,<sig68>,<fracSig68_2,3>:  [33mBDT[36m/[33mANNZ_4 	 [35m0.00958493 	 [32m0.0478504[34m 	 0.0686582[0m
[23:04:54    INFO] [36m - type/name,<bias>,<sig68>,<fracSig68_2,3>:  [33mBDT[36m/[33mANNZ_5 	 [35m0.00650699 	 [32m0.0649148[34m 	 0.0384105[0m
[23:04:54    INFO] [36m - type/name,<bias>,<sig68>,<fracSig68_2,3>:  [33mBDT[36m/[33mANNZ_6 	 [35m0.00517559 	 [32m0.0562262[34m 	 0.0792136[0m
[23:04:54    INFO] [36m - type/name,<bias>,<sig68>,<fracSig68_2,3>:  [33mBDT[36m/[33mANNZ_7 	 [35m0.0096583 	 [32m0.0481485[34m 	 0.0665513[0m
[23:04:54    INFO] [36m - type/name,<bias>,<sig68>,<fracSig68_2,3>:  [33mBDT[36m/[33mANNZ_8 	 [35m0.00786438 	 [32m0.0441959[34m 	 0.0758656[0m
[23:04:54    INFO] [36m - type/name,<bias>,<sig68>,<fracSig68_2,3>:  [33mBDT[36m/[33mANNZ_9 	 [35m0.00518697 	 [32m0.056247[34m 	 0.0792884[0m
[23:04:54    INFO] [36m ------------------------------------------------------------------------------------------------- [0m
[23:04:54    INFO] [40;37;1m[36m - starting ANNZ::getBestANNZ(optimCondReg="[33msig68[36m") ... [0m
[23:04:54    INFO] [34m - Will optimize based on bias and sig68 only (priority on [32msig68[34m)[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m10[31m% of the [sig68] dist, and [33m20[31m% of the other(s) - iteration [33m0[31m ...[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m12.5[31m% of the [sig68] dist, and [33m22.5[31m% of the other(s) - iteration [33m1[31m ...[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m15[31m% of the [sig68] dist, and [33m25[31m% of the other(s) - iteration [33m2[31m ...[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m17.5[31m% of the [sig68] dist, and [33m27.5[31m% of the other(s) - iteration [33m3[31m ...[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m20[31m% of the [sig68] dist, and [33m30[31m% of the other(s) - iteration [33m4[31m ...[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m22.5[31m% of the [sig68] dist, and [33m32.5[31m% of the other(s) - iteration [33m5[31m ...[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m25[31m% of the [sig68] dist, and [33m35[31m% of the other(s) - iteration [33m6[31m ...[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m27.5[31m% of the [sig68] dist, and [33m37.5[31m% of the other(s) - iteration [33m7[31m ...[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m30[31m% of the [sig68] dist, and [33m40[31m% of the other(s) - iteration [33m8[31m ...[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m32.5[31m% of the [sig68] dist, and [33m42.5[31m% of the other(s) - iteration [33m9[31m ...[0m
[23:04:54    INFO] [31m - Now trying to find best methods with a limit of [33m35[31m% of the [sig68] dist, and [33m45[31m% of the other(s) - iteration [33m10[31m ...[0m
[23:04:54    INFO] [32m - Found 1 "best" methods (min-threshold was 1) from the bottom 35% of the [sig68] dist.[0m
[23:04:54    INFO] [34m - The "best" MLM is: [31mANNZ_3[0m
[23:04:54    INFO] [40;37;1m[33m - starting ANNZ::getRndMethodBestPDF() ... [0m
[23:04:54    INFO] [35m - initial PDF weights: [35m[32mANNZ_6:[33m0.250 [32mANNZ_9:[33m0.214 [32mANNZ_3:[33m0.179 [32mANNZ_8:[33m0.143 [32mANNZ_1:[33m0.107 [32mANNZ_4:[33m0.071 [32mANNZ_7:[33m0.036 [0m
[23:04:54    INFO] [32m - will loop on the input trees ...[0m
[23:04:54    INFO] [32m - NEW:  [35m0[32m - min-param best/prev/now: [34m1.79769e+308[32m / [31m1.79769e+308[32m / [34m2.57570e-01[32m[0m
[23:04:54    INFO] [33m - nTry: [35m1[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57570e-01[33m / [34m2.57707e-01[33m[0m
[23:04:54    INFO] [33m - nTry: [35m2[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57570e-01[33m / [34m2.57924e-01[33m[0m
[23:04:54    INFO] [33m - nTry: [35m3[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57570e-01[33m / [34m2.58240e-01[33m[0m
[23:04:54    INFO] [33m - nTry: [35m4[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57570e-01[33m / [34m2.58341e-01[33m[0m
[23:04:54    INFO] [33m - nTry: [35m5[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57570e-01[33m / [34m2.58258e-01[33m[0m
[23:04:54    INFO] [33m - nTry: [35m6[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57570e-01[33m / [34m2.57571e-01[33m[0m
[23:04:55    INFO] [33m - nTry: [35m7[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57570e-01[33m / [34m2.57629e-01[33m[0m
[23:04:55    INFO] [33m - nTry: [35m8[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57570e-01[33m / [34m2.57608e-01[33m[0m
[23:04:55    INFO] [33m - nTry: [35m9[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57570e-01[33m / [34m2.57689e-01[33m[0m
[23:04:55    INFO] [33m - nTry: [35m10[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57689e-01[33m / [34m2.57767e-01[33m[0m
[23:04:55    INFO] [33m - nTry: [35m20[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.57617e-01[33m / [34m2.57920e-01[33m[0m
[23:04:55    INFO] [33m - nTry: [35m30[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.58290e-01[33m / [34m2.58342e-01[33m[0m
[23:04:56    INFO] [33m - nTry: [35m40[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.58390e-01[33m / [34m2.58436e-01[33m[0m
[23:04:56    INFO] [33m - nTry: [35m50[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.58390e-01[33m / [34m2.58674e-01[33m[0m
[23:04:56    INFO] [33m - nTry: [35m60[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.58725e-01[33m / [34m2.58823e-01[33m[0m
[23:04:57    INFO] [33m - nTry: [35m70[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.58827e-01[33m / [34m2.58856e-01[33m[0m
[23:04:57    INFO] [33m - nTry: [35m80[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.59007e-01[33m / [34m2.59163e-01[33m[0m
[23:04:57    INFO] [33m - nTry: [35m90[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.59252e-01[33m / [34m2.59355e-01[33m[0m
[23:04:58    INFO] [33m - nTry: [35m100[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.59482e-01[33m / [34m2.59549e-01[33m[0m
[23:04:59    INFO] [33m - nTry: [35m120[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.59703e-01[33m / [34m2.59718e-01[33m[0m
[23:04:59    INFO] [33m - nTry: [35m140[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.59678e-01[33m / [34m2.59693e-01[33m[0m
[23:05:00    INFO] [33m - nTry: [35m150[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.59678e-01[33m / [34m2.59747e-01[33m[0m
[23:05:00    INFO] [33m - nTry: [35m160[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.59678e-01[33m / [34m2.59831e-01[33m[0m
[23:05:01    INFO] [33m - nTry: [35m180[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.60007e-01[33m / [34m2.60043e-01[33m[0m
[23:05:01    INFO] [33m - nTry: [35m200[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.60165e-01[33m / [34m2.60257e-01[33m[0m
[23:05:02    INFO] [33m - nTry: [35m220[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.60308e-01[33m / [34m2.60376e-01[33m[0m
[23:05:03    INFO] [33m - nTry: [35m240[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.60363e-01[33m / [34m2.60368e-01[33m[0m
[23:05:03    INFO] [33m - nTry: [35m250[33m - min-param best/prev/now: [34m2.57570e-01[33m / [31m2.60352e-01[33m / [34m2.60359e-01[33m[0m
[23:05:03    INFO] [35m - finished PDF optimization! - final minimization parameter: [31m2.57570e-01[35m , PDF weights: [32mANNZ_6:[33m0.250 [32mANNZ_9:[33m0.214 [32mANNZ_3:[33m0.179 [32mANNZ_8:[33m0.143 [32mANNZ_1:[33m0.107 [32mANNZ_4:[33m0.071 [32mANNZ_7:[33m0.036 [0m
[23:05:03    INFO] [34m - will derive the bias correction for the pdf ... [0m
[23:05:04    INFO] [34m - Derived the following PDF(0) weights: [32mANNZ_0:[35m0.000000[32m, [32mANNZ_1:[35m0.107143[32m, [32mANNZ_2:[35m0.000000[32m, [32mANNZ_3:[35m0.178571[32m, [32mANNZ_4:[35m0.071429[32m, [32mANNZ_5:[35m0.000000[32m, [32mANNZ_6:[35m0.250000[32m, [32mANNZ_7:[35m0.035714[32m, [32mANNZ_8:[35m0.142857[32m, [32mANNZ_9:[35m0.214286[32m, [0m
[23:05:04    INFO] [33m - Saving optimization results in [32m./output/PAUS_advanced3/regres/optim/saveOptimOpt.txt[33m ...[0m
[23:05:05    INFO] [33m - Saving bias-correction results in [32m./output/PAUS_advanced3/regres/optim/saveOptimObj.root[33m ...[0m
[23:05:07    INFO] [40;37;1m[36m - starting ANNZ::mergeTreeFriends() ... [0m
[23:05:07    INFO] [40;37;1m[33m - starting ANNZ::verifyIndicesMLM([32mANNZ_tree_valid[33m , [32m./output/PAUS_advanced3/regres/optim/valid/ANNZ_tree_valid_00000.root[33m) ... [0m
[23:05:10    INFO] [35m - starting ANNZ::doEvalReg() ... [0m
[23:05:10    INFO] [33m - Will gen. input-parameter errors for: [34mANNZ_0[35m,[34mANNZ_1[35m,[34mANNZ_2[35m,[34mANNZ_3[35m,[34mANNZ_4[35m,[34mANNZ_5[35m,[34mANNZ_6[35m,[34mANNZ_7[35m,[34mANNZ_8[35m,[34mANNZ_9[35m,[0m
[23:05:10    INFO] [33m - Reading bias-correction results from [32m./output/PAUS_advanced3/regres/optim/saveOptimObj.root[33m ...[0m
[23:05:10    INFO] [33m - Getting optimization results from [32m./output/PAUS_advanced3/regres/optim/saveOptimOpt.txt[33m ...[0m
[23:05:10    INFO] [33m - creating final MLM and PDFs trees from input MLM trees ...[0m
[23:05:13    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[23:05:13    INFO] [35m -- [34mANNZ_tree_valid [35m.................[33m 13352  [32mnObj[0m
[23:05:13    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[23:05:13    INFO] [40;37;1m[35m - starting storeTreeToAscii() ... [0m
[23:05:13    INFO] [34m - will write to file the following branches: [32mZ[33m,[32mANNZ_best[33m,[32mANNZ_best_wgt[33m,[32mANNZ_best_err[33m,[32mANNZ_MLM_avg_0[33m,[32mANNZ_MLM_avg_0_err[33m,[32mANNZ_MLM_avg_0_wgt[33m,[32mANNZ_PDF_avg_0[33m,[32mANNZ_PDF_avg_0_err[33m,[32mANNZ_PDF_avg_0_wgt[33m,[32mANNZ_PDF_0_0[33m,[32mANNZ_PDF_0_1[33m,[32mANNZ_PDF_0_2[33m,[32mANNZ_PDF_0_3[33m,[32mANNZ_PDF_0_4[33m,[32mANNZ_PDF_0_5[33m,[32mANNZ_PDF_0_6[33m,[32mANNZ_PDF_0_7[33m,[32mANNZ_PDF_0_8[33m,[32mANNZ_PDF_0_9[33m,[32mANNZ_PDF_0_10[33m,[32mANNZ_PDF_0_11[33m,[32mANNZ_PDF_0_12[33m,[32mANNZ_PDF_0_13[33m,[32mANNZ_PDF_0_14[33m,[32mANNZ_PDF_0_15[33m,[32mANNZ_PDF_0_16[33m,[32mANNZ_PDF_0_17[33m,[32mANNZ_PDF_0_18[33m,[32mANNZ_PDF_0_19[33m,[32mANNZ_PDF_0_20[33m,[32mANNZ_PDF_0_21[33m,[32mANNZ_PDF_0_22[33m,[32mANNZ_PDF_0_23[33m,[32mANNZ_PDF_0_24[33m,[32mANNZ_PDF_0_25[33m,[32mANNZ_PDF_0_26[33m,[32mANNZ_PDF_0_27[33m,[32mANNZ_PDF_0_28[33m,[32mANNZ_PDF_0_29[33m,[32mANNZ_PDF_0_30[33m,[32mANNZ_PDF_0_31[33m,[32mANNZ_PDF_0_32[33m,[32mANNZ_PDF_0_33[33m,[32mANNZ_PDF_0_34[33m,[32mANNZ_PDF_0_35[33m,[32mANNZ_PDF_0_36[33m,[32mANNZ_PDF_0_37[33m,[32mANNZ_PDF_0_38[33m,[32mANNZ_PDF_0_39[33m,[32mANNZ_PDF_0_40[33m,[32mANNZ_PDF_0_41[33m,[32mANNZ_PDF_0_42[33m,[32mANNZ_PDF_0_43[33m,[32mANNZ_PDF_0_44[33m,[32mANNZ_PDF_0_45[33m,[32mANNZ_PDF_0_46[33m,[32mANNZ_PDF_0_47[33m,[32mANNZ_PDF_0_48[33m,[32mANNZ_PDF_0_49[33m,[32mANNZ_PDF_0_50[33m,[32mANNZ_PDF_0_51[33m,[32mANNZ_PDF_0_52[33m,[32mANNZ_PDF_0_53[33m,[32mANNZ_PDF_0_54[33m,[32mANNZ_PDF_0_55[33m,[32mANNZ_PDF_0_56[33m,[32mANNZ_PDF_0_57[33m,[32mANNZ_PDF_0_58[33m,[32mANNZ_PDF_0_59[33m,[32mANNZ_PDF_0_60[33m,[32mANNZ_PDF_0_61[33m,[32mANNZ_PDF_0_62[33m,[32mANNZ_PDF_0_63[33m,[32mANNZ_PDF_0_64[33m,[32mANNZ_PDF_0_65[33m,[32mANNZ_PDF_0_66[33m,[32mANNZ_PDF_0_67[33m,[32mANNZ_PDF_0_68[33m,[32mANNZ_PDF_0_69[33m,[32mANNZ_PDF_0_70[33m,[32mANNZ_PDF_0_71[33m,[32mANNZ_PDF_0_72[33m,[32mANNZ_PDF_0_73[33m,[32mANNZ_PDF_0_74[33m,[32mANNZ_PDF_0_75[33m,[32mANNZ_PDF_0_76[33m,[32mANNZ_PDF_0_77[33m,[32mANNZ_PDF_0_78[33m,[32mANNZ_PDF_0_79[33m,[32mANNZ_PDF_0_80[33m,[32mANNZ_PDF_0_81[33m,[32mANNZ_PDF_0_82[33m,[32mANNZ_PDF_0_83[33m,[32mANNZ_PDF_0_84[33m,[32mANNZ_PDF_0_85[33m,[32mANNZ_PDF_0_86[33m,[32mANNZ_PDF_0_87[33m,[32mANNZ_PDF_0_88[33m,[32mANNZ_PDF_0_89[33m,[32mANNZ_PDF_0_90[33m,[32mANNZ_PDF_0_91[33m,[32mANNZ_PDF_0_92[33m,[32mANNZ_PDF_0_93[33m,[32mANNZ_PDF_0_94[33m,[32mANNZ_PDF_0_95[33m,[32mANNZ_PDF_0_96[33m,[32mANNZ_PDF_0_97[33m,[32mANNZ_PDF_0_98[33m,[32mANNZ_PDF_0_99[33m,[32mANNZ_PDF_0_100[33m,[32mANNZ_PDF_0_101[33m,[32mANNZ_PDF_0_102[33m,[32mANNZ_PDF_0_103[33m,[32mANNZ_PDF_0_104[33m,[32mANNZ_PDF_0_105[33m,[32mANNZ_PDF_0_106[33m,[32mANNZ_PDF_0_107[33m,[32mANNZ_PDF_0_108[33m,[32mANNZ_PDF_0_109[33m,[32mANNZ_PDF_0_110[33m,[32mANNZ_PDF_0_111[33m,[32mANNZ_PDF_0_112[33m,[32mANNZ_PDF_0_113[33m,[32mANNZ_PDF_0_114[33m,[32mANNZ_PDF_0_115[33m,[32mANNZ_PDF_0_116[33m,[32mANNZ_PDF_0_117[33m,[32mANNZ_PDF_0_118[33m,[32mANNZ_PDF_0_119[33m,[0m
[23:05:13    INFO] [31m - Will parse  [32mANNZ_tree_randomReg(13352)... Now in [34m./output/PAUS_advanced3/regres/optim/eval/ANNZ_randomReg_0000.csv[0m
[23:05:14    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[23:05:14    INFO] [35m -- [34mANNZ_randomReg [35m..................[33m 13352  [32mnObj[0m
[23:05:14    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[23:05:14    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[23:05:14    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_best[35m,[0m
[23:05:14    INFO] [33m - Will use (1) PDFs from the input chain: [35mPDF_0[32m,[0m
[23:05:18    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/optim/eval/plots/[0m

(23:05 INFO) [40;37;1m - 21/01/19 23:05:19 - finished running ANNZ ![0m
(23:05 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(23:05 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(23:05 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(23:05 INFO) [40;37;1m - 21/01/19 23:05:31 - starting ANNZ[0m
(23:05 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(23:05 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34minDirName[0m[31m=[0m'[32mPAUS/[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mPAUS_advanced3[0m' , [34maddOutputVars[0m[31m=[0m'[32m[0m' , [34mevalDirPostfix[0m[31m=[0m'[32mnFile0[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minAsciiFiles[0m[31m=[0m'[32mANNz_data5b.csv[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34minAsciiVars[0m[31m=[0m'[32mF:band0flux;F:band1flux;F:band2flux;F:band3flux;F:band4flux;F:band5flux;F:band6flux;F:band7flux;F:band8flux;F:band9flux;F:band10flux;F:band11flux;F:band12flux;F:band13flux;F:band14flux;F:band15flux;F:band16flux;F:band17flux;F:band18flux;F:band19flux;F:band20flux;F:band21flux;F:band22flux;F:band23flux;F:band24flux;F:band25flux;F:band26flux;F:band27flux;F:band28flux;F:band29flux;F:band30flux;F:band31flux;F:band32flux;F:band33flux;F:band34flux;F:band35flux;F:band36flux;F:band37flux;F:band38flux;F:band39flux;F:band0fluxerror;F:band1fluxerror;F:band2fluxerror;F:band3fluxerror;F:band4fluxerror;F:band5fluxerror;F:band6fluxerror;F:band7fluxerror;F:band8fluxerror;F:band9fluxerror;F:band10fluxerror;F:band11fluxerror;F:band12fluxerror;F:band13fluxerror;F:band14fluxerror;F:band15fluxerror;F:band16fluxerror;F:band17fluxerror;F:band18fluxerror;F:band19fluxerror;F:band20fluxerror;F:band21fluxerror;F:band22fluxerror;F:band23fluxerror;F:band24fluxerror;F:band25fluxerror;F:band26fluxerror;F:band27fluxerror;F:band28fluxerror;F:band29fluxerror;F:band30fluxerror;F:band31fluxerror;F:band32fluxerror;F:band33fluxerror;F:band34fluxerror;F:band35fluxerror;F:band36fluxerror;F:band37fluxerror;F:band38fluxerror;F:band39fluxerror;F:i_auto;F:umag;F:bmag;F:vmag;F:gmag;F:rmag;F:jmag;F:kmag;F:i_auto_err;F:umag_err;F:bmag_err;F:vmag_err;F:gmag_err;F:rmag_err;F:jmag_err;F:kmag_err;F:Z;F:Zerror[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mnPDFbins[0m[31m=[0m'[32m120[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mMLMsToStore[0m[31m=[0m'[32m[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mZ[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , [34mnPDFs[0m[31m=[0m'[32m1[0m' , 
(23:05 INFO) 
[23:05:31    INFO] [32m -----------------------------------------------------[0m
[23:05:31    INFO] [32m - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -[0m
[23:05:31    INFO] [32m -----------------------------------------------------------------------------------------------------------[0m
[23:05:32    INFO] [40;37;1m[34m - starting ANNZ::Init() [34m ... [0m
[23:05:32    INFO] [34m - Will generate [33m1[34m PDFs ... [0m
[23:05:38    INFO] [35m--------------------------------------------------------[0m
[23:05:38    INFO] [34m - All ACCEPTED MLMs: [32mANNZ_0[33m,[32mANNZ_1[33m,[32mANNZ_2[33m,[32mANNZ_3[33m,[32mANNZ_4[33m,[32mANNZ_5[33m,[32mANNZ_6[33m,[32mANNZ_7[33m,[32mANNZ_8[33m,[32mANNZ_9[33m,[0m
[23:05:38    INFO] [34m - All REJECTED MLMs: [0m
[23:05:38    INFO] [35m----------------------------------------------------------------------------------------------------------------[0m
[23:05:40    INFO] [33m - Saving run information in [32m./output/PAUS_advanced3/regres/eval_nFile0/saveOpt.txt[33m ...[0m
[23:06:16    INFO] [40;37;1m[34m - starting inputToFullTree([31mANNz_data5b.csv[34m) ... [0m
[23:06:16    INFO] [32m - Found [33m13343[32m lines in file [31mPAUS/ANNz_data5b.csv[32m[32m -> total so far = [33m13343 ... [0m
[23:06:16    INFO] [32m - Now reading-in [33mPAUS/ANNz_data5b.csv[32m ... [0m
[23:06:17    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[23:06:17    INFO] [35m -- [34mANNZ_tree_eval [35m..................[33m 13343  [32mnLine[0m
[23:06:17    INFO] [35m -- [34mANNZ_tree_eval [35m..................[33m 13343  [32mnObj[0m
[23:06:17    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[23:06:18    INFO] [40;37;1m[36m - starting ANNZ::Eval() ... [0m
[23:06:18    INFO] [35m - starting ANNZ::doEvalReg() ... [0m
[23:06:18    INFO] [33m - Will gen. input-parameter errors for: [34mANNZ_0[35m,[34mANNZ_1[35m,[34mANNZ_2[35m,[34mANNZ_3[35m,[34mANNZ_4[35m,[34mANNZ_5[35m,[34mANNZ_6[35m,[34mANNZ_7[35m,[34mANNZ_8[35m,[34mANNZ_9[35m,[0m
[23:06:18    INFO] [33m - Reading bias-correction results from [32m./output/PAUS_advanced3/regres/optim/saveOptimObj.root[33m ...[0m
[23:06:18    INFO] [33m - Getting optimization results from [32m./output/PAUS_advanced3/regres/optim/saveOptimOpt.txt[33m ...[0m
[23:06:18    INFO] [33m - creating MLM trees from input ...[0m
[23:06:18    INFO] [34m - nDivLoopNow([35m1[34m/[35m1[34m) -> will use the following MLMs: [32mANNZ_1[35m,[32mANNZ_3[35m,[32mANNZ_4[35m,[32mANNZ_6[35m,[32mANNZ_7[35m,[32mANNZ_8[35m,[32mANNZ_9[35m,[0m
[23:06:18    INFO] [40;37;1m[33m - starting ANNZ::loadReaders() ... [0m
[23:29:32    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[23:29:32    INFO] [35m -- [34mANNZ_tree_eval [35m..................[33m 13343  [32mnObj[0m
[23:29:32    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[23:29:33    INFO] [33m - creating final MLM and PDFs trees from input MLM trees ...[0m
[23:29:36    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[23:29:36    INFO] [35m -- [34mANNZ_tree_MLM_nDiv0 [35m.............[33m 13343  [32mnObj[0m
[23:29:36    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[23:29:36    INFO] [40;37;1m[35m - starting storeTreeToAscii() ... [0m
[23:29:36    INFO] [34m - will write to file the following branches: [32mZ[33m,[32mANNZ_best[33m,[32mANNZ_best_wgt[33m,[32mANNZ_best_err[33m,[32mANNZ_MLM_avg_0[33m,[32mANNZ_MLM_avg_0_err[33m,[32mANNZ_MLM_avg_0_wgt[33m,[32mANNZ_PDF_avg_0[33m,[32mANNZ_PDF_avg_0_err[33m,[32mANNZ_PDF_avg_0_wgt[33m,[32mANNZ_PDF_0_0[33m,[32mANNZ_PDF_0_1[33m,[32mANNZ_PDF_0_2[33m,[32mANNZ_PDF_0_3[33m,[32mANNZ_PDF_0_4[33m,[32mANNZ_PDF_0_5[33m,[32mANNZ_PDF_0_6[33m,[32mANNZ_PDF_0_7[33m,[32mANNZ_PDF_0_8[33m,[32mANNZ_PDF_0_9[33m,[32mANNZ_PDF_0_10[33m,[32mANNZ_PDF_0_11[33m,[32mANNZ_PDF_0_12[33m,[32mANNZ_PDF_0_13[33m,[32mANNZ_PDF_0_14[33m,[32mANNZ_PDF_0_15[33m,[32mANNZ_PDF_0_16[33m,[32mANNZ_PDF_0_17[33m,[32mANNZ_PDF_0_18[33m,[32mANNZ_PDF_0_19[33m,[32mANNZ_PDF_0_20[33m,[32mANNZ_PDF_0_21[33m,[32mANNZ_PDF_0_22[33m,[32mANNZ_PDF_0_23[33m,[32mANNZ_PDF_0_24[33m,[32mANNZ_PDF_0_25[33m,[32mANNZ_PDF_0_26[33m,[32mANNZ_PDF_0_27[33m,[32mANNZ_PDF_0_28[33m,[32mANNZ_PDF_0_29[33m,[32mANNZ_PDF_0_30[33m,[32mANNZ_PDF_0_31[33m,[32mANNZ_PDF_0_32[33m,[32mANNZ_PDF_0_33[33m,[32mANNZ_PDF_0_34[33m,[32mANNZ_PDF_0_35[33m,[32mANNZ_PDF_0_36[33m,[32mANNZ_PDF_0_37[33m,[32mANNZ_PDF_0_38[33m,[32mANNZ_PDF_0_39[33m,[32mANNZ_PDF_0_40[33m,[32mANNZ_PDF_0_41[33m,[32mANNZ_PDF_0_42[33m,[32mANNZ_PDF_0_43[33m,[32mANNZ_PDF_0_44[33m,[32mANNZ_PDF_0_45[33m,[32mANNZ_PDF_0_46[33m,[32mANNZ_PDF_0_47[33m,[32mANNZ_PDF_0_48[33m,[32mANNZ_PDF_0_49[33m,[32mANNZ_PDF_0_50[33m,[32mANNZ_PDF_0_51[33m,[32mANNZ_PDF_0_52[33m,[32mANNZ_PDF_0_53[33m,[32mANNZ_PDF_0_54[33m,[32mANNZ_PDF_0_55[33m,[32mANNZ_PDF_0_56[33m,[32mANNZ_PDF_0_57[33m,[32mANNZ_PDF_0_58[33m,[32mANNZ_PDF_0_59[33m,[32mANNZ_PDF_0_60[33m,[32mANNZ_PDF_0_61[33m,[32mANNZ_PDF_0_62[33m,[32mANNZ_PDF_0_63[33m,[32mANNZ_PDF_0_64[33m,[32mANNZ_PDF_0_65[33m,[32mANNZ_PDF_0_66[33m,[32mANNZ_PDF_0_67[33m,[32mANNZ_PDF_0_68[33m,[32mANNZ_PDF_0_69[33m,[32mANNZ_PDF_0_70[33m,[32mANNZ_PDF_0_71[33m,[32mANNZ_PDF_0_72[33m,[32mANNZ_PDF_0_73[33m,[32mANNZ_PDF_0_74[33m,[32mANNZ_PDF_0_75[33m,[32mANNZ_PDF_0_76[33m,[32mANNZ_PDF_0_77[33m,[32mANNZ_PDF_0_78[33m,[32mANNZ_PDF_0_79[33m,[32mANNZ_PDF_0_80[33m,[32mANNZ_PDF_0_81[33m,[32mANNZ_PDF_0_82[33m,[32mANNZ_PDF_0_83[33m,[32mANNZ_PDF_0_84[33m,[32mANNZ_PDF_0_85[33m,[32mANNZ_PDF_0_86[33m,[32mANNZ_PDF_0_87[33m,[32mANNZ_PDF_0_88[33m,[32mANNZ_PDF_0_89[33m,[32mANNZ_PDF_0_90[33m,[32mANNZ_PDF_0_91[33m,[32mANNZ_PDF_0_92[33m,[32mANNZ_PDF_0_93[33m,[32mANNZ_PDF_0_94[33m,[32mANNZ_PDF_0_95[33m,[32mANNZ_PDF_0_96[33m,[32mANNZ_PDF_0_97[33m,[32mANNZ_PDF_0_98[33m,[32mANNZ_PDF_0_99[33m,[32mANNZ_PDF_0_100[33m,[32mANNZ_PDF_0_101[33m,[32mANNZ_PDF_0_102[33m,[32mANNZ_PDF_0_103[33m,[32mANNZ_PDF_0_104[33m,[32mANNZ_PDF_0_105[33m,[32mANNZ_PDF_0_106[33m,[32mANNZ_PDF_0_107[33m,[32mANNZ_PDF_0_108[33m,[32mANNZ_PDF_0_109[33m,[32mANNZ_PDF_0_110[33m,[32mANNZ_PDF_0_111[33m,[32mANNZ_PDF_0_112[33m,[32mANNZ_PDF_0_113[33m,[32mANNZ_PDF_0_114[33m,[32mANNZ_PDF_0_115[33m,[32mANNZ_PDF_0_116[33m,[32mANNZ_PDF_0_117[33m,[32mANNZ_PDF_0_118[33m,[32mANNZ_PDF_0_119[33m,[0m
[23:29:36    INFO] [31m - Will parse  [32mANNZ_tree_randomReg(13343)... Now in [34m./output/PAUS_advanced3/regres/eval_nFile0/ANNZ_randomReg_0000.csv[0m
[23:29:38    INFO] [35m -- COUNTERS ------------------------------------------------------------------------------[0m
[23:29:38    INFO] [35m -- [34mANNZ_randomReg [35m..................[33m 13343  [32mnObj[0m
[23:29:38    INFO] [35m -----------------------------------------------------------------------------------------------------------[0m
[23:29:40    INFO] [34m - detected the target,[32mZ[34m in the evaluated sample - Will create performance plots ...[0m
[23:29:40    INFO] [40;37;1m[35m - starting ANNZ::doMetricPlots() ... [0m
[23:29:40    INFO] [33m - Will use (1) MLMs from the input chain: [32mANNZ_best[35m,[0m
[23:29:40    INFO] [33m - Will use (1) PDFs from the input chain: [35mPDF_0[32m,[0m
[23:29:43    INFO] [36m - Writing to plotting directory [35moutput/PAUS_advanced3/regres/eval_nFile0/plots/[0m
[35m[0m[35m[0m[35m[0m[35m[0m[35m[0m[35m[0m[35m[0m[35m[0m[35m[0m[35m[0m[35m[0m[35m[0m[35m[0m[35m[0m
(23:29 INFO) [40;37;1m - 21/01/19 23:29:43 - finished running ANNZ ![0m
