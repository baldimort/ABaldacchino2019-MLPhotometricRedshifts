(16:58 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(16:58 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(16:58 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(16:58 INFO) [40;37;1m - 14/03/19 16:58:55 - starting ANNZ[0m
(16:58 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:58 INFO)    [34msplitTypeTrain[0m[31m=[0m'[32mANNz_data10a.csv[0m' , [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m5[0m' , [34minDirName[0m[31m=[0m'[32mPAUS/[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced15[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34msplitTypeTest[0m[31m=[0m'[32mANNz_data10b.csv[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34minAsciiVars[0m[31m=[0m'[32mF:ref_id;F:zb;F:pz_width;F:odds;F:qz;F:production_id;F:paudm_id;F:ra;F:dec;F:zspec;F:conf;F:i_auto;F:umag;F:bmag;F:vmag;F:gmag;F:rmag;F:jmag;F:kmag;F:i_auto_err;F:umag_err;F:bmag_err;F:vmag_err;F:gmag_err;F:rmag_err;F:jmag_err;F:kmag_err;F:band0_flux;F:band1_flux;F:band2_flux;F:band3_flux;F:band4_flux;F:band5_flux;F:band6_flux;F:band7_flux;F:band8_flux;F:band9_flux;F:band10_flux;F:band11_flux;F:band12_flux;F:band13_flux;F:band14_flux;F:band15_flux;F:band16_flux;F:band17_flux;F:band18_flux;F:band19_flux;F:band20_flux;F:band21_flux;F:band22_flux;F:band23_flux;F:band24_flux;F:band25_flux;F:band26_flux;F:band27_flux;F:band28_flux;F:band29_flux;F:band30_flux;F:band31_flux;F:band32_flux;F:band33_flux;F:band34_flux;F:band35_flux;F:band36_flux;F:band37_flux;F:band38_flux;F:band39_flux;F:band0_flux_error;F:band1_flux_error;F:band2_flux_error;F:band3_flux_error;F:band4_flux_error;F:band5_flux_error;F:band6_flux_error;F:band7_flux_error;F:band8_flux_error;F:band9_flux_error;F:band10_flux_error;F:band11_flux_error;F:band12_flux_error;F:band13_flux_error;F:band14_flux_error;F:band15_flux_error;F:band16_flux_error;F:band17_flux_error;F:band18_flux_error;F:band19_flux_error;F:band20_flux_error;F:band21_flux_error;F:band22_flux_error;F:band23_flux_error;F:band24_flux_error;F:band25_flux_error;F:band26_flux_error;F:band27_flux_error;F:band28_flux_error;F:band29_flux_error;F:band30_flux_error;F:band31_flux_error;F:band32_flux_error;F:band33_flux_error;F:band34_flux_error;F:band35_flux_error;F:band36_flux_error;F:band37_flux_error;F:band38_flux_error;F:band39_flux_error[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mTrue[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:58 INFO) 
[16:58:55    INFO]  -----------------------------------------------------
[16:58:55    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:58:55    INFO]  -----------------------------------------------------------------------------------------------------------
[16:58:59    INFO]  - starting inputToSplitTree() ... 
[16:58:59    INFO]  - Found 8926 lines in file PAUS/ANNz_data10a.csv -> total so far = 8926 ... 
[16:58:59    INFO]  - Found 2232 lines in file PAUS/ANNz_data10b.csv -> total so far = 2232 ... 
[16:58:59    INFO]  - Now reading-in PAUS/ANNz_data10a.csv ... 
[16:59:00    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:59:00    INFO]  -- ANNZ_tree .......................................... 0  index
[16:59:00    INFO]  -- ANNZ_tree ....................................... 8926  nLine
[16:59:00    INFO]  -- ANNZ_tree ....................................... 8926  nLineFile
[16:59:00    INFO]  -- ANNZ_tree ....................................... 8926  nObj
[16:59:00    INFO]  -- ANNZ_tree .......................................... 0  nTest
[16:59:00    INFO]  -- ANNZ_tree ....................................... 8926  nTrain
[16:59:00    INFO]  -----------------------------------------------------------------------------------------------------------
[16:59:01    INFO]  - Now reading-in PAUS/ANNz_data10b.csv ... 
[16:59:01    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[16:59:01    INFO]  -- ANNZ_tree .......................................... 0  index
[16:59:01    INFO]  -- ANNZ_tree ...................................... 11158  nLine
[16:59:01    INFO]  -- ANNZ_tree ....................................... 2232  nLineFile
[16:59:01    INFO]  -- ANNZ_tree ....................................... 2232  nObj
[16:59:01    INFO]  -- ANNZ_tree ....................................... 2232  nTest
[16:59:01    INFO]  -- ANNZ_tree ....................................... 8926  nTrain
[16:59:01    INFO]  -----------------------------------------------------------------------------------------------------------
[16:59:02    INFO]  - Writing to plotting directory output/SPEC_advanced15/rootIn/plots/
[16:59:04    INFO]  - Writing to plotting directory output/SPEC_advanced15/rootIn/plots/

(16:59 INFO) [40;37;1m - 14/03/19 16:59:06 - finished running ANNZ ![0m
(16:59 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(16:59 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(16:59 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(16:59 INFO) [40;37;1m - 14/03/19 16:59:32 - starting ANNZ[0m
(16:59 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:59 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m5[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced15[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=1050:BoostType=AdaBoost[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:59 INFO) 
[16:59:33    INFO]  -----------------------------------------------------
[16:59:33    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:59:33    INFO]  -----------------------------------------------------------------------------------------------------------
[16:59:34    INFO]  - starting ANNZ::Init()  ... 
[16:59:36    INFO]  - Saving run information in ./output/SPEC_advanced15/regres/train/ANNZ_0/saveOpt.txt ...
[16:59:44    INFO]  - starting ANNZ::Train_singleReg() ... 
[16:59:44    INFO] ----------------------------------------------------------------------------------------------------
[16:59:44    INFO]  - will book (ANNZ_0) method(BDT) with options: :NTrees=1050:BoostType=AdaBoost:VarTransform=N,P
[16:59:44    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[16:59:44    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[16:59:44    INFO]      cuts (train):        ,
[16:59:44    INFO]      cuts (valid):       
[16:59:44    INFO]    - weights:            1
[16:59:44    INFO] ----------------------------------------------------------------------------------------------------
[16:59:45    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:02:41    INFO]  - Saving MLM information in ./output/SPEC_advanced15/regres/train/ANNZ_0/ANNZ_0_weights/saveTrainOpt_ANNZ_0.txt ...
[17:02:47    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_0 ... 
[17:02:47    INFO]  - Will gen. input-parameter errors ...
[17:02:50    INFO]  - starting ANNZ::loadReaders() ... 
[17:03:10    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_train*.root
[17:19:46    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:19:46    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:19:46    INFO]  -----------------------------------------------------------------------------------------------------------
[17:19:46    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_valid*.root
[17:23:24    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:23:24    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:23:24    INFO]  -----------------------------------------------------------------------------------------------------------
[17:23:25    INFO]  - Saving file ./output/SPEC_advanced15/regres/train/ANNZ_0/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:23:27    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:23:27    INFO]  - will try to derive a bias correction ... 
[17:23:27    INFO]  - will validate that training produced an XML file for later ... 
[17:23:27    INFO]  - starting ANNZ::loadReaders() ... 
[17:23:39    INFO]  - will validate that the training was not a complete failure ... 
[17:23:39    INFO]  - training seems to have been successful! will move on ...
[17:23:39    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[17:23:46    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:23:48    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:23:48    INFO] ----------------------------------------------------------------------------------------------------
[17:23:48    INFO]  - will book (ANNZ_0_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[17:23:48    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:23:48    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[17:23:48    INFO]    - weights:            1
[17:23:48    INFO] ----------------------------------------------------------------------------------------------------
[17:23:49    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:24:00    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_0 ... 
[17:24:00    INFO]  - Will gen. input-parameter errors ...
[17:24:03    INFO]  - starting ANNZ::loadReaders() ... 
[17:24:17    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_train*.root
[17:32:24    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:32:24    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:32:24    INFO]  -----------------------------------------------------------------------------------------------------------
[17:32:24    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_valid*.root
[17:34:55    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:34:55    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:34:55    INFO]  -----------------------------------------------------------------------------------------------------------
[17:34:55    INFO]  - Saving file ./output/SPEC_advanced15/regres/train/ANNZ_0/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:34:57    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:34:57    INFO]  - will validate that the bias-correction actually improved the result ...
[17:34:58    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:34:58    INFO]  - Will use (1) MLMs from the input chain: ANNZ_0,
[17:35:28    INFO]  - Writing to plotting directory output/SPEC_advanced15/regres/train/ANNZ_0/plots/
[17:35:59        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced15/regres/train/ANNZ_0/plots output/SPEC_advanced15/regres/train/ANNZ_0/plots_biasCor_before
[17:35:59    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:35:59    INFO]  - Will use (1) MLMs from the input chain: ANNZ_0,
[17:36:29   ERROR]  - ... ------------------------------------------------------------ 
[17:36:29   ERROR]  - MESSAGE -  - Failed system-call (mkdir -p output/SPEC_advanced15/regres/train/ANNZ_0/plots/) - sysReturn = -1... 
[17:36:29   ERROR]  - FROM    - FILE: ../src/Utils.cpp , LINE: 398 , (Mar  8 2019 14:46:52) 
[17:36:29   ERROR]  - ..... ABORTING !!! 
[17:36:29   ERROR]  ------------------------------------------------------------ ... - 
(17:36 CRITICAL) [41;37;1mrunANNZ failed !!![0m
(17:36 CRITICAL) [41;37;1mWill terminate !!!![0m
(17:37 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(17:37 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(17:37 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(17:37 INFO) [40;37;1m - 14/03/19 17:37:36 - starting ANNZ[0m
(17:37 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:37 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m5[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced15[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=380:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:37 INFO) 
[17:37:36    INFO]  -----------------------------------------------------
[17:37:36    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:37:36    INFO]  -----------------------------------------------------------------------------------------------------------
[17:37:38    INFO]  - starting ANNZ::Init()  ... 
[17:37:39    INFO]  - found trained "ANNZ_0" (./output/SPEC_advanced15/regres/train/ANNZ_0/ANNZ_0_weights/randomReg_ANNZ_0.weights.xml)
[17:37:39    INFO]  -- Nothing to be done... (can force re-training with "overwriteExistingTrain")

(17:37 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:37 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m5[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced15[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:37 INFO) 
[17:37:39    INFO]  -----------------------------------------------------
[17:37:39    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:37:39    INFO]  -----------------------------------------------------------------------------------------------------------
[17:37:40    INFO]  - starting ANNZ::Init()  ... 
[17:37:41    INFO]  - Saving run information in ./output/SPEC_advanced15/regres/train/ANNZ_1/saveOpt.txt ...
[17:37:49    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:37:50    INFO] ----------------------------------------------------------------------------------------------------
[17:37:50    INFO]  - will book (ANNZ_1) method(BDT) with options: :NTrees=290:BoostType=AdaBoost:VarTransform=N,P
[17:37:50    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:37:50    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:37:50    INFO]      cuts (train):        ,
[17:37:50    INFO]      cuts (valid):       
[17:37:50    INFO]    - weights:            1
[17:37:50    INFO] ----------------------------------------------------------------------------------------------------
[17:37:50    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:38:28    INFO]  - Saving MLM information in ./output/SPEC_advanced15/regres/train/ANNZ_1/ANNZ_1_weights/saveTrainOpt_ANNZ_1.txt ...
[17:38:31    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_1 ... 
[17:38:31    INFO]  - Will gen. input-parameter errors ...
[17:38:32    INFO]  - starting ANNZ::loadReaders() ... 
[17:38:37    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_train*.root
[17:41:36    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:41:36    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:41:36    INFO]  -----------------------------------------------------------------------------------------------------------
[17:41:36    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_valid*.root
[17:42:23    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:42:24    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:42:24    INFO]  -----------------------------------------------------------------------------------------------------------
[17:42:24    INFO]  - Saving file ./output/SPEC_advanced15/regres/train/ANNZ_1/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:42:25    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:42:25    INFO]  - will try to derive a bias correction ... 
[17:42:25    INFO]  - will validate that training produced an XML file for later ... 
[17:42:25    INFO]  - starting ANNZ::loadReaders() ... 
[17:42:26    INFO]  - will validate that the training was not a complete failure ... 
[17:42:26    INFO]  - training seems to have been successful! will move on ...
[17:42:26    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[17:42:30    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:42:32    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:42:32    INFO] ----------------------------------------------------------------------------------------------------
[17:42:32    INFO]  - will book (ANNZ_1_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[17:42:32    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:42:32    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[17:42:32    INFO]    - weights:            1
[17:42:32    INFO] ----------------------------------------------------------------------------------------------------
[17:42:33    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:42:42    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_1 ... 
[17:42:42    INFO]  - Will gen. input-parameter errors ...
[17:42:44    INFO]  - starting ANNZ::loadReaders() ... 
[17:42:51    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_train*.root
[17:46:13    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:46:13    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:46:13    INFO]  -----------------------------------------------------------------------------------------------------------
[17:46:13    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_valid*.root
[17:46:48    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:46:48    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:46:48    INFO]  -----------------------------------------------------------------------------------------------------------
[17:46:49    INFO]  - Saving file ./output/SPEC_advanced15/regres/train/ANNZ_1/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:46:49    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:46:49    INFO]  - will validate that the bias-correction actually improved the result ...
[17:46:50    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:46:50    INFO]  - Will use (1) MLMs from the input chain: ANNZ_1,
Warning in <Fit>: Fit data is empty 
[17:46:57    INFO]  - Writing to plotting directory output/SPEC_advanced15/regres/train/ANNZ_1/plots/
[17:47:11        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced15/regres/train/ANNZ_1/plots output/SPEC_advanced15/regres/train/ANNZ_1/plots_biasCor_before
[17:47:11    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:47:11    INFO]  - Will use (1) MLMs from the input chain: ANNZ_1,
[17:47:20    INFO]  - Writing to plotting directory output/SPEC_advanced15/regres/train/ANNZ_1/plots/
[17:47:37        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced15/regres/train/ANNZ_1/plots output/SPEC_advanced15/regres/train/ANNZ_1/plots_biasCor_after
[17:47:37    INFO]  - Got original [KS-test,N_poiss]: [0.101389 , 6.40459] , after the bias-correction: [0.0447009 , 5.72421] --> will KEEP the correction !

(17:47 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:47 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m5[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced15[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=530:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:47 INFO) 
[17:47:42    INFO]  -----------------------------------------------------
[17:47:42    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:47:42    INFO]  -----------------------------------------------------------------------------------------------------------
[17:47:42    INFO]  - starting ANNZ::Init()  ... 
[17:47:44    INFO]  - Saving run information in ./output/SPEC_advanced15/regres/train/ANNZ_2/saveOpt.txt ...
[17:47:51    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:47:52    INFO] ----------------------------------------------------------------------------------------------------
[17:47:52    INFO]  - will book (ANNZ_2) method(BDT) with options: :NTrees=530:BoostType=AdaBoostR2:VarTransform=N,P
[17:47:52    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:47:52    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:47:52    INFO]      cuts (train):        ,
[17:47:52    INFO]      cuts (valid):       
[17:47:52    INFO]    - weights:            1
[17:47:52    INFO] ----------------------------------------------------------------------------------------------------
[17:47:52    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:48:56    INFO]  - Saving MLM information in ./output/SPEC_advanced15/regres/train/ANNZ_2/ANNZ_2_weights/saveTrainOpt_ANNZ_2.txt ...
[17:49:00    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_2 ... 
[17:49:00    INFO]  - Will gen. input-parameter errors ...
[17:49:02    INFO]  - starting ANNZ::loadReaders() ... 
[17:49:20    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_train*.root
[18:05:45    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:05:45    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:05:45    INFO]  -----------------------------------------------------------------------------------------------------------
[18:05:46    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_valid*.root
[18:11:08    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:11:08    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:11:08    INFO]  -----------------------------------------------------------------------------------------------------------
[18:11:08    INFO]  - Saving file ./output/SPEC_advanced15/regres/train/ANNZ_2/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:11:10    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:11:10    INFO]  - will try to derive a bias correction ... 
[18:11:10    INFO]  - will validate that training produced an XML file for later ... 
[18:11:10    INFO]  - starting ANNZ::loadReaders() ... 
[18:11:16    INFO]  - will validate that the training was not a complete failure ... 
[18:11:17    INFO]  - training seems to have been successful! will move on ...
[18:11:17    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[18:11:23    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:11:24    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:11:24    INFO] ----------------------------------------------------------------------------------------------------
[18:11:24    INFO]  - will book (ANNZ_2_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[18:11:24    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:11:24    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[18:11:24    INFO]    - weights:            1
[18:11:24    INFO] ----------------------------------------------------------------------------------------------------
[18:11:25    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:11:37    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_2 ... 
[18:11:37    INFO]  - Will gen. input-parameter errors ...
[18:11:41    INFO]  - starting ANNZ::loadReaders() ... 
[18:12:02    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_train*.root
[18:30:12    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:30:12    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:30:12    INFO]  -----------------------------------------------------------------------------------------------------------
[18:30:12    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_valid*.root
[18:34:13    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:34:13    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:34:13    INFO]  -----------------------------------------------------------------------------------------------------------
[18:34:13    INFO]  - Saving file ./output/SPEC_advanced15/regres/train/ANNZ_2/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:34:14    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:34:14    INFO]  - will validate that the bias-correction actually improved the result ...
[18:34:15    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:34:15    INFO]  - Will use (1) MLMs from the input chain: ANNZ_2,
[18:34:21    INFO]  - Writing to plotting directory output/SPEC_advanced15/regres/train/ANNZ_2/plots/
[18:34:33        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced15/regres/train/ANNZ_2/plots output/SPEC_advanced15/regres/train/ANNZ_2/plots_biasCor_before
[18:34:33    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:34:33    INFO]  - Will use (1) MLMs from the input chain: ANNZ_2,
[18:34:38    INFO]  - Writing to plotting directory output/SPEC_advanced15/regres/train/ANNZ_2/plots/
[18:34:50        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced15/regres/train/ANNZ_2/plots output/SPEC_advanced15/regres/train/ANNZ_2/plots_biasCor_after
[18:34:50    INFO]  - Got original [KS-test,N_poiss]: [0.0700202 , 6.51708] , after the bias-correction: [0.0317051 , 5.55774] --> will KEEP the correction !

(18:34 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:34 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m5[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced15[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=850:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:34 INFO) 
[18:34:54    INFO]  -----------------------------------------------------
[18:34:54    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:34:54    INFO]  -----------------------------------------------------------------------------------------------------------
[18:34:55    INFO]  - starting ANNZ::Init()  ... 
[18:34:56    INFO]  - Saving run information in ./output/SPEC_advanced15/regres/train/ANNZ_3/saveOpt.txt ...
[18:35:02    INFO]  - starting ANNZ::Train_singleReg() ... 
[18:35:02    INFO] ----------------------------------------------------------------------------------------------------
[18:35:02    INFO]  - will book (ANNZ_3) method(BDT) with options: :NTrees=850:BoostType=Bagging:VarTransform=N
[18:35:02    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:35:02    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[18:35:02    INFO]      cuts (train):        ,
[18:35:02    INFO]      cuts (valid):       
[18:35:02    INFO]    - weights:            1
[18:35:02    INFO] ----------------------------------------------------------------------------------------------------
[18:35:02    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:36:39    INFO]  - Saving MLM information in ./output/SPEC_advanced15/regres/train/ANNZ_3/ANNZ_3_weights/saveTrainOpt_ANNZ_3.txt ...
[18:36:51    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_3 ... 
[18:36:51    INFO]  - Will gen. input-parameter errors ...
[18:36:55    INFO]  - starting ANNZ::loadReaders() ... 
[18:37:19    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_train*.root
[18:47:43    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:47:43    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:47:43    INFO]  -----------------------------------------------------------------------------------------------------------
[18:47:43    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_valid*.root
[18:50:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:50:19    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:50:19    INFO]  -----------------------------------------------------------------------------------------------------------
[18:50:19    INFO]  - Saving file ./output/SPEC_advanced15/regres/train/ANNZ_3/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:50:24    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:50:24    INFO]  - will try to derive a bias correction ... 
[18:50:24    INFO]  - will validate that training produced an XML file for later ... 
[18:50:24    INFO]  - starting ANNZ::loadReaders() ... 
[18:50:37    INFO]  - will validate that the training was not a complete failure ... 
[18:50:37    INFO]  - training seems to have been successful! will move on ...
[18:50:37    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[18:50:45    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:50:46    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:50:47    INFO] ----------------------------------------------------------------------------------------------------
[18:50:47    INFO]  - will book (ANNZ_3_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[18:50:47    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:50:47    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[18:50:47    INFO]    - weights:            1
[18:50:47    INFO] ----------------------------------------------------------------------------------------------------
[18:50:47    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:51:01    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_3 ... 
[18:51:01    INFO]  - Will gen. input-parameter errors ...
[18:51:05    INFO]  - starting ANNZ::loadReaders() ... 
[18:51:26    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_train*.root
[19:03:12    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:03:12    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[19:03:12    INFO]  -----------------------------------------------------------------------------------------------------------
[19:03:12    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_valid*.root
[19:06:11    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:06:11    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[19:06:11    INFO]  -----------------------------------------------------------------------------------------------------------
[19:06:12    INFO]  - Saving file ./output/SPEC_advanced15/regres/train/ANNZ_3/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[19:06:15    INFO]  - ending makeTreeRegClsOneMLM() ... 
[19:06:15    INFO]  - will validate that the bias-correction actually improved the result ...
[19:06:15    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:06:15    INFO]  - Will use (1) MLMs from the input chain: ANNZ_3,
Warning in <Fit>: Fit data is empty 
[19:06:23    INFO]  - Writing to plotting directory output/SPEC_advanced15/regres/train/ANNZ_3/plots/
[19:06:36        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced15/regres/train/ANNZ_3/plots output/SPEC_advanced15/regres/train/ANNZ_3/plots_biasCor_before
[19:06:36    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:06:36    INFO]  - Will use (1) MLMs from the input chain: ANNZ_3,
Warning in <Fit>: Fit data is empty 
[19:06:41    INFO]  - Writing to plotting directory output/SPEC_advanced15/regres/train/ANNZ_3/plots/
[19:06:54        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced15/regres/train/ANNZ_3/plots output/SPEC_advanced15/regres/train/ANNZ_3/plots_biasCor_after
[19:06:54    INFO]  - Got original [KS-test,N_poiss]: [0.0840242 , 6.6893] , after the bias-correction: [0.0480618 , 5.67327] --> will KEEP the correction !

(19:06 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(19:06 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m5[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced15[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=640:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(19:06 INFO) 
[19:06:59    INFO]  -----------------------------------------------------
[19:06:59    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[19:06:59    INFO]  -----------------------------------------------------------------------------------------------------------
[19:07:00    INFO]  - starting ANNZ::Init()  ... 
[19:07:01    INFO]  - Saving run information in ./output/SPEC_advanced15/regres/train/ANNZ_4/saveOpt.txt ...
[19:07:07    INFO]  - starting ANNZ::Train_singleReg() ... 
[19:07:08    INFO] ----------------------------------------------------------------------------------------------------
[19:07:08    INFO]  - will book (ANNZ_4) method(BDT) with options: :NTrees=640:BoostType=Bagging:VarTransform=N,P
[19:07:08    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[19:07:08    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[19:07:08    INFO]      cuts (train):        ,
[19:07:08    INFO]      cuts (valid):       
[19:07:08    INFO]    - weights:            1
[19:07:08    INFO] ----------------------------------------------------------------------------------------------------
[19:07:08    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[19:08:26    INFO]  - Saving MLM information in ./output/SPEC_advanced15/regres/train/ANNZ_4/ANNZ_4_weights/saveTrainOpt_ANNZ_4.txt ...
[19:08:32    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_4 ... 
[19:08:32    INFO]  - Will gen. input-parameter errors ...
[19:08:35    INFO]  - starting ANNZ::loadReaders() ... 
[19:08:51    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_train*.root
[19:17:31    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:17:31    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[19:17:31    INFO]  -----------------------------------------------------------------------------------------------------------
[19:17:31    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_valid*.root
[19:19:57    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:19:57    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[19:19:57    INFO]  -----------------------------------------------------------------------------------------------------------
[19:19:57    INFO]  - Saving file ./output/SPEC_advanced15/regres/train/ANNZ_4/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[19:20:00    INFO]  - ending makeTreeRegClsOneMLM() ... 
[19:20:00    INFO]  - will try to derive a bias correction ... 
[19:20:00    INFO]  - will validate that training produced an XML file for later ... 
[19:20:00    INFO]  - starting ANNZ::loadReaders() ... 
[19:20:07    INFO]  - will validate that the training was not a complete failure ... 
[19:20:08    INFO]  - training seems to have been successful! will move on ...
[19:20:08    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[19:20:13    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:20:14    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:20:14    INFO] ----------------------------------------------------------------------------------------------------
[19:20:14    INFO]  - will book (ANNZ_4_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[19:20:14    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[19:20:14    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[19:20:14    INFO]    - weights:            1
[19:20:14    INFO] ----------------------------------------------------------------------------------------------------
[19:20:14    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[19:20:25    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_4 ... 
[19:20:25    INFO]  - Will gen. input-parameter errors ...
[19:20:28    INFO]  - starting ANNZ::loadReaders() ... 
[19:20:47    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_train*.root
[19:31:06    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:31:06    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[19:31:06    INFO]  -----------------------------------------------------------------------------------------------------------
[19:31:06    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced15/rootIn/ANNZ_tree_valid*.root
[19:33:29    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:33:29    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[19:33:29    INFO]  -----------------------------------------------------------------------------------------------------------
[19:33:29    INFO]  - Saving file ./output/SPEC_advanced15/regres/train/ANNZ_4/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[19:33:32    INFO]  - ending makeTreeRegClsOneMLM() ... 
[19:33:32    INFO]  - will validate that the bias-correction actually improved the result ...
[19:33:32    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:33:32    INFO]  - Will use (1) MLMs from the input chain: ANNZ_4,
[19:33:39    INFO]  - Writing to plotting directory output/SPEC_advanced15/regres/train/ANNZ_4/plots/
[19:33:51        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced15/regres/train/ANNZ_4/plots output/SPEC_advanced15/regres/train/ANNZ_4/plots_biasCor_before
[19:33:51    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:33:51    INFO]  - Will use (1) MLMs from the input chain: ANNZ_4,
[19:33:56    INFO]  - Writing to plotting directory output/SPEC_advanced15/regres/train/ANNZ_4/plots/
[19:34:08        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced15/regres/train/ANNZ_4/plots output/SPEC_advanced15/regres/train/ANNZ_4/plots_biasCor_after
[19:34:08    INFO]  - Got original [KS-test,N_poiss]: [0.0934349 , 6.85236] , after the bias-correction: [0.045149 , 5.52924] --> will KEEP the correction !

(19:34 INFO) [40;37;1m - 14/03/19 19:34:13 - finished running ANNZ ![0m
