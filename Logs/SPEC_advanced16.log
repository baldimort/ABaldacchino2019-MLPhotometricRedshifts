(16:59 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(16:59 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(16:59 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(16:59 INFO) [40;37;1m - 14/03/19 16:59:57 - starting ANNZ[0m
(16:59 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(16:59 INFO)    [34msplitTypeTrain[0m[31m=[0m'[32mANNz_data10a.csv[0m' , [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mFalse[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34minDirName[0m[31m=[0m'[32mPAUS/[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34msplitTypeTest[0m[31m=[0m'[32mANNz_data10b.csv[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34minAsciiVars[0m[31m=[0m'[32mF:ref_id;F:zb;F:pz_width;F:odds;F:qz;F:production_id;F:paudm_id;F:ra;F:dec;F:zspec;F:conf;F:i_auto;F:umag;F:bmag;F:vmag;F:gmag;F:rmag;F:jmag;F:kmag;F:i_auto_err;F:umag_err;F:bmag_err;F:vmag_err;F:gmag_err;F:rmag_err;F:jmag_err;F:kmag_err;F:band0_flux;F:band1_flux;F:band2_flux;F:band3_flux;F:band4_flux;F:band5_flux;F:band6_flux;F:band7_flux;F:band8_flux;F:band9_flux;F:band10_flux;F:band11_flux;F:band12_flux;F:band13_flux;F:band14_flux;F:band15_flux;F:band16_flux;F:band17_flux;F:band18_flux;F:band19_flux;F:band20_flux;F:band21_flux;F:band22_flux;F:band23_flux;F:band24_flux;F:band25_flux;F:band26_flux;F:band27_flux;F:band28_flux;F:band29_flux;F:band30_flux;F:band31_flux;F:band32_flux;F:band33_flux;F:band34_flux;F:band35_flux;F:band36_flux;F:band37_flux;F:band38_flux;F:band39_flux;F:band0_flux_error;F:band1_flux_error;F:band2_flux_error;F:band3_flux_error;F:band4_flux_error;F:band5_flux_error;F:band6_flux_error;F:band7_flux_error;F:band8_flux_error;F:band9_flux_error;F:band10_flux_error;F:band11_flux_error;F:band12_flux_error;F:band13_flux_error;F:band14_flux_error;F:band15_flux_error;F:band16_flux_error;F:band17_flux_error;F:band18_flux_error;F:band19_flux_error;F:band20_flux_error;F:band21_flux_error;F:band22_flux_error;F:band23_flux_error;F:band24_flux_error;F:band25_flux_error;F:band26_flux_error;F:band27_flux_error;F:band28_flux_error;F:band29_flux_error;F:band30_flux_error;F:band31_flux_error;F:band32_flux_error;F:band33_flux_error;F:band34_flux_error;F:band35_flux_error;F:band36_flux_error;F:band37_flux_error;F:band38_flux_error;F:band39_flux_error[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mTrue[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(16:59 INFO) 
[16:59:57    INFO]  -----------------------------------------------------
[16:59:57    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[16:59:57    INFO]  -----------------------------------------------------------------------------------------------------------
[17:00:01    INFO]  - starting inputToSplitTree() ... 
[17:00:01    INFO]  - Found 8926 lines in file PAUS/ANNz_data10a.csv -> total so far = 8926 ... 
[17:00:01    INFO]  - Found 2232 lines in file PAUS/ANNz_data10b.csv -> total so far = 2232 ... 
[17:00:01    INFO]  - Now reading-in PAUS/ANNz_data10a.csv ... 
[17:00:03    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:00:03    INFO]  -- ANNZ_tree .......................................... 0  index
[17:00:03    INFO]  -- ANNZ_tree ....................................... 8926  nLine
[17:00:03    INFO]  -- ANNZ_tree ....................................... 8926  nLineFile
[17:00:03    INFO]  -- ANNZ_tree ....................................... 8926  nObj
[17:00:03    INFO]  -- ANNZ_tree .......................................... 0  nTest
[17:00:03    INFO]  -- ANNZ_tree ....................................... 8926  nTrain
[17:00:03    INFO]  -----------------------------------------------------------------------------------------------------------
[17:00:04    INFO]  - Now reading-in PAUS/ANNz_data10b.csv ... 
[17:00:04    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:00:04    INFO]  -- ANNZ_tree .......................................... 0  index
[17:00:04    INFO]  -- ANNZ_tree ...................................... 11158  nLine
[17:00:04    INFO]  -- ANNZ_tree ....................................... 2232  nLineFile
[17:00:04    INFO]  -- ANNZ_tree ....................................... 2232  nObj
[17:00:04    INFO]  -- ANNZ_tree ....................................... 2232  nTest
[17:00:04    INFO]  -- ANNZ_tree ....................................... 8926  nTrain
[17:00:04    INFO]  -----------------------------------------------------------------------------------------------------------
[17:00:05    INFO]  - Writing to plotting directory output/SPEC_advanced16/rootIn/plots/
[17:00:08    INFO]  - Writing to plotting directory output/SPEC_advanced16/rootIn/plots/

(17:00 INFO) [40;37;1m - 14/03/19 17:00:11 - finished running ANNZ ![0m
(17:00 INFO) [34m - Found defined [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m". Setting glob.rootHome to match[0m
(17:00 INFO) [34m - Will use [0m[32mROOTSYS[0m[34m = "[0m[33m/home/andrew/ProjectInstalls/root[0m[34m"[0m
(17:00 INFO) [34m - Adding to [0m[32mLD_LIBRARY_PATH[0m[34m "[0m[33m/home/andrew/ProjectInstalls/root/lib/[0m[34m"[0m
(17:00 INFO) [40;37;1m - 14/03/19 17:00:24 - starting ANNZ[0m
(17:00 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:00 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m0[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=290:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:00 INFO) 
[17:00:24    INFO]  -----------------------------------------------------
[17:00:24    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:00:24    INFO]  -----------------------------------------------------------------------------------------------------------
[17:00:26    INFO]  - starting ANNZ::Init()  ... 
[17:00:28    INFO]  - Saving run information in ./output/SPEC_advanced16/regres/train/ANNZ_0/saveOpt.txt ...
[17:00:36    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:00:38    INFO] ----------------------------------------------------------------------------------------------------
[17:00:38    INFO]  - will book (ANNZ_0) method(BDT) with options: :NTrees=290:BoostType=AdaBoost:VarTransform=N,P
[17:00:38    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:00:38    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:00:38    INFO]      cuts (train):        ,
[17:00:38    INFO]      cuts (valid):       
[17:00:38    INFO]    - weights:            1
[17:00:38    INFO] ----------------------------------------------------------------------------------------------------
[17:00:40    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:01:11    INFO]  - Saving MLM information in ./output/SPEC_advanced16/regres/train/ANNZ_0/ANNZ_0_weights/saveTrainOpt_ANNZ_0.txt ...
[17:01:13    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_0 ... 
[17:01:13    INFO]  - Will gen. input-parameter errors ...
[17:01:15    INFO]  - starting ANNZ::loadReaders() ... 
[17:01:21    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[17:04:21    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:04:21    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:04:21    INFO]  -----------------------------------------------------------------------------------------------------------
[17:04:21    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[17:05:29    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:05:29    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:05:29    INFO]  -----------------------------------------------------------------------------------------------------------
[17:05:31    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_0/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:05:32    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:05:32    INFO]  - will try to derive a bias correction ... 
[17:05:32    INFO]  - will validate that training produced an XML file for later ... 
[17:05:32    INFO]  - starting ANNZ::loadReaders() ... 
[17:05:44    INFO]  - will validate that the training was not a complete failure ... 
[17:05:44    INFO]  - training seems to have been successful! will move on ...
[17:05:44    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[17:05:49    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:05:50    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:05:51    INFO] ----------------------------------------------------------------------------------------------------
[17:05:51    INFO]  - will book (ANNZ_0_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[17:05:51    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:05:51    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[17:05:51    INFO]    - weights:            1
[17:05:51    INFO] ----------------------------------------------------------------------------------------------------
[17:05:51    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:06:04    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_0 ... 
[17:06:04    INFO]  - Will gen. input-parameter errors ...
[17:06:07    INFO]  - starting ANNZ::loadReaders() ... 
[17:06:16    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[17:10:57    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:10:57    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:10:57    INFO]  -----------------------------------------------------------------------------------------------------------
[17:10:57    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[17:12:00    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:12:00    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:12:00    INFO]  -----------------------------------------------------------------------------------------------------------
[17:12:00    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_0/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:12:01    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:12:01    INFO]  - will validate that the bias-correction actually improved the result ...
[17:12:01    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:12:01    INFO]  - Will use (1) MLMs from the input chain: ANNZ_0,
Warning in <Fit>: Fit data is empty 
[17:12:13    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_0/plots/
[17:12:37        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_0/plots output/SPEC_advanced16/regres/train/ANNZ_0/plots_biasCor_before
[17:12:37    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:12:37    INFO]  - Will use (1) MLMs from the input chain: ANNZ_0,
[17:12:45    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_0/plots/
[17:13:08        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_0/plots output/SPEC_advanced16/regres/train/ANNZ_0/plots_biasCor_after
[17:13:08    INFO]  - Got original [KS-test,N_poiss]: [0.101389 , 6.40459] , after the bias-correction: [0.0447009 , 5.72421] --> will KEEP the correction !

(17:13 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:13 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m1[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=250:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:13 INFO) 
[17:13:14    INFO]  -----------------------------------------------------
[17:13:14    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:13:14    INFO]  -----------------------------------------------------------------------------------------------------------
[17:13:17    INFO]  - starting ANNZ::Init()  ... 
[17:13:19    INFO]  - Saving run information in ./output/SPEC_advanced16/regres/train/ANNZ_1/saveOpt.txt ...
[17:13:28    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:13:28    INFO] ----------------------------------------------------------------------------------------------------
[17:13:28    INFO]  - will book (ANNZ_1) method(BDT) with options: :NTrees=250:BoostType=AdaBoost:VarTransform=N
[17:13:28    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:13:28    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:13:28    INFO]      cuts (train):        ,
[17:13:28    INFO]      cuts (valid):       
[17:13:28    INFO]    - weights:            1
[17:13:28    INFO] ----------------------------------------------------------------------------------------------------
[17:13:29    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:13:55    INFO]  - Saving MLM information in ./output/SPEC_advanced16/regres/train/ANNZ_1/ANNZ_1_weights/saveTrainOpt_ANNZ_1.txt ...
[17:13:58    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_1 ... 
[17:13:58    INFO]  - Will gen. input-parameter errors ...
[17:14:00    INFO]  - starting ANNZ::loadReaders() ... 
[17:14:05    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[17:15:25    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:15:25    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:15:25    INFO]  -----------------------------------------------------------------------------------------------------------
[17:15:26    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[17:15:44    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:15:44    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:15:44    INFO]  -----------------------------------------------------------------------------------------------------------
[17:15:44    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_1/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:15:45    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:15:45    INFO]  - will try to derive a bias correction ... 
[17:15:45    INFO]  - will validate that training produced an XML file for later ... 
[17:15:45    INFO]  - starting ANNZ::loadReaders() ... 
[17:15:47    INFO]  - will validate that the training was not a complete failure ... 
[17:15:47    INFO]  - training seems to have been successful! will move on ...
[17:15:47    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[17:15:51    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:15:53    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:15:53    INFO] ----------------------------------------------------------------------------------------------------
[17:15:53    INFO]  - will book (ANNZ_1_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[17:15:53    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:15:53    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[17:15:53    INFO]    - weights:            1
[17:15:53    INFO] ----------------------------------------------------------------------------------------------------
[17:15:53    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:16:04    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_1 ... 
[17:16:04    INFO]  - Will gen. input-parameter errors ...
[17:16:06    INFO]  - starting ANNZ::loadReaders() ... 
[17:16:12    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[17:18:13    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:18:13    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:18:13    INFO]  -----------------------------------------------------------------------------------------------------------
[17:18:13    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[17:18:46    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:18:46    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:18:46    INFO]  -----------------------------------------------------------------------------------------------------------
[17:18:47    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_1/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:18:48    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:18:48    INFO]  - will validate that the bias-correction actually improved the result ...
[17:18:48    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:18:48    INFO]  - Will use (1) MLMs from the input chain: ANNZ_1,
Warning in <Fit>: Fit data is empty 
[17:18:58    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_1/plots/
[17:19:20        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_1/plots output/SPEC_advanced16/regres/train/ANNZ_1/plots_biasCor_before
[17:19:20    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:19:20    INFO]  - Will use (1) MLMs from the input chain: ANNZ_1,
Warning in <Fit>: Fit data is empty 
[17:19:27    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_1/plots/
[17:19:44        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_1/plots output/SPEC_advanced16/regres/train/ANNZ_1/plots_biasCor_after
[17:19:44    INFO]  - Got original [KS-test,N_poiss]: [0.0811114 , 6.11187] , after the bias-correction: [0.0492942 , 6.08769] --> will KEEP the correction !

(17:19 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:19 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m2[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=440:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:19 INFO) 
[17:19:50    INFO]  -----------------------------------------------------
[17:19:50    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:19:50    INFO]  -----------------------------------------------------------------------------------------------------------
[17:19:51    INFO]  - starting ANNZ::Init()  ... 
[17:19:53    INFO]  - Saving run information in ./output/SPEC_advanced16/regres/train/ANNZ_2/saveOpt.txt ...
[17:20:01    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:20:01    INFO] ----------------------------------------------------------------------------------------------------
[17:20:01    INFO]  - will book (ANNZ_2) method(BDT) with options: :NTrees=440:BoostType=AdaBoostR2:VarTransform=N,P
[17:20:01    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:20:01    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:20:01    INFO]      cuts (train):        ,
[17:20:01    INFO]      cuts (valid):       
[17:20:01    INFO]    - weights:            1
[17:20:01    INFO] ----------------------------------------------------------------------------------------------------
[17:20:02    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:21:07    INFO]  - Saving MLM information in ./output/SPEC_advanced16/regres/train/ANNZ_2/ANNZ_2_weights/saveTrainOpt_ANNZ_2.txt ...
[17:21:12    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_2 ... 
[17:21:12    INFO]  - Will gen. input-parameter errors ...
[17:21:15    INFO]  - starting ANNZ::loadReaders() ... 
[17:21:33    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[17:36:15    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:36:15    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:36:15    INFO]  -----------------------------------------------------------------------------------------------------------
[17:36:16    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[17:40:00    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:40:00    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:40:00    INFO]  -----------------------------------------------------------------------------------------------------------
[17:40:00    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_2/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:40:03    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:40:03    INFO]  - will try to derive a bias correction ... 
[17:40:03    INFO]  - will validate that training produced an XML file for later ... 
[17:40:03    INFO]  - starting ANNZ::loadReaders() ... 
[17:40:20    INFO]  - will validate that the training was not a complete failure ... 
[17:40:20    INFO]  - training seems to have been successful! will move on ...
[17:40:20    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[17:40:25    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:40:27    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[17:40:27    INFO] ----------------------------------------------------------------------------------------------------
[17:40:27    INFO]  - will book (ANNZ_2_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[17:40:27    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:40:27    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[17:40:27    INFO]    - weights:            1
[17:40:27    INFO] ----------------------------------------------------------------------------------------------------
[17:40:27    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:40:41    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_2 ... 
[17:40:41    INFO]  - Will gen. input-parameter errors ...
[17:40:44    INFO]  - starting ANNZ::loadReaders() ... 
[17:41:02    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[17:53:17    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:53:17    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[17:53:17    INFO]  -----------------------------------------------------------------------------------------------------------
[17:53:17    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[17:55:59    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[17:55:59    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[17:55:59    INFO]  -----------------------------------------------------------------------------------------------------------
[17:56:00    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_2/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[17:56:01    INFO]  - ending makeTreeRegClsOneMLM() ... 
[17:56:01    INFO]  - will validate that the bias-correction actually improved the result ...
[17:56:01    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:56:01    INFO]  - Will use (1) MLMs from the input chain: ANNZ_2,
[17:56:08    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_2/plots/
[17:56:21        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_2/plots output/SPEC_advanced16/regres/train/ANNZ_2/plots_biasCor_before
[17:56:21    INFO]  - starting ANNZ::doMetricPlots() ... 
[17:56:21    INFO]  - Will use (1) MLMs from the input chain: ANNZ_2,
[17:56:26    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_2/plots/
[17:56:39        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_2/plots output/SPEC_advanced16/regres/train/ANNZ_2/plots_biasCor_after
[17:56:39    INFO]  - Got original [KS-test,N_poiss]: [0.069236 , 6.53002] , after the bias-correction: [0.0309209 , 5.74658] --> will KEEP the correction !

(17:56 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(17:56 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m3[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=340:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(17:56 INFO) 
[17:56:43    INFO]  -----------------------------------------------------
[17:56:43    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[17:56:43    INFO]  -----------------------------------------------------------------------------------------------------------
[17:56:44    INFO]  - starting ANNZ::Init()  ... 
[17:56:45    INFO]  - Saving run information in ./output/SPEC_advanced16/regres/train/ANNZ_3/saveOpt.txt ...
[17:56:51    INFO]  - starting ANNZ::Train_singleReg() ... 
[17:56:52    INFO] ----------------------------------------------------------------------------------------------------
[17:56:52    INFO]  - will book (ANNZ_3) method(BDT) with options: :NTrees=340:BoostType=Bagging:VarTransform=N,P
[17:56:52    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[17:56:52    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[17:56:52    INFO]      cuts (train):        ,
[17:56:52    INFO]      cuts (valid):       
[17:56:52    INFO]    - weights:            1
[17:56:52    INFO] ----------------------------------------------------------------------------------------------------
[17:56:52    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[17:57:30    INFO]  - Saving MLM information in ./output/SPEC_advanced16/regres/train/ANNZ_3/ANNZ_3_weights/saveTrainOpt_ANNZ_3.txt ...
[17:57:34    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_3 ... 
[17:57:34    INFO]  - Will gen. input-parameter errors ...
[17:57:36    INFO]  - starting ANNZ::loadReaders() ... 
[17:57:45    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[18:00:59    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:00:59    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:00:59    INFO]  -----------------------------------------------------------------------------------------------------------
[18:00:59    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[18:01:43    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:01:43    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:01:43    INFO]  -----------------------------------------------------------------------------------------------------------
[18:01:43    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_3/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:01:44    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:01:44    INFO]  - will try to derive a bias correction ... 
[18:01:44    INFO]  - will validate that training produced an XML file for later ... 
[18:01:44    INFO]  - starting ANNZ::loadReaders() ... 
[18:01:48    INFO]  - will validate that the training was not a complete failure ... 
[18:01:48    INFO]  - training seems to have been successful! will move on ...
[18:01:48    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[18:01:53    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:01:54    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:01:54    INFO] ----------------------------------------------------------------------------------------------------
[18:01:54    INFO]  - will book (ANNZ_3_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[18:01:54    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:01:54    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[18:01:54    INFO]    - weights:            1
[18:01:54    INFO] ----------------------------------------------------------------------------------------------------
[18:01:54    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:02:04    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_3 ... 
[18:02:04    INFO]  - Will gen. input-parameter errors ...
[18:02:07    INFO]  - starting ANNZ::loadReaders() ... 
[18:02:17    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[18:05:27    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:05:27    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:05:27    INFO]  -----------------------------------------------------------------------------------------------------------
[18:05:27    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[18:06:14    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:06:14    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:06:14    INFO]  -----------------------------------------------------------------------------------------------------------
[18:06:14    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_3/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:06:16    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:06:16    INFO]  - will validate that the bias-correction actually improved the result ...
[18:06:16    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:06:16    INFO]  - Will use (1) MLMs from the input chain: ANNZ_3,
[18:06:23    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_3/plots/
[18:06:43        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_3/plots output/SPEC_advanced16/regres/train/ANNZ_3/plots_biasCor_before
[18:06:43    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:06:43    INFO]  - Will use (1) MLMs from the input chain: ANNZ_3,
[18:06:53    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_3/plots/
[18:07:19        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_3/plots output/SPEC_advanced16/regres/train/ANNZ_3/plots_biasCor_after
[18:07:19    INFO]  - Got original [KS-test,N_poiss]: [0.0934349 , 6.86915] , after the bias-correction: [0.0444768 , 5.62586] --> will KEEP the correction !

(18:07 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:07 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m4[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=400:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:07 INFO) 
[18:07:25    INFO]  -----------------------------------------------------
[18:07:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:07:25    INFO]  -----------------------------------------------------------------------------------------------------------
[18:07:26    INFO]  - starting ANNZ::Init()  ... 
[18:07:29    INFO]  - Saving run information in ./output/SPEC_advanced16/regres/train/ANNZ_4/saveOpt.txt ...
[18:07:37    INFO]  - starting ANNZ::Train_singleReg() ... 
[18:07:37    INFO] ----------------------------------------------------------------------------------------------------
[18:07:37    INFO]  - will book (ANNZ_4) method(BDT) with options: :NTrees=400:BoostType=Bagging:VarTransform=N,P
[18:07:37    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:07:37    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[18:07:37    INFO]      cuts (train):        ,
[18:07:37    INFO]      cuts (valid):       
[18:07:37    INFO]    - weights:            1
[18:07:37    INFO] ----------------------------------------------------------------------------------------------------
[18:07:38    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:08:31    INFO]  - Saving MLM information in ./output/SPEC_advanced16/regres/train/ANNZ_4/ANNZ_4_weights/saveTrainOpt_ANNZ_4.txt ...
[18:08:37    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_4 ... 
[18:08:37    INFO]  - Will gen. input-parameter errors ...
[18:08:40    INFO]  - starting ANNZ::loadReaders() ... 
[18:08:53    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[18:14:06    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:14:06    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:14:06    INFO]  -----------------------------------------------------------------------------------------------------------
[18:14:06    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[18:15:22    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:15:22    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:15:22    INFO]  -----------------------------------------------------------------------------------------------------------
[18:15:23    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_4/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:15:25    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:15:25    INFO]  - will try to derive a bias correction ... 
[18:15:25    INFO]  - will validate that training produced an XML file for later ... 
[18:15:25    INFO]  - starting ANNZ::loadReaders() ... 
[18:15:32    INFO]  - will validate that the training was not a complete failure ... 
[18:15:32    INFO]  - training seems to have been successful! will move on ...
[18:15:32    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[18:15:37    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:15:38    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:15:39    INFO] ----------------------------------------------------------------------------------------------------
[18:15:39    INFO]  - will book (ANNZ_4_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[18:15:39    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:15:39    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[18:15:39    INFO]    - weights:            1
[18:15:39    INFO] ----------------------------------------------------------------------------------------------------
[18:15:39    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:15:51    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_4 ... 
[18:15:51    INFO]  - Will gen. input-parameter errors ...
[18:15:53    INFO]  - starting ANNZ::loadReaders() ... 
[18:16:06    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[18:21:07    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:21:07    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:21:07    INFO]  -----------------------------------------------------------------------------------------------------------
[18:21:07    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[18:22:22    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:22:22    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:22:22    INFO]  -----------------------------------------------------------------------------------------------------------
[18:22:22    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_4/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:22:24    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:22:24    INFO]  - will validate that the bias-correction actually improved the result ...
[18:22:24    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:22:24    INFO]  - Will use (1) MLMs from the input chain: ANNZ_4,
[18:22:31    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_4/plots/
[18:22:47        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_4/plots output/SPEC_advanced16/regres/train/ANNZ_4/plots_biasCor_before
[18:22:47    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:22:47    INFO]  - Will use (1) MLMs from the input chain: ANNZ_4,
[18:22:52    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_4/plots/
[18:23:07        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_4/plots output/SPEC_advanced16/regres/train/ANNZ_4/plots_biasCor_after
[18:23:07    INFO]  - Got original [KS-test,N_poiss]: [0.0929868 , 6.91132] , after the bias-correction: [0.0448129 , 5.66772] --> will KEEP the correction !

(18:23 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:23 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m5[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=260:BoostType=AdaBoostR2:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:23 INFO) 
[18:23:12    INFO]  -----------------------------------------------------
[18:23:12    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:23:12    INFO]  -----------------------------------------------------------------------------------------------------------
[18:23:13    INFO]  - starting ANNZ::Init()  ... 
[18:23:14    INFO]  - Saving run information in ./output/SPEC_advanced16/regres/train/ANNZ_5/saveOpt.txt ...
[18:23:21    INFO]  - starting ANNZ::Train_singleReg() ... 
[18:23:21    INFO] ----------------------------------------------------------------------------------------------------
[18:23:21    INFO]  - will book (ANNZ_5) method(BDT) with options: :NTrees=260:BoostType=AdaBoostR2:VarTransform=N,P
[18:23:21    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:23:21    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[18:23:21    INFO]      cuts (train):        ,
[18:23:21    INFO]      cuts (valid):       
[18:23:21    INFO]    - weights:            1
[18:23:21    INFO] ----------------------------------------------------------------------------------------------------
[18:23:21    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:23:52    INFO]  - Saving MLM information in ./output/SPEC_advanced16/regres/train/ANNZ_5/ANNZ_5_weights/saveTrainOpt_ANNZ_5.txt ...
[18:23:54    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_5 ... 
[18:23:54    INFO]  - Will gen. input-parameter errors ...
[18:23:56    INFO]  - starting ANNZ::loadReaders() ... 
[18:24:03    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[18:28:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:28:35    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:28:35    INFO]  -----------------------------------------------------------------------------------------------------------
[18:28:35    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[18:29:42    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:29:42    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:29:42    INFO]  -----------------------------------------------------------------------------------------------------------
[18:29:42    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_5/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:29:43    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:29:43    INFO]  - will try to derive a bias correction ... 
[18:29:43    INFO]  - will validate that training produced an XML file for later ... 
[18:29:43    INFO]  - starting ANNZ::loadReaders() ... 
[18:29:45    INFO]  - will validate that the training was not a complete failure ... 
[18:29:45    INFO]  - training seems to have been successful! will move on ...
[18:29:45    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[18:29:49    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:29:50    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:29:50    INFO] ----------------------------------------------------------------------------------------------------
[18:29:50    INFO]  - will book (ANNZ_5_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[18:29:50    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:29:50    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[18:29:50    INFO]    - weights:            1
[18:29:50    INFO] ----------------------------------------------------------------------------------------------------
[18:29:50    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:29:58    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_5 ... 
[18:29:58    INFO]  - Will gen. input-parameter errors ...
[18:29:59    INFO]  - starting ANNZ::loadReaders() ... 
[18:30:06    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[18:34:19    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:34:19    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:34:19    INFO]  -----------------------------------------------------------------------------------------------------------
[18:34:19    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[18:35:31    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:35:31    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:35:31    INFO]  -----------------------------------------------------------------------------------------------------------
[18:35:31    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_5/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:35:32    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:35:32    INFO]  - will validate that the bias-correction actually improved the result ...
[18:35:32    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:35:32    INFO]  - Will use (1) MLMs from the input chain: ANNZ_5,
[18:35:41    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_5/plots/
[18:36:01        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_5/plots output/SPEC_advanced16/regres/train/ANNZ_5/plots_biasCor_before
[18:36:01    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:36:01    INFO]  - Will use (1) MLMs from the input chain: ANNZ_5,
[18:36:07    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_5/plots/
[18:36:22        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_5/plots output/SPEC_advanced16/regres/train/ANNZ_5/plots_biasCor_after
[18:36:22    INFO]  - Got original [KS-test,N_poiss]: [0.06946 , 6.60945] , after the bias-correction: [0.0319292 , 5.48112] --> will KEEP the correction !

(18:36 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:36 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m6[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=280:BoostType=Bagging:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:36 INFO) 
[18:36:25    INFO]  -----------------------------------------------------
[18:36:25    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:36:25    INFO]  -----------------------------------------------------------------------------------------------------------
[18:36:26    INFO]  - starting ANNZ::Init()  ... 
[18:36:27    INFO]  - Saving run information in ./output/SPEC_advanced16/regres/train/ANNZ_6/saveOpt.txt ...
[18:36:33    INFO]  - starting ANNZ::Train_singleReg() ... 
[18:36:33    INFO] ----------------------------------------------------------------------------------------------------
[18:36:33    INFO]  - will book (ANNZ_6) method(BDT) with options: :NTrees=280:BoostType=Bagging:VarTransform=N,P
[18:36:33    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:36:33    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[18:36:33    INFO]      cuts (train):        ,
[18:36:33    INFO]      cuts (valid):       
[18:36:33    INFO]    - weights:            1
[18:36:33    INFO] ----------------------------------------------------------------------------------------------------
[18:36:34    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:37:09    INFO]  - Saving MLM information in ./output/SPEC_advanced16/regres/train/ANNZ_6/ANNZ_6_weights/saveTrainOpt_ANNZ_6.txt ...
[18:37:12    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_6 ... 
[18:37:12    INFO]  - Will gen. input-parameter errors ...
[18:37:14    INFO]  - starting ANNZ::loadReaders() ... 
[18:37:20    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[18:39:45    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:39:45    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:39:45    INFO]  -----------------------------------------------------------------------------------------------------------
[18:39:45    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[18:40:22    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:40:22    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:40:22    INFO]  -----------------------------------------------------------------------------------------------------------
[18:40:22    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_6/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:40:23    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:40:23    INFO]  - will try to derive a bias correction ... 
[18:40:23    INFO]  - will validate that training produced an XML file for later ... 
[18:40:23    INFO]  - starting ANNZ::loadReaders() ... 
[18:40:26    INFO]  - will validate that the training was not a complete failure ... 
[18:40:26    INFO]  - training seems to have been successful! will move on ...
[18:40:26    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[18:40:30    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:40:31    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:40:32    INFO] ----------------------------------------------------------------------------------------------------
[18:40:32    INFO]  - will book (ANNZ_6_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[18:40:32    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:40:32    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[18:40:32    INFO]    - weights:            1
[18:40:32    INFO] ----------------------------------------------------------------------------------------------------
[18:40:32    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:40:41    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_6 ... 
[18:40:41    INFO]  - Will gen. input-parameter errors ...
[18:40:43    INFO]  - starting ANNZ::loadReaders() ... 
[18:40:51    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[18:43:27    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:43:27    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:43:27    INFO]  -----------------------------------------------------------------------------------------------------------
[18:43:27    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[18:44:02    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:44:02    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:44:02    INFO]  -----------------------------------------------------------------------------------------------------------
[18:44:02    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_6/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:44:03    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:44:03    INFO]  - will validate that the bias-correction actually improved the result ...
[18:44:03    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:44:03    INFO]  - Will use (1) MLMs from the input chain: ANNZ_6,
[18:44:10    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_6/plots/
[18:44:23        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_6/plots output/SPEC_advanced16/regres/train/ANNZ_6/plots_biasCor_before
[18:44:23    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:44:23    INFO]  - Will use (1) MLMs from the input chain: ANNZ_6,
[18:44:28    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_6/plots/
[18:44:40        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_6/plots output/SPEC_advanced16/regres/train/ANNZ_6/plots_biasCor_after
[18:44:41    INFO]  - Got original [KS-test,N_poiss]: [0.093883 , 6.85735] , after the bias-correction: [0.041564 , 5.42448] --> will KEEP the correction !

(18:44 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:44 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m7[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=730:BoostType=AdaBoost:VarTransform=N,P[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:44 INFO) 
[18:44:44    INFO]  -----------------------------------------------------
[18:44:44    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:44:44    INFO]  -----------------------------------------------------------------------------------------------------------
[18:44:45    INFO]  - starting ANNZ::Init()  ... 
[18:44:46    INFO]  - Saving run information in ./output/SPEC_advanced16/regres/train/ANNZ_7/saveOpt.txt ...
[18:44:52    INFO]  - starting ANNZ::Train_singleReg() ... 
[18:44:52    INFO] ----------------------------------------------------------------------------------------------------
[18:44:52    INFO]  - will book (ANNZ_7) method(BDT) with options: :NTrees=730:BoostType=AdaBoost:VarTransform=N,P
[18:44:52    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:44:52    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[18:44:52    INFO]      cuts (train):        ,
[18:44:52    INFO]      cuts (valid):       
[18:44:52    INFO]    - weights:            1
[18:44:52    INFO] ----------------------------------------------------------------------------------------------------
[18:44:53    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:45:43    INFO]  - Saving MLM information in ./output/SPEC_advanced16/regres/train/ANNZ_7/ANNZ_7_weights/saveTrainOpt_ANNZ_7.txt ...
[18:45:46    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_7 ... 
[18:45:46    INFO]  - Will gen. input-parameter errors ...
[18:45:47    INFO]  - starting ANNZ::loadReaders() ... 
[18:45:56    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[18:51:15    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:51:15    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:51:15    INFO]  -----------------------------------------------------------------------------------------------------------
[18:51:15    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[18:52:28    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:52:28    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:52:28    INFO]  -----------------------------------------------------------------------------------------------------------
[18:52:28    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_7/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:52:29    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:52:29    INFO]  - will try to derive a bias correction ... 
[18:52:29    INFO]  - will validate that training produced an XML file for later ... 
[18:52:29    INFO]  - starting ANNZ::loadReaders() ... 
[18:52:32    INFO]  - will validate that the training was not a complete failure ... 
[18:52:32    INFO]  - training seems to have been successful! will move on ...
[18:52:32    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[18:52:35    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:52:36    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[18:52:37    INFO] ----------------------------------------------------------------------------------------------------
[18:52:37    INFO]  - will book (ANNZ_7_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[18:52:37    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:52:37    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[18:52:37    INFO]    - weights:            1
[18:52:37    INFO] ----------------------------------------------------------------------------------------------------
[18:52:37    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:52:46    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_7 ... 
[18:52:46    INFO]  - Will gen. input-parameter errors ...
[18:52:47    INFO]  - starting ANNZ::loadReaders() ... 
[18:52:54    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[18:56:31    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:56:31    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[18:56:31    INFO]  -----------------------------------------------------------------------------------------------------------
[18:56:31    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[18:57:20    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[18:57:20    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[18:57:20    INFO]  -----------------------------------------------------------------------------------------------------------
[18:57:20    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_7/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[18:57:21    INFO]  - ending makeTreeRegClsOneMLM() ... 
[18:57:21    INFO]  - will validate that the bias-correction actually improved the result ...
[18:57:22    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:57:22    INFO]  - Will use (1) MLMs from the input chain: ANNZ_7,
[18:57:29    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_7/plots/
[18:57:43        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_7/plots output/SPEC_advanced16/regres/train/ANNZ_7/plots_biasCor_before
[18:57:43    INFO]  - starting ANNZ::doMetricPlots() ... 
[18:57:43    INFO]  - Will use (1) MLMs from the input chain: ANNZ_7,
[18:57:49    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_7/plots/
[18:58:14        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_7/plots output/SPEC_advanced16/regres/train/ANNZ_7/plots_biasCor_after
[18:58:14    INFO]  - Got original [KS-test,N_poiss]: [0.101725 , 6.42205] , after the bias-correction: [0.044925 , 5.76303] --> will KEEP the correction !

(18:58 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(18:58 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m8[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=280:BoostType=Bagging:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(18:58 INFO) 
[18:58:19    INFO]  -----------------------------------------------------
[18:58:19    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[18:58:19    INFO]  -----------------------------------------------------------------------------------------------------------
[18:58:20    INFO]  - starting ANNZ::Init()  ... 
[18:58:21    INFO]  - Saving run information in ./output/SPEC_advanced16/regres/train/ANNZ_8/saveOpt.txt ...
[18:58:28    INFO]  - starting ANNZ::Train_singleReg() ... 
[18:58:28    INFO] ----------------------------------------------------------------------------------------------------
[18:58:28    INFO]  - will book (ANNZ_8) method(BDT) with options: :NTrees=280:BoostType=Bagging:VarTransform=N
[18:58:28    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[18:58:28    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[18:58:28    INFO]      cuts (train):        ,
[18:58:28    INFO]      cuts (valid):       
[18:58:28    INFO]    - weights:            1
[18:58:28    INFO] ----------------------------------------------------------------------------------------------------
[18:58:29    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[18:58:59    INFO]  - Saving MLM information in ./output/SPEC_advanced16/regres/train/ANNZ_8/ANNZ_8_weights/saveTrainOpt_ANNZ_8.txt ...
[18:59:02    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_8 ... 
[18:59:02    INFO]  - Will gen. input-parameter errors ...
[18:59:04    INFO]  - starting ANNZ::loadReaders() ... 
[18:59:10    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[19:00:35    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:00:35    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[19:00:35    INFO]  -----------------------------------------------------------------------------------------------------------
[19:00:35    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[19:00:56    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:00:56    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[19:00:56    INFO]  -----------------------------------------------------------------------------------------------------------
[19:00:56    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_8/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[19:00:58    INFO]  - ending makeTreeRegClsOneMLM() ... 
[19:00:58    INFO]  - will try to derive a bias correction ... 
[19:00:58    INFO]  - will validate that training produced an XML file for later ... 
[19:00:58    INFO]  - starting ANNZ::loadReaders() ... 
[19:01:01    INFO]  - will validate that the training was not a complete failure ... 
[19:01:01    INFO]  - training seems to have been successful! will move on ...
[19:01:01    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[19:01:05    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:01:06    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:01:06    INFO] ----------------------------------------------------------------------------------------------------
[19:01:06    INFO]  - will book (ANNZ_8_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[19:01:06    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[19:01:06    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[19:01:06    INFO]    - weights:            1
[19:01:06    INFO] ----------------------------------------------------------------------------------------------------
[19:01:06    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[19:01:16    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_8 ... 
[19:01:16    INFO]  - Will gen. input-parameter errors ...
[19:01:17    INFO]  - starting ANNZ::loadReaders() ... 
[19:01:24    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[19:02:50    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:02:50    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[19:02:50    INFO]  -----------------------------------------------------------------------------------------------------------
[19:02:50    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[19:03:12    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:03:12    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[19:03:12    INFO]  -----------------------------------------------------------------------------------------------------------
[19:03:12    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_8/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[19:03:14    INFO]  - ending makeTreeRegClsOneMLM() ... 
[19:03:14    INFO]  - will validate that the bias-correction actually improved the result ...
[19:03:14    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:03:14    INFO]  - Will use (1) MLMs from the input chain: ANNZ_8,
[19:03:20    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_8/plots/
[19:03:32        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_8/plots output/SPEC_advanced16/regres/train/ANNZ_8/plots_biasCor_before
[19:03:32    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:03:32    INFO]  - Will use (1) MLMs from the input chain: ANNZ_8,
[19:03:37    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_8/plots/
[19:03:49        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_8/plots output/SPEC_advanced16/regres/train/ANNZ_8/plots_biasCor_after
[19:03:49    INFO]  - Got original [KS-test,N_poiss]: [0.0838001 , 6.70659] , after the bias-correction: [0.0487341 , 5.7519] --> will KEEP the correction !

(19:03 INFO) [33m - Will run /home/andrew/ProjectInstalls/ANNZ/lib/myANNZ with the following user-options: [0m
(19:03 INFO)    [34mgeneralOptI[0m[31m=[0m'[32m-1[0m' , [34mtrainIndex[0m[31m=[0m'[32m-1[0m' , [34mdoSingleCls[0m[31m=[0m'[32mFalse[0m' , [34mmaxNobj[0m[31m=[0m'[32m0[0m' , [34mdoVerif[0m[31m=[0m'[32mFalse[0m' , [34muserWeights_valid[0m[31m=[0m'[32m[0m' , [34mbiasCorMLMwithInp[0m[31m=[0m'[32mFalse[0m' , [34mgeneralOptS[0m[31m=[0m'[32mNULL[0m' , [34mdoPlots[0m[31m=[0m'[32mTrue[0m' , [34minputVarErrors[0m[31m=[0m'[32mi_auto_err;umag_err;bmag_err;vmag_err;gmag_err;rmag_err;jmag_err;kmag_err;band0_flux_error;band1_flux_error;band2_flux_error;band3_flux_error;band4_flux_error;band5_flux_error;band6_flux_error;band7_flux_error;band8_flux_error;band9_flux_error;band10_flux_error;band11_flux_error;band12_flux_error;band13_flux_error;band14_flux_error;band15_flux_error;band16_flux_error;band17_flux_error;band18_flux_error;band19_flux_error;band20_flux_error;band21_flux_error;band22_flux_error;band23_flux_error;band24_flux_error;band25_flux_error;band26_flux_error;band27_flux_error;band28_flux_error;band29_flux_error;band30_flux_error;band31_flux_error;band32_flux_error;band33_flux_error;band34_flux_error;band35_flux_error;band36_flux_error;band37_flux_error;band38_flux_error;band39_flux_error[0m' , [34mnErrKNN[0m[31m=[0m'[32m90[0m' , [34mdoTrain[0m[31m=[0m'[32mTrue[0m' , [34mnMLMnow[0m[31m=[0m'[32m9[0m' , [34mdoInTrainFlag[0m[31m=[0m'[32mFalse[0m' , [34mnMLMs[0m[31m=[0m'[32m10[0m' , [34mrndOptTypes[0m[31m=[0m'[32mBDT[0m' , [34muserCuts_train[0m[31m=[0m'[32m[0m' , [34minitSeedRnd[0m[31m=[0m'[32m0[0m' , [34msampleFrac_errKNN[0m[31m=[0m'[32m1[0m' , [34muserWeights_train[0m[31m=[0m'[32m[0m' , [34mdoEval[0m[31m=[0m'[32mFalse[0m' , [34mdoBiasCorMLM[0m[31m=[0m'[32mTrue[0m' , [34mdoOptim[0m[31m=[0m'[32mFalse[0m' , [34moutDirName[0m[31m=[0m'[32mSPEC_advanced16[0m' , [34mdoRandomCls[0m[31m=[0m'[32mFalse[0m' , [34minputVariables[0m[31m=[0m'[32mi_auto;umag;bmag;vmag;gmag;rmag;jmag;kmag;band0_flux;band1_flux;band2_flux;band3_flux;band4_flux;band5_flux;band6_flux;band7_flux;band8_flux;band9_flux;band10_flux;band11_flux;band12_flux;band13_flux;band14_flux;band15_flux;band16_flux;band17_flux;band18_flux;band19_flux;band20_flux;band21_flux;band22_flux;band23_flux;band24_flux;band25_flux;band26_flux;band27_flux;band28_flux;band29_flux;band30_flux;band31_flux;band32_flux;band33_flux;band34_flux;band35_flux;band36_flux;band37_flux;band38_flux;band39_flux[0m' , [34mmaxValZ[0m[31m=[0m'[32m1.2[0m' , [34misBatch[0m[31m=[0m'[32mTrue[0m' , [34muserMLMopts[0m[31m=[0m'[32mANNZ_MLM=BDT:NTrees=820:BoostType=AdaBoost:VarTransform=N[0m' , [34mdoClassification[0m[31m=[0m'[32mFalse[0m' , [34mdoAsciiToFits[0m[31m=[0m'[32mFalse[0m' , [34mdoFitsToAscii[0m[31m=[0m'[32mFalse[0m' , [34mdoRandomReg[0m[31m=[0m'[32mTrue[0m' , [34malwaysKeepBiasCor[0m[31m=[0m'[32mFalse[0m' , [34mminValZ[0m[31m=[0m'[32m0.0[0m' , [34mdoGenInputTrees[0m[31m=[0m'[32mFalse[0m' , [34muserCuts_valid[0m[31m=[0m'[32m[0m' , [34mdoSingleReg[0m[31m=[0m'[32mFalse[0m' , [34mdoRegression[0m[31m=[0m'[32mTrue[0m' , [34mdoBinnedCls[0m[31m=[0m'[32mFalse[0m' , [34mbiasCorMLMopt[0m[31m=[0m'[32mANNZ_MLM=BDT:VarTransform=N:NTrees=50:BoostType=AdaBoost[0m' , [34mprintPlotExtension[0m[31m=[0m'[32m.png[0m' , [34mzTrg[0m[31m=[0m'[32mzspec[0m' , [34mdoOnlyKnnErr[0m[31m=[0m'[32mFalse[0m' , 
(19:03 INFO) 
[19:03:53    INFO]  -----------------------------------------------------
[19:03:53    INFO]  - Welcome to ANNZ v2.3.0 (using ROOT v6.14/06) -
[19:03:53    INFO]  -----------------------------------------------------------------------------------------------------------
[19:03:53    INFO]  - starting ANNZ::Init()  ... 
[19:03:55    INFO]  - Saving run information in ./output/SPEC_advanced16/regres/train/ANNZ_9/saveOpt.txt ...
[19:04:01    INFO]  - starting ANNZ::Train_singleReg() ... 
[19:04:01    INFO] ----------------------------------------------------------------------------------------------------
[19:04:01    INFO]  - will book (ANNZ_9) method(BDT) with options: :NTrees=820:BoostType=AdaBoost:VarTransform=N
[19:04:01    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[19:04:01    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000) ,
[19:04:01    INFO]      cuts (train):        ,
[19:04:01    INFO]      cuts (valid):       
[19:04:01    INFO]    - weights:            1
[19:04:01    INFO] ----------------------------------------------------------------------------------------------------
[19:04:02    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[19:05:03    INFO]  - Saving MLM information in ./output/SPEC_advanced16/regres/train/ANNZ_9/ANNZ_9_weights/saveTrainOpt_ANNZ_9.txt ...
[19:05:08    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_9 ... 
[19:05:08    INFO]  - Will gen. input-parameter errors ...
[19:05:10    INFO]  - starting ANNZ::loadReaders() ... 
[19:05:22    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[19:11:18    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:11:18    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[19:11:18    INFO]  -----------------------------------------------------------------------------------------------------------
[19:11:18    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[19:12:50    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:12:50    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[19:12:50    INFO]  -----------------------------------------------------------------------------------------------------------
[19:12:50    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_9/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[19:12:52    INFO]  - ending makeTreeRegClsOneMLM() ... 
[19:12:52    INFO]  - will try to derive a bias correction ... 
[19:12:52    INFO]  - will validate that training produced an XML file for later ... 
[19:12:52    INFO]  - starting ANNZ::loadReaders() ... 
[19:12:55    INFO]  - will validate that the training was not a complete failure ... 
[19:12:56    INFO]  - training seems to have been successful! will move on ...
[19:12:56    INFO]  - starting ANNZ::Train_singleRegBiasCor() ... 
[19:13:00    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:13:02    INFO]  - starting ANNZ::mergeTreeFriends() ... 
[19:13:02    INFO] ----------------------------------------------------------------------------------------------------
[19:13:02    INFO]  - will book (ANNZ_9_bias) method(BDT) with options: :VarTransform=N:NTrees=50:BoostType=AdaBoost
[19:13:02    INFO]    - factory settings:   nTrain_Regression=0:nTest_Regression=0:SplitMode=Random:NormMode=EqualNumEvents
[19:13:02    INFO]    - cuts (all):         (zspec >= 0.000000)&&(zspec <= 1.200000)
[19:13:02    INFO]    - weights:            1
[19:13:02    INFO] ----------------------------------------------------------------------------------------------------
[19:13:03    INFO]  - starting ANNZ::doFactoryTrain() - This may take a while ...
[19:13:18    INFO]  - starting ANNZ::makeTreeRegClsOneMLM() - will create postTrain trees for ANNZ_9 ... 
[19:13:18    INFO]  - Will gen. input-parameter errors ...
[19:13:21    INFO]  - starting ANNZ::loadReaders() ... 
[19:13:32    INFO]  - added chain ANNZ_tree_train(8926) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_train*.root
[19:16:28    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:16:28    INFO]  -- ANNZ_tree_train ................................. 8926  nObj
[19:16:28    INFO]  -----------------------------------------------------------------------------------------------------------
[19:16:28    INFO]  - added chain ANNZ_tree_valid(2232) from ./output/SPEC_advanced16/rootIn/ANNZ_tree_valid*.root
[19:17:12    INFO]  -- COUNTERS ------------------------------------------------------------------------------
[19:17:12    INFO]  -- ANNZ_tree_valid ................................. 2232  nObj
[19:17:12    INFO]  -----------------------------------------------------------------------------------------------------------
[19:17:12    INFO]  - Saving file ./output/SPEC_advanced16/regres/train/ANNZ_9/postTrain/savePostTrainOpt.txt to log the creation time of the trees, and the user-defined cuts and weights for _train, _valid ...
[19:17:13    INFO]  - ending makeTreeRegClsOneMLM() ... 
[19:17:13    INFO]  - will validate that the bias-correction actually improved the result ...
[19:17:13    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:17:13    INFO]  - Will use (1) MLMs from the input chain: ANNZ_9,
Warning in <Fit>: Fit data is empty 
[19:17:20    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_9/plots/
[19:17:33        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_9/plots output/SPEC_advanced16/regres/train/ANNZ_9/plots_biasCor_before
[19:17:33    INFO]  - starting ANNZ::doMetricPlots() ... 
[19:17:33    INFO]  - Will use (1) MLMs from the input chain: ANNZ_9,
Warning in <Fit>: Fit data is empty 
[19:17:38    INFO]  - Writing to plotting directory output/SPEC_advanced16/regres/train/ANNZ_9/plots/
[19:17:50        ]  - Sys-comnd (exit=0) : mv output/SPEC_advanced16/regres/train/ANNZ_9/plots output/SPEC_advanced16/regres/train/ANNZ_9/plots_biasCor_after
[19:17:50    INFO]  - Got original [KS-test,N_poiss]: [0.0824558 , 6.15158] , after the bias-correction: [0.0500785 , 6.09242] --> will KEEP the correction !

(19:17 INFO) [40;37;1m - 14/03/19 19:17:54 - finished running ANNZ ![0m
